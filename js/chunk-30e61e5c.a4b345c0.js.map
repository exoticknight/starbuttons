{"version":3,"sources":["webpack:///./node_modules/lamejs/src/js/common.js","webpack:///./node_modules/core-js/modules/es.object.values.js","webpack:///./node_modules/lamejs/src/js/CalcNoiseData.js","webpack:///./node_modules/core-js/internals/native-url.js","webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./node_modules/lamejs/src/js/VBRSeekInfo.js","webpack:///./node_modules/lamejs/src/js/PsyModel.js","webpack:///./node_modules/lamejs/src/js/IIISideInfo.js","webpack:///./node_modules/core-js/modules/web.url.js","webpack:///./node_modules/lamejs/src/js/GainAnalysis.js","webpack:///./src/views/EditorView.vue?3be3","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///./src/components/HappySynthesizer.ts","webpack:///./src/views/EditorView.vue","webpack:///./src/views/EditorView.vue?4965","webpack:///./src/views/EditorView.vue?b295","webpack:///./node_modules/lamejs/src/js/Presets.js","webpack:///./node_modules/core-js/modules/es.array.for-each.js","webpack:///./node_modules/lamejs/src/js/CBRNewIterationLoop.js","webpack:///./node_modules/lamejs/src/js/Encoder.js","webpack:///./node_modules/core-js/modules/es.array.filter.js","webpack:///./node_modules/core-js/modules/es.object.entries.js","webpack:///./node_modules/interactjs/dist/interact.min.js","webpack:///./node_modules/audio-encoder/src/index.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./node_modules/lamejs/src/js/Reservoir.js","webpack:///./node_modules/lamejs/src/js/Tables.js","webpack:///./node_modules/core-js/internals/string-punycode-to-ascii.js","webpack:///./src/views/EditorView.vue?9a82","webpack:///./node_modules/lamejs/src/js/MPEGMode.js","webpack:///./node_modules/audio-encoder/src/encodeMp3.js","webpack:///./node_modules/lamejs/src/js/BitStream.js","webpack:///./node_modules/core-js/internals/object-to-array.js","webpack:///./node_modules/core-js/internals/inherit-if-required.js","webpack:///./node_modules/lamejs/src/js/ReplayGain.js","webpack:///./node_modules/lamejs/src/js/CalcNoiseResult.js","webpack:///./node_modules/audio-encoder/src/encodeWav.js","webpack:///./node_modules/core-js/internals/number-parse-float.js","webpack:///./node_modules/lamejs/src/js/FFT.js","webpack:///./node_modules/lamejs/src/js/Version.js","webpack:///./node_modules/lamejs/src/js/LameGlobalFlags.js","webpack:///./node_modules/lamejs/src/js/L3Side.js","webpack:///./node_modules/core-js/modules/web.url-search-params.js","webpack:///./node_modules/core-js/modules/es.array.concat.js","webpack:///./node_modules/core-js/internals/get-iterator.js","webpack:///./node_modules/lamejs/src/js/III_psy_xmin.js","webpack:///./node_modules/lamejs/src/js/VBRQuantize.js","webpack:///./node_modules/core-js/modules/es.number.constructor.js","webpack:///./node_modules/lamejs/src/js/ATH.js","webpack:///./node_modules/core-js/modules/es.parse-float.js","webpack:///./node_modules/core-js/modules/es.object.keys.js","webpack:///./node_modules/lamejs/src/js/QuantizePVT.js","webpack:///./node_modules/lamejs/src/js/LameInternalFlags.js","webpack:///./node_modules/lamejs/src/js/NsPsy.js","webpack:///./node_modules/lamejs/src/js/Takehiro.js","webpack:///./node_modules/lamejs/src/js/index.js","webpack:///./node_modules/lamejs/src/js/Quantize.js","webpack:///./node_modules/core-js/modules/es.object.get-own-property-descriptors.js","webpack:///./node_modules/lamejs/src/js/Lame.js","webpack:///./node_modules/lamejs/src/js/VBRTag.js","webpack:///./node_modules/core-js/modules/es.object.get-own-property-descriptor.js","webpack:///./node_modules/lamejs/src/js/MeanBits.js","webpack:///./node_modules/lamejs/src/js/III_psy_ratio.js","webpack:///./node_modules/lamejs/src/js/GrInfo.js","webpack:///./node_modules/lamejs/src/js/NewMDCT.js","webpack:///./node_modules/lamejs/src/js/ScaleFac.js"],"names":["new_byte","count","Int8Array","new_short","Int16Array","new_int","Int32Array","new_float","Float32Array","new_double","Float64Array","new_float_n","args","length","sz","slice","A","i","push","new_int_n","new_short_n","new_array_n","Array","Arrays","a","fromIndex","toIndex","val","arguments","System","src","srcPos","dest","destPos","srcEnd","Util","ShortBlock","ordinal","this","SQRT2","FAST_LOG10","x","Math","log10","FAST_LOG10_X","y","short_block_allowed","short_block_coupled","short_block_dispensed","short_block_forced","Float","VbrMode","MAX_VALUE","vbr_off","vbr_mt","vbr_rh","vbr_abr","vbr_mtrh","vbr_default","assert","module","exports","$","$values","values","target","stat","O","common","CalcNoiseData","global_gain","sfb_count1","step","noise","noise_log","fails","wellKnownSymbol","IS_PURE","ITERATOR","url","URL","searchParams","result","pathname","forEach","value","key","toJSON","sort","href","get","String","URLSearchParams","username","host","hash","undefined","global","DOMIterables","createNonEnumerableProperty","COLLECTION_NAME","Collection","CollectionPrototype","prototype","error","$forEach","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","callbackfn","VBRSeekInfo","sum","seen","want","pos","size","bag","nVbrNumFrames","nBytesWritten","TotalFrameSize","FFT","Encoder","PsyModel","fft","LOG10","rpelev","rpelev2","rpelev_s","rpelev2_s","DELBARK","VO_SCALE","BLKSIZE","temporalmask_sustain_sec","NS_PREECHO_ATT0","NS_PREECHO_ATT1","NS_PREECHO_ATT2","NS_MSFIX","NSFIRLEN","LN_TO_LOG10","NON_LINEAR_SCALE_ENERGY","psycho_loudness_approx","energy","gfc","loudness_power","ATH","eql_w","compute_ffts","gfp","fftenergy","fftenergy_s","wsamp_l","wsamp_lPos","wsamp_s","wsamp_sPos","gr_out","chn","buffer","bufPos","internal_flags","fft_long","fft_short","j","l","r","b","BLKSIZE_s","re","im","totalenergy","HBLKSIZE","tot_ener","analysis","pinfo","energy_save","pe","athaa_loudapprox","loudness_sq","loudness_sq_save","ma_max_i1","ma_max_i2","ma_max_m","I1LIMIT","I2LIMIT","MLIMIT","tab","init_mask_add_max_values","pow","table1","table2","table3","mask_add","m1","m2","kk","shortblock","ratio","f","cb_s","adjust","cb_l","table2_","vbrpsy_mask_add","calc_interchannel_masking","channels_out","sb","SBMAX_l","thm","SBMAX_s","sblock","s","msfix1","mld","mld_l","en","rmid","max","min","rside","mld_s","ns_msfix","msfix","athadjust","msfix2","athlower","ath","bm_l","thmLR","thmM","thmS","bm_s","convert_partition2scalefac_s","eb","thr","enn","thmm","bo_s_sb","bo_s","npart_s","b_lim","w_curr","PSY","bo_s_weight","w_next","convert_partition2scalefac_l","bo_l_sb","bo_l","npart_l","bo_l_weight","compute_masking_s","ebb","m","n","numlines_s","el","s3ind_s","ecb","s3_ss","nb_s1","blocktype_old","SHORT_TYPE","nb_s2","CBANDS","block_type_set","uselongblock","blocktype_d","blocktype","short_blocks","NORM_TYPE","START_TYPE","STOP_TYPE","NS_INTERP","regcoef_s","pecalc_s","mr","masking_lower","pe_s","regcoef_l","pecalc_l","pe_l","calc_energy","avg","numlines_l","rnumlines_l","calc_mask_index_l","mask_idx","last_tab_entry","k","fircoef","vbrpsy_compute_fft_l","vbrpsy_compute_fft_s","vbrpsy_compute_loudness_approximation_l","L3psycho_anal_ns","masking_ratio","masking_MS_ratio","percep_entropy","percep_MS_entropy","numchn","pcfact","wsamp_L","wsamp_S","eb_l","eb_s","ns_hpfsmpl","mask_idx_l","mask_idx_s","fill","mode","MPEGMode","JOINT_STEREO","VBR","ResvMax","firbuf","firbufPos","sum1","sum2","assign","attackThreshold","en_subshort","en_short","attack_intensity","ns_uselongblock","ns_attacks","HBLKSIZE_s","nsPsy","last_en_subshort","pf","pfPos","pfe","p","abs","ers","ers_save","attackthre_s","attackthre","lastAttacks","idx","s3ind","eb2","s3_ll","nb_1","nb_2","STEREO","interChRatio","ATHlower","ppe","type","ppePos","fircoef_","vbrpsy_attack_detection","sub_short_factor","n_chn_out","n_chn_psy","factor","u","v","vbrpsy_skip_masking_s","vbrpsy_skip_masking_l","psyvbr_calc_mask_index_s","vbrpsy_compute_masking_s","float","int","dd","dd_n","avg_mask","last","minval_s","vbrpsy_compute_masking_l","t","ecb_limit","ecb_limit_2","ecb_limit_1","minval_l","vbrpsy_compute_block_type","vbrpsy_apply_block_type","vbrpsy_compute_MS_thresholds","cb_mld","ath_cb","ebM","ebS","thmL","thmR","mld_m","thmMS","s3_func_x","bark","hf_slope","tempy","tempx","exp","norm_s3_func_x","lim_a","lim_b","h","norm","s3_func","temp","sqrt","freq2bark","freq","atan","init_numline","numlines","bo","bm","bval","bval_width","bo_w","sfreq","blksize","scalepos","deltafreq","sbmax","b_frq","sample_freq_frac","partition","ni","j2","bark1","sfb","i1","i2","start","end","arg","floor","f_tmp","cos","PI","bark2","w","init_s3_values","npart","use_old_s3","s3","numberOfNoneZero","s3_x_norm","stereo_demask","ATHformula_GB","L3psycho_anal_vbr","ch01","mld_cb_l","mld_cb_s","new_thmm","psymodel_init","useOldS3","bvl_a","bvl_b","snr_l_a","snr_l_b","snr_s_a","snr_s_b","out_samplerate","experimentalZ","ms_ener_ratio_old","scalefac_band","snr","level","ATHformula","log","init_fft","decay","exp_nspsytune","frame_duration","mode_gr","adjustLimit","ATHtype","freq_inc","eql_balance","ATHcurve","GrInfo","IIISideInfo","tt","main_data_begin","private_bits","resvDrain_pre","resvDrain_post","scfsi","gr","ch","EOF","DESCRIPTORS","USE_NATIVE_URL","defineProperties","redefine","anInstance","has","arrayFrom","codeAt","toASCII","setToStringTag","URLSearchParamsModule","InternalStateModule","NativeURL","getInternalSearchParamsState","getState","setInternalState","set","getInternalURLState","getterFor","INVALID_AUTHORITY","INVALID_SCHEME","INVALID_HOST","INVALID_PORT","ALPHA","ALPHANUMERIC","DIGIT","HEX_START","OCT","DEC","HEX","FORBIDDEN_HOST_CODE_POINT","FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT","LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE","TAB_AND_NEW_LINE","parseHost","input","codePoints","index","charAt","parseIPv6","isSpecial","test","parseIPv4","percentEncode","C0ControlPercentEncodeSet","partsLength","numbers","part","radix","number","ipv4","parts","split","pop","parseInt","numbersSeen","ipv4Piece","swaps","swap","address","pieceIndex","compress","pointer","char","findLongestZeroSequence","ipv6","maxIndex","maxLength","currStart","currLength","serializeHost","ignore0","unshift","join","toString","fragmentPercentEncodeSet","pathPercentEncodeSet","userinfoPercentEncodeSet","code","encodeURIComponent","specialSchemes","ftp","file","http","https","ws","wss","scheme","includesCredentials","password","cannotHaveUsernamePasswordPort","cannotBeABaseURL","isWindowsDriveLetter","string","normalized","second","startsWithWindowsDriveLetter","third","shortenURLsPath","path","pathSize","isSingleDot","segment","toLowerCase","isDoubleDot","SCHEME_START","SCHEME","NO_SCHEME","SPECIAL_RELATIVE_OR_AUTHORITY","PATH_OR_AUTHORITY","RELATIVE","RELATIVE_SLASH","SPECIAL_AUTHORITY_SLASHES","SPECIAL_AUTHORITY_IGNORE_SLASHES","AUTHORITY","HOST","HOSTNAME","PORT","FILE","FILE_SLASH","FILE_HOST","PATH_START","PATH","CANNOT_BE_A_BASE_URL_PATH","QUERY","FRAGMENT","parseURL","stateOverride","base","bufferCodePoints","failure","state","seenAt","seenBracket","seenPasswordToken","port","query","fragment","replace","codePoint","encodedCodePoints","shift","URLConstructor","baseState","that","urlString","TypeError","searchParamsState","updateSearchParams","updateURL","serializeURL","call","origin","getOrigin","protocol","getProtocol","getUsername","getPassword","getHost","hostname","getHostname","getPort","getPathname","search","getSearch","getSearchParams","getHash","URLPrototype","output","accessorDescriptor","getter","setter","configurable","enumerable","nativeCreateObjectURL","createObjectURL","nativeRevokeObjectURL","revokeObjectURL","blob","apply","forced","sham","GainAnalysis","PINK_REF","RMS_PERCENTILE","YULE_ORDER","RMS_WINDOW_TIME_NUMERATOR","MAX_SAMP_FREQ","RMS_WINDOW_TIME_DENOMINATOR","ABYule","MAX_SAMPLES_PER_WINDOW","ABButter","filterYule","inputPos","outputPos","nSamples","kernel","filterButter","ResetSampleFrequency","rgData","samplefreq","MAX_ORDER","linprebuf","lstepbuf","loutbuf","rinprebuf","rstepbuf","routbuf","reqindex","INIT_GAIN_ANALYSIS_ERROR","sampleWindow","lsum","rsum","totsamp","ill","INIT_GAIN_ANALYSIS_OK","fsqr","d","analyzeResult","len","elems","GAIN_NOT_ENOUGH_SAMPLES","upper","ceil","STEPS_per_dB","InitGainAnalysis","linpre","rinpre","lstep","rstep","lout","rout","B","AnalyzeSamples","left_samples","left_samplesPos","right_samples","right_samplesPos","num_samples","num_channels","curleft","curleftBase","curright","currightBase","batchsamples","cursamples","cursamplepos","GAIN_ANALYSIS_OK","GAIN_ANALYSIS_ERROR","arraycopy","ival","GetTitleGain","retval","MAX_dB","render","_vm","_h","$createElement","_c","_self","attrs","_v","_s","$t","domProps","style","display","smallScreen","opacity","staticClass","on","playRemix","exportRemix","clearRemix","ref","_l","item","_m","staticRenderFns","_arrayWithHoles","arr","isArray","_iterableToArrayLimit","Symbol","iterator","Object","_arr","_n","_d","_e","_i","next","done","err","_nonIterableRest","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","_defineProperty","obj","defineProperty","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread2","source","getOwnPropertyDescriptors","encoder","encoderWrapper","buf","Promise","resolve","reject","e","mergeAudio","srcs","ctx","OfflineAudioContext","console","musicurl","fetch","then","arrayBuffer","arrayBuf","audioBufSrc","createBufferSource","decodeAudioData","catch","audioBuf","delay","connect","destination","startRendering","mergedAudioBuf","finalBlob","editorElements","getXLocation","offsetLeft","Number","getAttribute","updateElementPos","dx","dy","parseFloat","webkitTransform","transform","setAttribute","moveHandler","event","seq","location","window","sounds","timelineLength","json","soundNotExpanded","lang","name_l10n","singleSound","name","innerHeight","editorBottom","$refs","editor","offsetHeight","offsetTop","loadVoice","setLanguage","navigator","validateDisplay","addEventListener","initDrag","buttonsOffsetLeft","clips","buttonsOffsetTop","draggable","inertia","modifiers","restrictRect","restriction","document","getElementById","endOnly","listeners","move","newNode","cloneNode","removeAttribute","appendChild","position","removeChild","dropzone","accept","ondragenter","relatedTarget","seqId","random","id","ondragleave","tracks","getElementsByClassName","track","offsetWidth","preparedSounds","entries","sound","audioFilename","audio","Audio","preload","setTimeout","play","querySelectorAll","fileLink","createElement","download","click","components","BaseButton","component","Presets","VBRPresets","qual","comp","compS","shThreshold","shThresholdS","adj","adjShort","lower","curve","sens","inter","joint","mod","fix","vbr_q","quant_comp","quant_comp_s","expY","st_lrm","st_s","masking_adj","masking_adj_short","ath_lower","ath_curve","ath_sensitivity","interch","safejoint","sfb21mod","ABRPresets","kbps","bass","sc","mask","interCh","sfScale","nsmsfix","nsbass","scale","sfscale","lame","setModules","_lame","vbr_old_switch_map","vbr_psy_switch_map","apply_vbr_preset","enforce","vbr_preset","VBR_q_frac","q","lame_set_VBR_q","quant_comp_short","experimentalY","maskingadjust","maskingadjust_short","athaa_sensitivity","VBR_q","abr_switch_map","apply_abr_preset","preset","actual_bitrate","nearestBitrateFullIndex","VBR_mean_bitrate_kbps","brate","disable_reservoir","noise_shaping","ret","apply_preset","Lame","R3MIX","V3","MEDIUM","V4","MEDIUM_FAST","STANDARD","V2","STANDARD_FAST","EXTREME","V0","EXTREME_FAST","INSANE","V9","V8","V7","V6","V5","V1","proto","MeanBits","L3Side","LameInternalFlags","CBRNewIterationLoop","_quantize","quantize","iteration_loop","ms_ener_ratio","max_bits","l3_xmin","SFBMAX","xrpow","targ_bits","mean_bits","l3_side","mb","rv","ResvFrameBegin","bits","qupvt","on_pe","mode_ext","MPG_MD_MS_LR","ms_convert","reduce_side","masking_lower_db","cod_info","block_type","mask_adjust","mask_adjust_short","init_outer_loop","init_xrpow","calc_xmin","outer_loop","iteration_finish_one","part2_3_length","MAX_BITS_PER_CHANNEL","ResvFrameEnd","NewMDCT","III_psy_ratio","FFTOFFSET","bs","psy","vbr","_bs","_psy","_qupvt","_vbr","newMDCT","adjust_ATH","gr2_max","max_pow","useAdjust","aaSensitivityP","adj_lim_new","updateStats","bitrate_index","bitrate_stereoMode_Hist","bt","mixed_block_flag","bitrate_blockType_Hist","lame_encode_frame_init","inbuf","primebuff0","primebuff1","mdct_sub48","mf_size","framesize","lame_encode_mp3_frame","inbuf_l","inbuf_r","mp3buf","mp3bufPos","mp3buf_size","mp3count","masking_LR","masking","masking_MS","pe_use","pe_MS","padding","slot_lag","frac_SpF","psymodel","bufp","bufpPos","MPG_MD_LR_LR","force_ms","sum_pe_MS","sum_pe_LR","gi0","gi1","ms_ratio","xr","pefirbuf","format_bitstream","copy_buffer","bWriteVbrTag","addVbrFrame","pcmdata","set_frame_pinfo","ENCDELAY","POSTDELAY","MDCTDELAY","DECDELAY","SBLIMIT","SBPSY_l","SBPSY_s","PSFB21","PSFB12","MPG_MD_LR_I","MPG_MD_MS_I","$filter","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","$entries","parent","constructor","default","Interactable","ot","c","z","_t","We","K","Z","WeakMap","__esModule","o","hasOwnProperty","g","_actions","actions","_context","context","_win","getWindow","Dt","trySelector","_doc","_scopeEvents","perAction","func","onstart","concat","onmove","onend","oninertiastart","array","off","_defaults","options","updatePerActionListeners","from","plainObject","enabled","bool","element","querySelector","getElementRect","getRect","map","_backCompatOption","deltaSource","ownerDocument","nodeContains","testIgnore","ignoreFrom","testAllow","allowFrom","matchesUpTo","events","fire","wheelEvent","isNonNativeEvent","_onOff","methodDict","setPerAction","delegatedEvents","selector","splice","removeDelegate","remove","phaselessTypes","indexOf","substr","phases","initScope","M","Scope","ee","T","dn","yt","Sn","E","$e","Reflect","setPrototypeOf","__proto__","construct","Proxy","Date","ReferenceError","getPrototypeOf","_","P","win","browser","S","raf","clone","list","removeDocument","create","interactable","interactables","defaults","listenerMaps","isInitialized","_plugins","pluginIsInstalled","install","before","reduce","getDocIndex","extend","documents","doc","add","onWindowUnload","scope","now","init","usePlugin","Gn","lr","br","Oe","return","interactions","getPointerType","getEventTargets","prevTouchTime","changedTouches","pointerId","getPointerId","pointerType","eventType","eventTarget","curEventTarget","supportsPointerEvent","pointerIsDown","timeStamp","interaction","searchDetails","new","docEvents","isIOS","passive","delegateListener","delegateUseCapture","listener","pEventTypes","_interacting","pointers","some","downTarget","removePointer","PointerEvent","down","pointerDown","pointerMove","up","pointerUp","cancel","documentBlur","Interaction","pointerMoveTolerance","scopeFire","stop","destroy","onDocSignal","doOnInteractions","methodNames","InteractStatic","pointerAverage","touchBBox","touchDistance","touchAngle","dom","getElementClientRect","matchesSelector","closest","globalEvents","getOwnPropertyNames","interact","is","trim","supportsTouch","addDocument","Window","realWindow","createTextNode","wrap","defaultView","docFrag","nodeType","Element","nodeName","prepared","axis","coords","cur","page","client","velocity","iEvent","delta","drag","buttons","mouseButtons","action","lockAxis","startAxis","setOnEvents","beforeMove","getCursor","D","BaseEvent","I","_interaction","_proxy","propagationStopped","immediatePropagationStopped","R","C","find","findIndex","merge","contains","W","F","X","Y","L","N","U","V","G","H","prev","currentTarget","dragEvent","dropState","rejected","enter","stopImmediatePropagation","activeDrops","J","et","rt","Q","nt","it","at","lt","ut","ct","st","ft","pt","dt","vt","types","ht","preventDefault","gt","mt","DocumentFragment","Ot","SVGElement","SVGSVGElement","SVGElementInstance","HTMLElement","Event","Touch","MSPointerEvent","wt","Pt","xt","kt","St","Mt","jt","Et","DocumentTouch","pointerEnabled","platform","isIOS7","appVersion","isIe9","userAgent","isOperaMobile","appName","prefixedMatchesSelector","over","out","Tt","It","parentNode","Rt","Nt","Yt","indexOfDeepestElement","Lt","zt","ownerSVGElement","lastChild","previousSibling","Ct","getComputedStyle","zIndex","getActualElement","correspondingUseElement","getScrollXY","Bt","Ut","At","left","right","top","bottom","getPath","Xt","Ft","Wt","scrollX","documentElement","scrollLeft","scrollY","scrollTop","getBoundingClientRect","getClientRects","width","height","Vt","qt","getStringOptionResult","Jt","resolveRectLike","Ht","Zt","rectToXY","xywhToTlbr","tlbrToXywh","addEdges","Gt","Kt","Qt","te","InteractEvent","ne","ue","oe","ie","ae","se","ce","le","fe","de","ve","ye","prevEvent","rect","ctrlKey","altKey","shiftKey","metaKey","button","preEnd","t0","downTime","x0","y0","clientX0","clientY0","duration","speed","swipe","getSwipe","atan2","velocityY","velocityX","angle","he","ge","be","prefixedPropREs","webkit","moz","me","we","copyCoords","setCoordDeltas","setCoordVelocity","setZeroCoords","isNativePointer","De","getXY","Ie","getPageXY","Ae","getClientXY","ze","je","identifier","setCoords","Ce","getTouchPair","Re","touches","pageX","pageY","Se","Pe","composedPath","xe","newCoords","coordsToEvent","Me","Te","Ee","ke","clientX","clientY","screenX","screenY","Fe","Ye","Xe","Le","Ne","Be","Ue","Ve","qe","Ge","request","requestAnimationFrame","cancelAnimationFrame","clearTimeout","He","warnOnce","warn","copyAction","edges","nn","rn","an","un","sn","cn","Ke","pn","Ze","Je","Qe","tn","ln","fn","vn","yn","hn","wn","gn","bn","mn","On","Pn","xn","addListeners","selectorMap","inContext","jn","FakeEvent","Mn","Rn","kn","En","An","Tn","Dn","In","zn","Cn","Wn","Fn","Xn","Yn","originalEvent","stopPropagation","Nn","capture","Ln","addDelegate","targets","supportsOptions","supportsPassive","removeEventListener","Bn","Un","Vn","PointerInfo","qn","$n","tr","_ProxyMethods","_ProxyValues","Hn","Kn","Zn","Jn","Qn","rr","er","nr","or","ir","ar","pointerWasMoved","interacting","ur","sr","_scopeFire","updatePointer","pointerIndex","pointerInfo","_stopped","_doPhase","downEvent","phase","simulation","modification","endResult","hypot","getPointerIndex","duplicate","_latestPointer","_ending","_now","pointerExtend","downPointer","_updateLatestPointer","_createPreparedEvent","_fireEvent","cr","fr","hr","pr","dr","vr","yr","checkAndPreventDefault","getDocOptions","Or","wr","_r","methodOrder","simulationResume","allowResume","mouseOrPen","Pr","hasPointer","idle","gesture","Sr","jr","Mr","Dr","kr","Er","Tr","Ir","Ar","drop","draggableElement","zr","dropCheck","Rr","leave","activate","deactivate","dragLeave","prevDropzone","dragEnter","dragmove","Cr","Wr","dynamicDrop","Fr","interactStatic","normalizeListeners","ondrop","ondropactivate","ondropdeactivate","ondropmove","overlap","checker","getOriginXY","dragenter","dragleave","dropactivate","dropdeactivate","dropmove","getActiveDrops","getDrop","getDropEvents","fireDropEvents","Xr","Yr","Nr","Lr","Br","Ur","distance","box","ds","da","startDistance","startAngle","isNaN","Vr","gesturable","qr","Gr","$r","Hr","Kr","to","Zr","Jr","Qr","eo","no","resizeAxes","resize","square","axes","ro","cursors","xy","topleft","bottomright","topright","bottomleft","defaultMargin","resizable","preserveAspectRatio","_rects","corrected","previous","deltaRect","invert","margin","NaN","oo","io","ao","uo","so","co","lo","fo","po","vo","yo","getContainer","Po","getScroll","xo","getScrollSize","body","scrollWidth","scrollHeight","getScrollSizeDelta","autoScroll","container","ho","go","wo","mo","Oo","_o","isScrolling","prevTime","scroll","scrollBy","check","onInteractionMove","innerWidth","So","autoscroll","jo","Mo","ko","Eo","To","styleCursor","Do","actionChecker","Io","getAction","0","1","3","4","Ao","zo","Ro","Co","Wo","Fo","Xo","testIgnoreAllow","Bo","Yo","No","forEachMatch","manualStart","Lo","qo","maxPerElement","autoStart","maxInteractions","Uo","Vo","cursorElement","cursor","cursorChecker","Go","withinInteractionLimit","validateAction","$o","Ho","Ko","Zo","Jo","Qo","ti","ei","ri","oi","hold","ii","autoStartHoldTimer","getHoldDuration","ai","ui","si","ci","li","fi","pi","di","vi","yi","hi","gi","wi","touchAction","boxSizing","noListeners","Si","ji","Mi","ki","Ei","getRectOffset","Ni","Ti","zi","Di","Ii","Ai","Ri","Ci","Wi","Fi","Xi","Yi","methods","_methods","prepareStates","startOffset","pageCoords","startDelta","startAll","setAll","fillArg","states","skipModifiers","shouldDo","eventProps","rectDelta","changed","modifiedCoords","applyToInteraction","beforeEnd","setStart","Li","makeModifier","addEventModifiers","Vi","Bi","Ui","qi","setAndApply","restoreInteractionCoords","Gi","$i","addTotal","Zi","applyPending","Qi","Hi","Ki","ea","offset","total","pending","Ji","ta","offsetBy","na","ra","oa","InertiaState","ia","va","aa","ua","sa","ca","la","fa","pa","ya","ha","ga","ba","copyFrom","v0","currentOffset","startCoords","modifierArg","minSpeed","endSpeed","startInertia","startSmoothEnd","targetOffset","active","resistance","lambda_v0","one_ve_v0","isModified","modifiedOffset","timeout","inertiaTick","smoothEnd","smoothEndTick","ma","smoothEndDuration","Oa","modifierCount","wa","inertiastart","resume","_a","Pa","xa","Sa","ja","Ma","ka","aspectRatio","Ea","Da","Ta","Ia","Aa","za","Ra","equalDelta","startRect","linkedEdges","xIsPrimaryAxis","edgeSign","subModification","Ca","Wa","prevCoords","prevRect","Fa","Xa","Ya","Na","La","Ba","getRestrictionRect","Ka","restrict","Ua","Va","qa","Ha","Ga","$a","Za","elementRect","Ja","Qa","tu","restrictEdges","eu","nu","ru","ou","iu","au","uu","su","noInner","noOuter","inner","outer","cu","lu","fu","pu","du","vu","yu","hu","restrictSize","gu","bu","mu","Ou","wu","_u","Pu","xu","Su","ju","Mu","ku","Eu","snap","Tu","Du","Iu","offsetWithOrigin","relativePoints","offsets","relativePoint","range","inRange","Au","zu","Ru","snapSize","Cu","Wu","Fu","Xu","Yu","Nu","Lu","targetFields","Bu","Uu","snapEdges","Vu","Gu","qu","$u","Hu","Ku","Zu","Ju","Qu","ts","es","ns","rs","ys","os","as","us","ss","cs","ls","fs","ps","vs","hs","spring","avoid","rubberband","gs","ms","Os","limits","grid","round","coordFields","Ps","xs","Ss","js","Ms","ks","Es","Ts","Is","Ds","As","snappers","createSnapGrid","zs","Rs","Fs","Cs","Ws","Xs","Ys","Ns","Ls","Bs","Us","qs","Vs","Gs","$s","Hs","Zs","Ks","Js","Qs","tapTime","double","prevTap","tc","ec","nc","ic","rc","oc","ac","pointerEvents","uc","node","eventable","holdDuration","cc","collectEventTargets","tap","doubletap","pointerEvent","props","_subtractOrigin","_addOrigin","lc","fc","dc","pc","vc","holdIntervalHandle","clearInterval","yc","holdRepeatInterval","holdrepeat","hc","gc","bc","mc","Oc","wc","xc","Sc","Pc","Mc","jc","kc","Tc","Ec","Dc","reflow","_reflowPromise","_reflowResolve","all","Ic","Ac","zc","exchange","Rc","Cc","Wc","Fc","ol","Xc","Yc","Nc","Lc","Bc","Uc","Vc","qc","Gc","$c","Hc","Kc","Zc","Jc","Qc","rl","tl","nl","use","vue","__utils","displace","il","al","ul","sl","cl","ll","encodeWav","encodeMp3","VALID_MP3_BITRATES","audioBuffer","encoding","onProgress","onComplete","Error","bitrate","requireObjectCoercible","whitespaces","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","Reservoir","maxmp3buf","frameLength","getframebits","sideinfo_len","resvLimit","strict_ISO","fullFrameBits","ResvSize","resvsize","ResvMaxBits","cbr","add_bits","substep_shaping","extra_bits","ResvAdjust","part2_length","over_bits","stuffingBits","mdb_bytes","HuffCodeTab","hl","xlen","linmax","table","hlen","Tables","t1HB","t1l","t2HB","t2l","t3HB","t3l","t5HB","t5l","t6HB","t6l","t7HB","t7l","t8HB","t8l","t9HB","t9l","t10HB","t10l","t11HB","t11l","t12HB","t12l","t13HB","t13l","t16_5l","t15HB","t15l","t16HB","t16l","t24HB","t24l","t32HB","t32l","t33HB","t33l","largetbl","table23","table56","bitrate_table","samplerate_table","scfsi_band","maxInt","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexNonASCII","regexSeparators","OVERFLOW_ERROR","baseMinusTMin","stringFromCharCode","fromCharCode","ucs2decode","counter","charCodeAt","extra","digitToBasic","digit","adapt","numPoints","firstTime","encode","currentValue","inputLength","bias","basicLength","handledCPCount","handledCPCountPlusOne","RangeError","qMinusT","baseMinusT","label","encoded","labels","_ordinal","DUAL_CHANNEL","MONO","NOT_SET","lamejs","MAX_AMPLITUDE","params","cb","sampleRate","nChannels","numberOfChannels","bufferLength","buffers","channel","getChannelData","samples","sample","BLOCK_SIZE","mp3encoder","Mp3Encoder","mp3Data","blockIndex","encodeChunk","chunk","subarray","encodeBuffer","chunkL","chunkR","update","flush","Blob","performance","Takehiro","BitStream","self","CRC16_POLYNOMIAL","MAX_LENGTH","mpg","ver","_ga","_mpg","_ver","totbit","bufByteIdx","bufBitIdx","putheader_bits","header","w_ptr","MAX_HEADER_BUF","putbits2","LAME_MAXMP3BUFFER","write_timing","putbits_noheaders","drain_into_ancillary","remainingBits","version","getLameShortVersion","ancillary_flag","writeheader","ptr","h_ptr","CRC_update","crc","encodeSideInfo2","bitsPerFrame","error_protection","band","big_values","scalefac_compress","table_select","subblock_gain","region0_count","region1_count","preflag","scalefac_scale","count1table_select","CRC_writeheader","old","println","huffman_coder_count1","ix","count1","huffbits","l3_enc","Huffmancode","tableindex","cbits","xbits","linbits","ext","x1","x2","linbits_x1","linbits_x2","ShortHuffmancodebits","region1Start","LongHuffmancodebits","bigvalues","region2Start","writeMainData","data_bits","tot_bits","slen1","slen1_tab","slen2","slen2_tab","sfbdivide","scalefac","sfbmax","sfb_partition","scale_bits","sfb_partition_table","sfbs","slen","TotalBytes","compute_flushbits","total_bytes_output","flushbits","remaining_headers","last_ptr","first_ptr","bit_rate","bytes","flush_bitstream","findReplayGain","RadioGain","rgdata","NEQ","findPeakSample","noclipGainChange","PeakSample","EQ","noclipScale","add_dummy_byte","printf","bufferPos","mp3data","minimum","nMusicCRC","updateMusicCRC","VBR_seek_table","decode_on_the_fly","pcm_buf","mp3_in","samples_out","hip_decode1_unclipped","hip","init_bit_stream_w","objectKeys","toIndexedObject","propertyIsEnumerable","TO_ENTRIES","isObject","dummy","Wrapper","NewTarget","NewTargetPrototype","ReplayGain","freqindex","first","CalcNoiseResult","over_noise","tot_noise","max_noise","over_count","over_SSD","HEADER_LENGTH","ArrayBuffer","int16","uint8","Uint8Array","l2","l1","$parseFloat","FORCED","Infinity","trimmedString","window_s","costab","fht","fz","fzPos","k4","tri","s1","c1","k1","k2","k3","kx","f1","f0","f3","f2","c2","s2","g0","g1","g2","g3","rv_tbl","x_real","jj","Version","LAME_URL","LAME_MAJOR_VERSION","LAME_MINOR_VERSION","LAME_PATCH_VERSION","PSY_MAJOR_VERSION","PSY_MINOR_VERSION","getLameVersion","getLameVeryShortVersion","getPsyVersion","getLameUrl","getLameOsBitness","LameGlobalFlags","class_id","in_samplerate","scale_left","scale_right","decode_only","quality","free_format","write_id3tag_automatic","compression_ratio","copyright","original","extension","emphasis","VBR_min_bitrate_kbps","VBR_max_bitrate_kbps","VBR_hard_min","lowpassfreq","highpassfreq","lowpasswidth","highpasswidth","ATHonly","ATHshort","noATH","athaa_type","useTemporal","tune","tune_value_a","encoder_delay","encoder_padding","frameNum","lame_allocated_gfp","getBuiltIn","redefineAll","createIteratorConstructor","hasOwn","bind","classof","anObject","createPropertyDescriptor","getIterator","getIteratorMethod","$fetch","Headers","URL_SEARCH_PARAMS","URL_SEARCH_PARAMS_ITERATOR","getInternalParamsState","getInternalIteratorState","plus","sequences","percentSequence","percentDecode","sequence","decodeURIComponent","deserialize","replacer","match","serialize","parseSearchParams","attribute","entry","attributes","validateArgumentsLength","passed","required","URLSearchParamsIterator","kind","URLSearchParamsConstructor","iteratorMethod","entryIterator","entryNext","URLSearchParamsPrototype","append","getAll","found","entriesIndex","sliceIndex","callback","boundFunction","headers","toObject","toLength","createProperty","arraySpeciesCreate","V8_VERSION","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","SPECIES_SUPPORT","isConcatSpreadable","spreadable","III_psy_xmin","iii_psy_xmin","VBRQuantize","_tk","isForced","inheritIfRequired","toPrimitive","NUMBER","NativeNumber","NumberPrototype","BROKEN_CLASSOF","toNumber","argument","maxCode","digits","NumberWrapper","valueOf","psfb21","psfb12","parseFloatImplementation","nativeKeys","FAILS_ON_PRIMITIVES","ScaleFac","QuantizePVT","tak","POW20","Q_MAX2","Q_MAX","pow20","_rv","IPOW20","ipow20","DBL_EPSILON","IXMAX_VAL","PRECALC_SIZE","NSATHSCALE","LARGE_BITS","nr_of_sfb_block","pretab","sfBandIndex","pow43","adj43","ATHmdct","compute_ath","ATH_l","ATH_psfb21","ATH_s","ATH_psfb12","samp_freq","ATH_f","StartLine","iteration_init","iteration_init_init","alto","treble","sfb21","huffman_init","longfact","shortfact","tbits","MAX_BITS_PER_GRANULE","fac","move_bits","athAdjust","athFloor","pxmin","gsfb","pxminPos","ath_over","enable_athaa_fix","psy_lmax","xmin","rh1","rh2","en0","xb","max_nonzero","max_nonzero_coeff","sfb_smin","psymax","tmpATH","calc_noise_core","startline","ix01","calc_noise","distort","res","prev_noise","distortPos","l3_xminPos","over_noise_db","tot_noise_db","scalefacPos","tmp","usefullsize","set_pinfo","sfb2","en1","ifqstep","xfsf","sfb_lmax","bw","LAMEsfb","en_s","xfsf_s","thr_s","LAMEsfb_s","LAMEqss","LAMEmainbits","LAMEsfbits","NsPsy","MAX_HEADER_LEN","Header","Class_ID","fill_buffer_resample_init","mfbuf","MFSIZE","channels_in","resample_ratio","mf_samples_to_encode","VBR_min_bitrate","VBR_max_bitrate","samplerate_index","lowpass1","lowpass2","highpass1","highpass2","noise_shaping_amp","noise_shaping_stop","use_best_huffman","full_outer_loop","tag_spec","OldValue","CurrentStep","bv_scf","pseudohalf","sfb21_extra","inbuf_old","blackfilt","BPC","itime","sb_sample","amp_filter","numlines_s_num1","numlines_l_num1","ms_ratio_s_old","ms_ratio_l_old","nogap_total","nogap_current","AudiophileGain","in_buffer_nsamples","in_buffer_0","in_buffer_1","Bits","subdv_table","quantize_lines_xrpow_01","istep","xrPos","ixPos","compareval0","quantize_lines_xrpow","remaining","x3","rx0","rx1","rx2","rx3","quantize_xrpow","xp","codInfo","prevNoise","prev_data_use","accumulate","accumulate01","xpPos","iData","iDataPos","acc_iData","acc_iDataPos","acc_xp","acc_xpPos","ix_max","endPos","max1","max2","count_bit_ESC","t1","t2","count_bit_noESC","hlen1","count_bit_noESC_from2","count_bit_noESC_from3","sum3","hlen2","hlen3","huf_tbl_noESC","choose_table","choice2","choice","recalc_divide_init","r01_bits","r01_div","r0_tbl","r1_tbl","bigv","r0","a1","r0bits","bi","r0t","r1","a2","r1t","recalc_divide_sub","cod_info2","r2","count1bits","r2t","noquant_count_bits","best_huffman_divide","count_bits","xrpow_max","gain","roundfac","slen1_n","slen2_n","scfsi_calc","all_scalefactors_not_negative","best_scalefac_store","recalc","scale_bitcount","scale_bitcount_lsf","scale_short","scale_mixed","scale_long","max_slen1","max_slen2","max_range_sfac_tab","table_number","row_in_table","nr_sfb","max_sfac","partition_table","slen3","slen4","log2tab","bv_index","scfb_anz","Quantize","VBRTag","GetAudio","parse2","mpg2","Parse","ver2","id32","pre2","MPGLib","ID3Tag","_bits","channels","samplerate","gaud","id3","parse","enc","lame_init","retcode","lame_init_params","maxSamples","_sz","lame_encode_buffer","lame_encode_flush","WavHeader","dataOffset","dataLen","fourccToInt","fourcc","RIFF","WAVE","fmt_","data","readHeader","dataView","getUint32","fmtLen","getUint16","tk","init_xrpow_core","psfb21_analogsilence","ath21","block","ath12","BinSearchDirection","bin_search_StepSize","desired_rate","nBits","flagGoneOver","Direction","BINSEARCH_NONE","BINSEARCH_DOWN","BINSEARCH_UP","loop_break","penalties","get_klemm_noise","klemm_noise","quant_compare","best","calc","better","amp_scalefac_bands","bRefine","ifqstep34","trigger","inc_scalefac_scale","inc_subblock_gain","amp","balance_noise","status","ixwork","trancate_smallspectrums","work","allowedNoise","trancateThreshold","nsame","cod_info_w","save_xrpow","best_noise_info","best_part2_3_length","bEndOfSearch","best_ggain_pass1","age","search_limit","noise_info","maxggain","huff_bits","VBR_encode_granule","min_bits","dbits","bst_cod_info","bst_xrpow","Max_bits","real_bits","this_bits","get_framebits","frameBits","VBR_old_prepare","bands","analog_silence","mxb","bitpressure_strategy","VBR_new_prepare","maximum_framebits","calc_target_bits","analog_silence_bits","max_frame_bits","res_factor","totbits","getOwnPropertyDescriptorModule","descriptor","LAME_MAXALBUMART","mpglib","LowPassHighPass","lowerlimit","BandPass","lPass","lowpass","_p","_qu","_id3","_mpglib","LAME_ID","lame_init_old","filter_coef","optimum_samplefreq","input_samplefreq","suggested_samplefreq","SmpFrqIndex","sample_freq","gpf","FindNearestBitrate","bRate","BitrateIndex","optimum_bandwidth","lh","freq_map","table_index","lame_init_params_ppflt","lowpass_band","highpass_band","minband","maxband","fc1","fc2","lame_init_qval","lame_init_bitstream","id3tag_write_v2","InitVbrTag","update_inbuffer_size","nsamples","calcNeeded","mf_needed","lame_encode_buffer_sample","buffer_l","buffer_r","mp3out","mp3size","in_buffer","in_bufferPos","in_buffer_ptr","n_in","n_out","inOut","InOut","fill_buffer","buf_size","lame_encode_frame","NumUsed","num_used","gcd","blackman","fcn","wcn","bkwn","sin","fill_buffer_resample","outbuf","outbufPos","desired_len","bpc","intratio","filter_l","BLACKSIZE","time0","joff","xvalue","n_shift","numUsed","full_bitrate_table","lower_range","lower_range_kbps","upper_range","upper_range_kbps","map2MP3Frequency","linear_int","hip_decode_exit","hip_decode_init","cmp","LAME_DEFAULT_QUALITY","VBRNewIterationLoop","VBROldIterationLoop","vbrmode","ABRIterationLoop","NSATTACKTHRE","NSATTACKTHRE_S","mp3buffer","mp3bufferPos","mp3buffer_size","mp3buffer_size_remaining","end_padding","frames_left","imp3","samples_to_encode","bunch","frame_num","id3tag_write_v1","FRAMES_FLAG","BYTES_FLAG","TOC_FLAG","VBR_SCALE_FLAG","NUMTOCENTRIES","MAXFRAMESIZE","VBRHEADERSIZE","LAMEHEADERSIZE","XING_BITRATE1","XING_BITRATE2","XING_BITRATE25","ISO_8859_1","VBRTag0","VBRTag1","crc16Lookup","addVbr","xingSeekTable","act","indx","seek_point","extractInteger","createInteger","createShort","isVbrTag","equals","shiftInBitsValue","setLameTagFrameHeader","bbyte","abyte","crcUpdateLookup","putLameVBR","musicLength","streamBuffer","streamBufferPos","revMethod","abrBitrate","bytesWritten","encDelay","encPadding","revision","vbrTypeTranslator","peakSignalAmplitude","radioReplayGain","audiophileReplayGain","noiseShaping","stereoMode","nonOptimal","sourceFreq","misc","musicCRC","expNPsyTune","safeJoint","noGapMore","noGapPrevious","noGapCount","noGapCurr","athType","flags","skipId3v2","fpStream","seek","id3v2TagSize","id3v2Header","readFully","startsWith","getVbrTag","pTagData","VBRTagData","hId","hSrIndex","hMode","hBitrate","samprate","head_flags","frames","toc","vbrScale","headersize","kbps_header","totalFrameSize","headerSize","getLameTagFrame","streamIndex","streamSize","putVbrTag","stream","write","nativeGetOwnPropertyDescriptor","meanBits","clone_int","clone_float","other","enwindow","NS","NL","tantab_l","cx","order","window_subband","x1Pos","wp","mdct_short","inout","inoutPos","tc0","tc1","tc2","ts0","ts1","ts2","mdct_long","outPos","_in","tc3","tc4","ts5","ts6","ts7","ts8","ts3","ts4","tc5","tc6","tc7","tc8","w0","w1","wk","wkPos","mdct_enc","mdct_encPos","samp","sampPos","band0","band1","bd","arrL","arrS","arr21","arr12"],"mappings":"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GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhE,OAAgB,CACZ,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhE,KAAc,CACV,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,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,UAAYsvB,EAAMtvB,UACvBxE,EAAKx7B,MAAQovD,EAAUE,EAAMtvD,OAC7Bw7B,EAAKnhD,OAAS+0E,EAAUE,EAAMj1E,QAC9BmhD,EAAKye,WAAaqV,EAAMrV,WAExBze,EAAK6E,oBAAsBivB,EAAMjvB,oBAAoB15E,MAAM,GAC3D60E,EAAK+E,KAAO6uB,EAAUE,EAAM/uB,MAC5B/E,EAAK8V,kBAAoBge,EAAMhe,mBAIvC9nF,EAAOC,QAAUyZ,G,qBC5EjB,IAAIlZ,EAAS,EAAQ,QACjBvC,EAASuC,EAAOvC,OAIhBM,GAHUiC,EAAOjB,QACTiB,EAAOlB,MACFkB,EAAOhC,WACbgC,EAAOjC,MACdZ,EAAS6C,EAAO7C,OAIhBhB,GAHc6D,EAAO/C,YACV+C,EAAOpE,SACLoE,EAAO3D,WACR2D,EAAO7D,WAMnBmH,GALctD,EAAOzD,YACXyD,EAAO/D,QACL+D,EAAOjD,UACViD,EAAOT,OAEN,EAAQ,SAGtB,SAASk9B,IAER,IAAI8oE,EAAW,EACb,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,oBACA,mBACA,mBACA,kBAAuB,mBAEvB,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,iBACA,kBAAuB,mBAEvB,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBAEA,mBACA,mBACA,oBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBAAuB,mBAEvB,kBACA,iBACA,oBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,oBACA,oBACA,oBACA,iBACA,mBACA,kBAAuB,kBAEvB,kBACA,kBACA,oBACA,kBACA,kBACA,mBACA,kBACA,mBACA,oBACA,iBACA,kBACA,mBACA,oBACA,oBACA,mBACA,kBACA,kBAAuB,kBAEvB,kBACA,kBACA,oBACA,kBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,kBACA,iBAAuB,mBAEvB,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,kBACA,mBAAuB,mBAEvB,iBACA,kBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,oBACA,oBACA,oBACA,kBACA,mBAAuB,kBAEvB,WAAgBxnG,EAAKI,MAAQ,GAAM,QACnC,WAAgBJ,EAAKI,MAAQ,GAAM,QACnC,WAAeJ,EAAKI,MAAQ,GAAM,QAClC,WAAeJ,EAAKI,MAAQ,GAAM,QAClC,UAAcJ,EAAKI,MAAQ,GAAM,QACjC,UAAcJ,EAAKI,MAAQ,GAAM,QACjC,UAAcJ,EAAKI,MAAQ,GAAM,QACjC,SAAaJ,EAAKI,MAAQ,GAAM,QAEhC,mBAA2B,mBAC3B,kBAAyB,mBACzB,mBAA0B,mBAC1B,mBAGEqnG,EAAK,GACLC,EAAK,GAELt+D,EAAM,CACN,CACC,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBAEA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBAEF,CACC,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBAED,EACA,EACA,EACA,EACA,EACA,GACC,sBACA,sBACA,sBAEF,CACC,kBACA,iBACA,kBAEA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBAEA,iBACA,kBACA,kBACA,mBACC,mBACA,kBACD,kBACA,IAEC,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBAED,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBAED,CACC,EACA,EACA,EACA,EACA,EACA,EACA,qBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBAEA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,uBAIFu+D,EAAWv+D,EAAI7jC,EAAQ0I,YACvB25F,EAAKx+D,EAAI7jC,EAAQ0I,YACjBopD,EAAKjuB,EAAI7jC,EAAQ0I,YACjBkzD,EAAK/3B,EAAI7jC,EAAQ0I,YAajB45F,EAAQ,CACR,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GA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","file":"js/chunk-30e61e5c.a4b345c0.js","sourcesContent":["function new_byte(count) {\n    return new Int8Array(count);\n}\n\nfunction new_short(count) {\n    return new Int16Array(count);\n}\n\nfunction new_int(count) {\n    return new Int32Array(count);\n}\n\nfunction new_float(count) {\n    return new Float32Array(count);\n}\n\nfunction new_double(count) {\n    return new Float64Array(count);\n}\n\nfunction new_float_n(args) {\n    if (args.length == 1) {\n        return new_float(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_float_n(args));\n    }\n    return A;\n}\nfunction new_int_n(args) {\n    if (args.length == 1) {\n        return new_int(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_int_n(args));\n    }\n    return A;\n}\n\nfunction new_short_n(args) {\n    if (args.length == 1) {\n        return new_short(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_short_n(args));\n    }\n    return A;\n}\n\nfunction new_array_n(args) {\n    if (args.length == 1) {\n        return new Array(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_array_n(args));\n    }\n    return A;\n}\n\n\nvar Arrays = {};\n\nArrays.fill = function (a, fromIndex, toIndex, val) {\n    if (arguments.length == 2) {\n        for (var i = 0; i < a.length; i++) {\n            a[i] = arguments[1];\n        }\n    } else {\n        for (var i = fromIndex; i < toIndex; i++) {\n            a[i] = val;\n        }\n    }\n};\n\nvar System = {};\n\nSystem.arraycopy = function (src, srcPos, dest, destPos, length) {\n    var srcEnd = srcPos + length;\n    while (srcPos < srcEnd)\n        dest[destPos++] = src[srcPos++];\n};\n\n\nvar Util = {};\nUtil.SQRT2 = 1.41421356237309504880;\nUtil.FAST_LOG10 = function (x) {\n    return Math.log10(x);\n};\n\nUtil.FAST_LOG10_X = function (x, y) {\n    return Math.log10(x) * y;\n};\n\nfunction ShortBlock(ordinal) {\n    this.ordinal = ordinal;\n}\n/**\n * LAME may use them, even different block types for L/R.\n */\nShortBlock.short_block_allowed = new ShortBlock(0);\n/**\n * LAME may use them, but always same block types in L/R.\n */\nShortBlock.short_block_coupled = new ShortBlock(1);\n/**\n * LAME will not use short blocks, long blocks only.\n */\nShortBlock.short_block_dispensed = new ShortBlock(2);\n/**\n * LAME will not use long blocks, short blocks only.\n */\nShortBlock.short_block_forced = new ShortBlock(3);\n\nvar Float = {};\nFloat.MAX_VALUE = 3.4028235e+38;\n\nfunction VbrMode(ordinal) {\n    this.ordinal = ordinal;\n}\nVbrMode.vbr_off = new VbrMode(0);\nVbrMode.vbr_mt = new VbrMode(1);\nVbrMode.vbr_rh = new VbrMode(2);\nVbrMode.vbr_abr = new VbrMode(3);\nVbrMode.vbr_mtrh = new VbrMode(4);\nVbrMode.vbr_default = VbrMode.vbr_mtrh;\n\nvar assert = function (x) {\n    //console.assert(x);\n};\n\nmodule.exports = {\n    \"System\": System,\n    \"VbrMode\": VbrMode,\n    \"Float\": Float,\n    \"ShortBlock\": ShortBlock,\n    \"Util\": Util,\n    \"Arrays\": Arrays,\n    \"new_array_n\": new_array_n,\n    \"new_byte\": new_byte,\n    \"new_double\": new_double,\n    \"new_float\": new_float,\n    \"new_float_n\": new_float_n,\n    \"new_int\": new_int,\n    \"new_int_n\": new_int_n,\n    \"new_short\": new_short,\n    \"new_short_n\": new_short_n,\n    \"assert\": assert\n};\n","var $ = require('../internals/export');\nvar $values = require('../internals/object-to-array').values;\n\n// `Object.values` method\n// https://tc39.github.io/ecma262/#sec-object.values\n$({ target: 'Object', stat: true }, {\n  values: function values(O) {\n    return $values(O);\n  }\n});\n","var common = require('./common.js');\nvar new_float = common.new_float;\nvar new_int = common.new_int;\nvar assert = common.assert;\n\nfunction CalcNoiseData() {\n    this.global_gain = 0;\n    this.sfb_count1 = 0;\n    this.step = new_int(39);\n    this.noise = new_float(39);\n    this.noise_log = new_float(39);\n}\n\nmodule.exports = CalcNoiseData;\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = !fails(function () {\n  var url = new URL('b?a=1&b=2&c=3', 'http://a');\n  var searchParams = url.searchParams;\n  var result = '';\n  url.pathname = 'c%20d';\n  searchParams.forEach(function (value, key) {\n    searchParams['delete']('b');\n    result += key + value;\n  });\n  return (IS_PURE && !url.toJSON)\n    || !searchParams.sort\n    || url.href !== 'http://a/c%20d?a=1&c=3'\n    || searchParams.get('c') !== '3'\n    || String(new URLSearchParams('?a=1')) !== 'a=1'\n    || !searchParams[ITERATOR]\n    // throws in Edge\n    || new URL('https://a@b').username !== 'a'\n    || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b'\n    // not punycoded in Edge\n    || new URL('http://тест').host !== 'xn--e1aybc'\n    // not escaped in Chrome 62-\n    || new URL('http://a#б').hash !== '#%D0%B1'\n    // fails in Chrome 66-\n    || result !== 'a1c3'\n    // throws in Safari\n    || new URL('http://x', undefined).host !== 'x';\n});\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n}\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\nmodule.exports = (!STRICT_METHOD || !USES_TO_LENGTH) ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n} : [].forEach;\n","//package mp3;\n\nfunction VBRSeekInfo() {\n    /**\n     * What we have seen so far.\n     */\n    this.sum = 0;\n    /**\n     * How many frames we have seen in this chunk.\n     */\n    this.seen = 0;\n    /**\n     * How many frames we want to collect into one chunk.\n     */\n    this.want = 0;\n    /**\n     * Actual position in our bag.\n     */\n    this.pos = 0;\n    /**\n     * Size of our bag.\n     */\n    this.size = 0;\n    /**\n     * Pointer to our bag.\n     */\n    this.bag = null;\n    this.nVbrNumFrames = 0;\n    this.nBytesWritten = 0;\n    /* VBR tag data */\n    this.TotalFrameSize = 0;\n}\n\nmodule.exports = VBRSeekInfo;\n","/*\n *      psymodel.c\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *      Copyright (c) 2001-2002 Naoki Shibata\n *      Copyright (c) 2000-2003 Takehiro Tominaga\n *      Copyright (c) 2000-2008 Robert Hegemann\n *      Copyright (c) 2000-2005 Gabriel Bouvigne\n *      Copyright (c) 2000-2005 Alexander Leidinger\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: PsyModel.java,v 1.27 2011/05/24 20:48:06 kenchis Exp $ */\n\n\n/*\n PSYCHO ACOUSTICS\n\n\n This routine computes the psycho acoustics, delayed by one granule.\n\n Input: buffer of PCM data (1024 samples).\n\n This window should be centered over the 576 sample granule window.\n The routine will compute the psycho acoustics for\n this granule, but return the psycho acoustics computed\n for the *previous* granule.  This is because the block\n type of the previous granule can only be determined\n after we have computed the psycho acoustics for the following\n granule.\n\n Output:  maskings and energies for each scalefactor band.\n block type, PE, and some correlation measures.\n The PE is used by CBR modes to determine if extra bits\n from the bit reservoir should be used.  The correlation\n measures are used to determine mid/side or regular stereo.\n */\n/*\n Notation:\n\n barks:  a non-linear frequency scale.  Mapping from frequency to\n barks is given by freq2bark()\n\n scalefactor bands: The spectrum (frequencies) are broken into\n SBMAX \"scalefactor bands\".  Thes bands\n are determined by the MPEG ISO spec.  In\n the noise shaping/quantization code, we allocate\n bits among the partition bands to achieve the\n best possible quality\n\n partition bands:   The spectrum is also broken into about\n 64 \"partition bands\".  Each partition\n band is about .34 barks wide.  There are about 2-5\n partition bands for each scalefactor band.\n\n LAME computes all psycho acoustic information for each partition\n band.  Then at the end of the computations, this information\n is mapped to scalefactor bands.  The energy in each scalefactor\n band is taken as the sum of the energy in all partition bands\n which overlap the scalefactor band.  The maskings can be computed\n in the same way (and thus represent the average masking in that band)\n or by taking the minmum value multiplied by the number of\n partition bands used (which represents a minimum masking in that band).\n */\n/*\n The general outline is as follows:\n\n 1. compute the energy in each partition band\n 2. compute the tonality in each partition band\n 3. compute the strength of each partion band \"masker\"\n 4. compute the masking (via the spreading function applied to each masker)\n 5. Modifications for mid/side masking.\n\n Each partition band is considiered a \"masker\".  The strength\n of the i'th masker in band j is given by:\n\n s3(bark(i)-bark(j))*strength(i)\n\n The strength of the masker is a function of the energy and tonality.\n The more tonal, the less masking.  LAME uses a simple linear formula\n (controlled by NMT and TMN) which says the strength is given by the\n energy divided by a linear function of the tonality.\n */\n/*\n s3() is the \"spreading function\".  It is given by a formula\n determined via listening tests.\n\n The total masking in the j'th partition band is the sum over\n all maskings i.  It is thus given by the convolution of\n the strength with s3(), the \"spreading function.\"\n\n masking(j) = sum_over_i  s3(i-j)*strength(i)  = s3 o strength\n\n where \"o\" = convolution operator.  s3 is given by a formula determined\n via listening tests.  It is normalized so that s3 o 1 = 1.\n\n Note: instead of a simple convolution, LAME also has the\n option of using \"additive masking\"\n\n The most critical part is step 2, computing the tonality of each\n partition band.  LAME has two tonality estimators.  The first\n is based on the ISO spec, and measures how predictiable the\n signal is over time.  The more predictable, the more tonal.\n The second measure is based on looking at the spectrum of\n a single granule.  The more peaky the spectrum, the more\n tonal.  By most indications, the latter approach is better.\n\n Finally, in step 5, the maskings for the mid and side\n channel are possibly increased.  Under certain circumstances,\n noise in the mid & side channels is assumed to also\n be masked by strong maskers in the L or R channels.\n\n\n Other data computed by the psy-model:\n\n ms_ratio        side-channel / mid-channel masking ratio (for previous granule)\n ms_ratio_next   side-channel / mid-channel masking ratio for this granule\n\n percep_entropy[2]     L and R values (prev granule) of PE - A measure of how\n much pre-echo is in the previous granule\n percep_entropy_MS[2]  mid and side channel values (prev granule) of percep_entropy\n energy[4]             L,R,M,S energy in each channel, prev granule\n blocktype_d[2]        block type to use for previous granule\n */\n//package mp3;\n\n//import java.util.Arrays;\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar FFT = require(\"./FFT.js\");\nvar Encoder = require(\"./Encoder.js\");\n\nfunction PsyModel() {\n\n    var fft = new FFT();\n\n    var LOG10 = 2.30258509299404568402;\n\n    var rpelev = 2;\n    var rpelev2 = 16;\n    var rpelev_s = 2;\n    var rpelev2_s = 16;\n\n    /* size of each partition band, in barks: */\n    var DELBARK = .34;\n\n    /* tuned for output level (sensitive to energy scale) */\n    var VO_SCALE = (1. / (14752 * 14752) / (Encoder.BLKSIZE / 2));\n\n    var temporalmask_sustain_sec = 0.01;\n\n    var NS_PREECHO_ATT0 = 0.8;\n    var NS_PREECHO_ATT1 = 0.6;\n    var NS_PREECHO_ATT2 = 0.3;\n\n    var NS_MSFIX = 3.5;\n\n    var NSATTACKTHRE = 4.4;\n    var NSATTACKTHRE_S = 25;\n\n    var NSFIRLEN = 21;\n\n    /* size of each partition band, in barks: */\n    var LN_TO_LOG10 = 0.2302585093;\n\n    function NON_LINEAR_SCALE_ENERGY(x) {\n        return x;\n    }\n\n    /**\n     * <PRE>\n     *       L3psycho_anal.  Compute psycho acoustics.\n     *\n     *       Data returned to the calling program must be delayed by one\n     *       granule.\n     *\n     *       This is done in two places.\n     *       If we do not need to know the blocktype, the copying\n     *       can be done here at the top of the program: we copy the data for\n     *       the last granule (computed during the last call) before it is\n     *       overwritten with the new data.  It looks like this:\n     *\n     *       0. static psymodel_data\n     *       1. calling_program_data = psymodel_data\n     *       2. compute psymodel_data\n     *\n     *       For data which needs to know the blocktype, the copying must be\n     *       done at the end of this loop, and the old values must be saved:\n     *\n     *       0. static psymodel_data_old\n     *       1. compute psymodel_data\n     *       2. compute possible block type of this granule\n     *       3. compute final block type of previous granule based on #2.\n     *       4. calling_program_data = psymodel_data_old\n     *       5. psymodel_data_old = psymodel_data\n     *     psycho_loudness_approx\n     *       jd - 2001 mar 12\n     *    in:  energy   - BLKSIZE/2 elements of frequency magnitudes ^ 2\n     *         gfp      - uses out_samplerate, ATHtype (also needed for ATHformula)\n     *    returns: loudness^2 approximation, a positive value roughly tuned for a value\n     *             of 1.0 for signals near clipping.\n     *    notes:   When calibrated, feeding this function binary white noise at sample\n     *             values +32767 or -32768 should return values that approach 3.\n     *             ATHformula is used to approximate an equal loudness curve.\n     *    future:  Data indicates that the shape of the equal loudness curve varies\n     *             with intensity.  This function might be improved by using an equal\n     *             loudness curve shaped for typical playback levels (instead of the\n     *             ATH, that is shaped for the threshold).  A flexible realization might\n     *             simply bend the existing ATH curve to achieve the desired shape.\n     *             However, the potential gain may not be enough to justify an effort.\n     * </PRE>\n     */\n    function psycho_loudness_approx(energy, gfc) {\n        var loudness_power = 0.0;\n        /* apply weights to power in freq. bands */\n        for (var i = 0; i < Encoder.BLKSIZE / 2; ++i)\n            loudness_power += energy[i] * gfc.ATH.eql_w[i];\n        loudness_power *= VO_SCALE;\n\n        return loudness_power;\n    }\n\n    function compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, wsamp_lPos, wsamp_s, wsamp_sPos, gr_out, chn, buffer, bufPos) {\n        var gfc = gfp.internal_flags;\n        if (chn < 2) {\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\n        }\n        /* FFT data for mid and side channel is derived from L & R */\n        else if (chn == 2) {\n            for (var j = Encoder.BLKSIZE - 1; j >= 0; --j) {\n                var l = wsamp_l[wsamp_lPos + 0][j];\n                var r = wsamp_l[wsamp_lPos + 1][j];\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util.SQRT2 * 0.5;\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util.SQRT2 * 0.5;\n            }\n            for (var b = 2; b >= 0; --b) {\n                for (var j = Encoder.BLKSIZE_s - 1; j >= 0; --j) {\n                    var l = wsamp_s[wsamp_sPos + 0][b][j];\n                    var r = wsamp_s[wsamp_sPos + 1][b][j];\n                    wsamp_s[wsamp_sPos + 0][b][j] = (l + r) * Util.SQRT2 * 0.5;\n                    wsamp_s[wsamp_sPos + 1][b][j] = (l - r) * Util.SQRT2 * 0.5;\n                }\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\n        fftenergy[0] *= fftenergy[0];\n\n        for (var j = Encoder.BLKSIZE / 2 - 1; j >= 0; --j) {\n            var re = (wsamp_l[wsamp_lPos + 0])[Encoder.BLKSIZE / 2 - j];\n            var im = (wsamp_l[wsamp_lPos + 0])[Encoder.BLKSIZE / 2 + j];\n            fftenergy[Encoder.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n        for (var b = 2; b >= 0; --b) {\n            fftenergy_s[b][0] = (wsamp_s[wsamp_sPos + 0])[b][0];\n            fftenergy_s[b][0] *= fftenergy_s[b][0];\n            for (var j = Encoder.BLKSIZE_s / 2 - 1; j >= 0; --j) {\n                var re = (wsamp_s[wsamp_sPos + 0])[b][Encoder.BLKSIZE_s\n                / 2 - j];\n                var im = (wsamp_s[wsamp_sPos + 0])[b][Encoder.BLKSIZE_s\n                / 2 + j];\n                fftenergy_s[b][Encoder.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                    * re + im * im) * 0.5);\n            }\n        }\n        /* total energy */\n        {\n            var totalenergy = 0.0;\n            for (var j = 11; j < Encoder.HBLKSIZE; j++)\n                totalenergy += fftenergy[j];\n\n            gfc.tot_ener[chn] = totalenergy;\n        }\n\n        if (gfp.analysis) {\n            for (var j = 0; j < Encoder.HBLKSIZE; j++) {\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\n            }\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\n        }\n\n        /*********************************************************************\n         * compute loudness approximation (used for ATH auto-level adjustment)\n         *********************************************************************/\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\n            // no loudness for mid/side ch\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\n        }\n    }\n\n    /* mask_add optimization */\n    /* init the limit values used to avoid computing log in mask_add when it is not necessary */\n\n    /**\n     * <PRE>\n     *  For example, with i = 10*log10(m2/m1)/10*16         (= log10(m2/m1)*16)\n     *\n     * abs(i)>8 is equivalent (as i is an integer) to\n     * abs(i)>=9\n     * i>=9 || i<=-9\n     * equivalent to (as i is the biggest integer smaller than log10(m2/m1)*16\n     * or the smallest integer bigger than log10(m2/m1)*16 depending on the sign of log10(m2/m1)*16)\n     * log10(m2/m1)>=9/16 || log10(m2/m1)<=-9/16\n     * exp10 is strictly increasing thus this is equivalent to\n     * m2/m1 >= 10^(9/16) || m2/m1<=10^(-9/16) which are comparisons to constants\n     * </PRE>\n     */\n\n    /**\n     * as in if(i>8)\n     */\n    var I1LIMIT = 8;\n    /**\n     * as in if(i>24) . changed 23\n     */\n    var I2LIMIT = 23;\n    /**\n     * as in if(m<15)\n     */\n    var MLIMIT = 15;\n\n    var ma_max_i1;\n    var ma_max_i2;\n    var ma_max_m;\n\n    /**\n     * This is the masking table:<BR>\n     * According to tonality, values are going from 0dB (TMN) to 9.3dB (NMT).<BR>\n     * After additive masking computation, 8dB are added, so final values are\n     * going from 8dB to 17.3dB\n     *\n     * pow(10, -0.0..-0.6)\n     */\n    var tab = [1.0, 0.79433, 0.63096, 0.63096,\n        0.63096, 0.63096, 0.63096, 0.25119, 0.11749];\n\n    function init_mask_add_max_values() {\n        ma_max_i1 = Math.pow(10, (I1LIMIT + 1) / 16.0);\n        ma_max_i2 = Math.pow(10, (I2LIMIT + 1) / 16.0);\n        ma_max_m = Math.pow(10, (MLIMIT) / 10.0);\n    }\n\n    var table1 = [3.3246 * 3.3246,\n        3.23837 * 3.23837, 3.15437 * 3.15437, 3.00412 * 3.00412,\n        2.86103 * 2.86103, 2.65407 * 2.65407, 2.46209 * 2.46209,\n        2.284 * 2.284, 2.11879 * 2.11879, 1.96552 * 1.96552,\n        1.82335 * 1.82335, 1.69146 * 1.69146, 1.56911 * 1.56911,\n        1.46658 * 1.46658, 1.37074 * 1.37074, 1.31036 * 1.31036,\n        1.25264 * 1.25264, 1.20648 * 1.20648, 1.16203 * 1.16203,\n        1.12765 * 1.12765, 1.09428 * 1.09428, 1.0659 * 1.0659,\n        1.03826 * 1.03826, 1.01895 * 1.01895, 1];\n\n    var table2 = [1.33352 * 1.33352,\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\n\n    var table3 = [2.35364 * 2.35364,\n        2.29259 * 2.29259, 2.23313 * 2.23313, 2.12675 * 2.12675,\n        2.02545 * 2.02545, 1.87894 * 1.87894, 1.74303 * 1.74303,\n        1.61695 * 1.61695, 1.49999 * 1.49999, 1.39148 * 1.39148,\n        1.29083 * 1.29083, 1.19746 * 1.19746, 1.11084 * 1.11084,\n        1.03826 * 1.03826];\n\n    /**\n     * addition of simultaneous masking Naoki Shibata 2000/7\n     */\n    function mask_add(m1, m2, kk, b, gfc, shortblock) {\n        var ratio;\n\n        if (m2 > m1) {\n            if (m2 < (m1 * ma_max_i2))\n                ratio = m2 / m1;\n            else\n                return (m1 + m2);\n        } else {\n            if (m1 >= (m2 * ma_max_i2))\n                return (m1 + m2);\n            ratio = m1 / m2;\n        }\n\n        /* Should always be true, just checking */\n        assert(m1 >= 0);\n        assert(m2 >= 0);\n\n        m1 += m2;\n        //if (((long)(b + 3) & 0xffffffff) <= 3 + 3) {\n        if ((b + 3) <= 3 + 3) {\n            /* approximately, 1 bark = 3 partitions */\n            /* 65% of the cases */\n            /* originally 'if(i > 8)' */\n            if (ratio >= ma_max_i1) {\n                /* 43% of the total */\n                return m1;\n            }\n\n            /* 22% of the total */\n            var i = 0 | (Util.FAST_LOG10_X(ratio, 16.0));\n            return m1 * table2[i];\n        }\n\n        /**\n         * <PRE>\n         * m<15 equ log10((m1+m2)/gfc.ATH.cb[k])<1.5\n         * equ (m1+m2)/gfc.ATH.cb[k]<10^1.5\n         * equ (m1+m2)<10^1.5 * gfc.ATH.cb[k]\n         * </PRE>\n         */\n        var i = 0 | Util.FAST_LOG10_X(ratio, 16.0);\n        if (shortblock != 0) {\n            m2 = gfc.ATH.cb_s[kk] * gfc.ATH.adjust;\n        } else {\n            m2 = gfc.ATH.cb_l[kk] * gfc.ATH.adjust;\n        }\n        assert(m2 >= 0);\n        if (m1 < ma_max_m * m2) {\n            /* 3% of the total */\n            /* Originally if (m > 0) { */\n            if (m1 > m2) {\n                var f, r;\n\n                f = 1.0;\n                if (i <= 13)\n                    f = table3[i];\n\n                r = Util.FAST_LOG10_X(m1 / m2, 10.0 / 15.0);\n                return m1 * ((table1[i] - f) * r + f);\n            }\n\n            if (i > 13)\n                return m1;\n\n            return m1 * table3[i];\n        }\n\n        /* 10% of total */\n        return m1 * table1[i];\n    }\n\n    var table2_ = [1.33352 * 1.33352,\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\n\n    /**\n     * addition of simultaneous masking Naoki Shibata 2000/7\n     */\n    function vbrpsy_mask_add(m1, m2, b) {\n        var ratio;\n\n        if (m1 < 0) {\n            m1 = 0;\n        }\n        if (m2 < 0) {\n            m2 = 0;\n        }\n        if (m1 <= 0) {\n            return m2;\n        }\n        if (m2 <= 0) {\n            return m1;\n        }\n        if (m2 > m1) {\n            ratio = m2 / m1;\n        } else {\n            ratio = m1 / m2;\n        }\n        if (-2 <= b && b <= 2) {\n            /* approximately, 1 bark = 3 partitions */\n            /* originally 'if(i > 8)' */\n            if (ratio >= ma_max_i1) {\n                return m1 + m2;\n            } else {\n                var i = 0 | (Util.FAST_LOG10_X(ratio, 16.0));\n                return (m1 + m2) * table2_[i];\n            }\n        }\n        if (ratio < ma_max_i2) {\n            return m1 + m2;\n        }\n        if (m1 < m2) {\n            m1 = m2;\n        }\n        return m1;\n    }\n\n    /**\n     * compute interchannel masking effects\n     */\n    function calc_interchannel_masking(gfp, ratio) {\n        var gfc = gfp.internal_flags;\n        if (gfc.channels_out > 1) {\n            for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\n                var l = gfc.thm[0].l[sb];\n                var r = gfc.thm[1].l[sb];\n                gfc.thm[0].l[sb] += r * ratio;\n                gfc.thm[1].l[sb] += l * ratio;\n            }\n            for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n                for (var sblock = 0; sblock < 3; sblock++) {\n                    var l = gfc.thm[0].s[sb][sblock];\n                    var r = gfc.thm[1].s[sb][sblock];\n                    gfc.thm[0].s[sb][sblock] += r * ratio;\n                    gfc.thm[1].s[sb][sblock] += l * ratio;\n                }\n            }\n        }\n    }\n\n    /**\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\n     */\n    function msfix1(gfc) {\n        for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\n            /* use this fix if L & R masking differs by 2db or less */\n            /* if db = 10*log10(x2/x1) < 2 */\n            /* if (x2 < 1.58*x1) { */\n            if (gfc.thm[0].l[sb] > 1.58 * gfc.thm[1].l[sb]\n                || gfc.thm[1].l[sb] > 1.58 * gfc.thm[0].l[sb])\n                continue;\n            var mld = gfc.mld_l[sb] * gfc.en[3].l[sb];\n            var rmid = Math.max(gfc.thm[2].l[sb],\n                Math.min(gfc.thm[3].l[sb], mld));\n\n            mld = gfc.mld_l[sb] * gfc.en[2].l[sb];\n            var rside = Math.max(gfc.thm[3].l[sb],\n                Math.min(gfc.thm[2].l[sb], mld));\n            gfc.thm[2].l[sb] = rmid;\n            gfc.thm[3].l[sb] = rside;\n        }\n\n        for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                if (gfc.thm[0].s[sb][sblock] > 1.58 * gfc.thm[1].s[sb][sblock]\n                    || gfc.thm[1].s[sb][sblock] > 1.58 * gfc.thm[0].s[sb][sblock])\n                    continue;\n                var mld = gfc.mld_s[sb] * gfc.en[3].s[sb][sblock];\n                var rmid = Math.max(gfc.thm[2].s[sb][sblock],\n                    Math.min(gfc.thm[3].s[sb][sblock], mld));\n\n                mld = gfc.mld_s[sb] * gfc.en[2].s[sb][sblock];\n                var rside = Math.max(gfc.thm[3].s[sb][sblock],\n                    Math.min(gfc.thm[2].s[sb][sblock], mld));\n\n                gfc.thm[2].s[sb][sblock] = rmid;\n                gfc.thm[3].s[sb][sblock] = rside;\n            }\n        }\n    }\n\n    /**\n     * Adjust M/S maskings if user set \"msfix\"\n     *\n     * Naoki Shibata 2000\n     */\n    function ns_msfix(gfc, msfix, athadjust) {\n        var msfix2 = msfix;\n        var athlower = Math.pow(10, athadjust);\n\n        msfix *= 2.0;\n        msfix2 *= 2.0;\n        for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\n            var thmLR, thmM, thmS, ath;\n            ath = (gfc.ATH.cb_l[gfc.bm_l[sb]]) * athlower;\n            thmLR = Math.min(Math.max(gfc.thm[0].l[sb], ath),\n                Math.max(gfc.thm[1].l[sb], ath));\n            thmM = Math.max(gfc.thm[2].l[sb], ath);\n            thmS = Math.max(gfc.thm[3].l[sb], ath);\n            if (thmLR * msfix < thmM + thmS) {\n                var f = thmLR * msfix2 / (thmM + thmS);\n                thmM *= f;\n                thmS *= f;\n                assert(thmM + thmS > 0);\n            }\n            gfc.thm[2].l[sb] = Math.min(thmM, gfc.thm[2].l[sb]);\n            gfc.thm[3].l[sb] = Math.min(thmS, gfc.thm[3].l[sb]);\n        }\n\n        athlower *= ( Encoder.BLKSIZE_s / Encoder.BLKSIZE);\n        for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                var thmLR, thmM, thmS, ath;\n                ath = (gfc.ATH.cb_s[gfc.bm_s[sb]]) * athlower;\n                thmLR = Math.min(Math.max(gfc.thm[0].s[sb][sblock], ath),\n                    Math.max(gfc.thm[1].s[sb][sblock], ath));\n                thmM = Math.max(gfc.thm[2].s[sb][sblock], ath);\n                thmS = Math.max(gfc.thm[3].s[sb][sblock], ath);\n\n                if (thmLR * msfix < thmM + thmS) {\n                    var f = thmLR * msfix / (thmM + thmS);\n                    thmM *= f;\n                    thmS *= f;\n                    assert(thmM + thmS > 0);\n                }\n                gfc.thm[2].s[sb][sblock] = Math.min(gfc.thm[2].s[sb][sblock],\n                    thmM);\n                gfc.thm[3].s[sb][sblock] = Math.min(gfc.thm[3].s[sb][sblock],\n                    thmS);\n            }\n        }\n    }\n\n    /**\n     * short block threshold calculation (part 2)\n     *\n     * partition band bo_s[sfb] is at the transition from scalefactor band sfb\n     * to the next one sfb+1; enn and thmm have to be split between them\n     */\n    function convert_partition2scalefac_s(gfc, eb, thr, chn, sblock) {\n        var sb, b;\n        var enn = 0.0;\n        var thmm = 0.0;\n        for (sb = b = 0; sb < Encoder.SBMAX_s; ++b, ++sb) {\n            var bo_s_sb = gfc.bo_s[sb];\n            var npart_s = gfc.npart_s;\n            var b_lim = bo_s_sb < npart_s ? bo_s_sb : npart_s;\n            while (b < b_lim) {\n                assert(eb[b] >= 0);\n                // iff failed, it may indicate some index error elsewhere\n                assert(thr[b] >= 0);\n                enn += eb[b];\n                thmm += thr[b];\n                b++;\n            }\n            gfc.en[chn].s[sb][sblock] = enn;\n            gfc.thm[chn].s[sb][sblock] = thmm;\n\n            if (b >= npart_s) {\n                ++sb;\n                break;\n            }\n            assert(eb[b] >= 0);\n            // iff failed, it may indicate some index error elsewhere\n            assert(thr[b] >= 0);\n            {\n                /* at transition sfb . sfb+1 */\n                var w_curr = gfc.PSY.bo_s_weight[sb];\n                var w_next = 1.0 - w_curr;\n                enn = w_curr * eb[b];\n                thmm = w_curr * thr[b];\n                gfc.en[chn].s[sb][sblock] += enn;\n                gfc.thm[chn].s[sb][sblock] += thmm;\n                enn = w_next * eb[b];\n                thmm = w_next * thr[b];\n            }\n        }\n        /* zero initialize the rest */\n        for (; sb < Encoder.SBMAX_s; ++sb) {\n            gfc.en[chn].s[sb][sblock] = 0;\n            gfc.thm[chn].s[sb][sblock] = 0;\n        }\n    }\n\n    /**\n     * longblock threshold calculation (part 2)\n     */\n    function convert_partition2scalefac_l(gfc, eb, thr, chn) {\n        var sb, b;\n        var enn = 0.0;\n        var thmm = 0.0;\n        for (sb = b = 0; sb < Encoder.SBMAX_l; ++b, ++sb) {\n            var bo_l_sb = gfc.bo_l[sb];\n            var npart_l = gfc.npart_l;\n            var b_lim = bo_l_sb < npart_l ? bo_l_sb : npart_l;\n            while (b < b_lim) {\n                assert(eb[b] >= 0);\n                // iff failed, it may indicate some index error elsewhere\n                assert(thr[b] >= 0);\n                enn += eb[b];\n                thmm += thr[b];\n                b++;\n            }\n            gfc.en[chn].l[sb] = enn;\n            gfc.thm[chn].l[sb] = thmm;\n\n            if (b >= npart_l) {\n                ++sb;\n                break;\n            }\n            assert(eb[b] >= 0);\n            assert(thr[b] >= 0);\n            {\n                /* at transition sfb . sfb+1 */\n                var w_curr = gfc.PSY.bo_l_weight[sb];\n                var w_next = 1.0 - w_curr;\n                enn = w_curr * eb[b];\n                thmm = w_curr * thr[b];\n                gfc.en[chn].l[sb] += enn;\n                gfc.thm[chn].l[sb] += thmm;\n                enn = w_next * eb[b];\n                thmm = w_next * thr[b];\n            }\n        }\n        /* zero initialize the rest */\n        for (; sb < Encoder.SBMAX_l; ++sb) {\n            gfc.en[chn].l[sb] = 0;\n            gfc.thm[chn].l[sb] = 0;\n        }\n    }\n\n    function compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\n        var gfc = gfp.internal_flags;\n        var j, b;\n\n        for (b = j = 0; b < gfc.npart_s; ++b) {\n            var ebb = 0, m = 0;\n            var n = gfc.numlines_s[b];\n            for (var i = 0; i < n; ++i, ++j) {\n                var el = fftenergy_s[sblock][j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n        }\n        assert(b == gfc.npart_s);\n        assert(j == 129);\n        for (j = b = 0; b < gfc.npart_s; b++) {\n            var kk = gfc.s3ind_s[b][0];\n            var ecb = gfc.s3_ss[j++] * eb[kk];\n            ++kk;\n            while (kk <= gfc.s3ind_s[b][1]) {\n                ecb += gfc.s3_ss[j] * eb[kk];\n                ++j;\n                ++kk;\n            }\n\n            { /* limit calculated threshold by previous granule */\n                var x = rpelev_s * gfc.nb_s1[chn][b];\n                thr[b] = Math.min(ecb, x);\n            }\n            if (gfc.blocktype_old[chn & 1] == Encoder.SHORT_TYPE) {\n                /* limit calculated threshold by even older granule */\n                var x = rpelev2_s * gfc.nb_s2[chn][b];\n                var y = thr[b];\n                thr[b] = Math.min(x, y);\n            }\n\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n            gfc.nb_s1[chn][b] = ecb;\n            assert(thr[b] >= 0);\n        }\n        for (; b <= Encoder.CBANDS; ++b) {\n            eb[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function block_type_set(gfp, uselongblock, blocktype_d, blocktype) {\n        var gfc = gfp.internal_flags;\n\n        if (gfp.short_blocks == ShortBlock.short_block_coupled\n                /* force both channels to use the same block type */\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\n                /* But even without ms_stereo, FhG does this */\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\n            uselongblock[0] = uselongblock[1] = 0;\n\n        /*\n         * update the blocktype of the previous granule, since it depends on\n         * what happend in this granule\n         */\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            blocktype[chn] = Encoder.NORM_TYPE;\n            /* disable short blocks */\n            if (gfp.short_blocks == ShortBlock.short_block_dispensed)\n                uselongblock[chn] = 1;\n            if (gfp.short_blocks == ShortBlock.short_block_forced)\n                uselongblock[chn] = 0;\n\n            if (uselongblock[chn] != 0) {\n                /* no attack : use long blocks */\n                assert(gfc.blocktype_old[chn] != Encoder.START_TYPE);\n                if (gfc.blocktype_old[chn] == Encoder.SHORT_TYPE)\n                    blocktype[chn] = Encoder.STOP_TYPE;\n            } else {\n                /* attack : use short blocks */\n                blocktype[chn] = Encoder.SHORT_TYPE;\n                if (gfc.blocktype_old[chn] == Encoder.NORM_TYPE) {\n                    gfc.blocktype_old[chn] = Encoder.START_TYPE;\n                }\n                if (gfc.blocktype_old[chn] == Encoder.STOP_TYPE)\n                    gfc.blocktype_old[chn] = Encoder.SHORT_TYPE;\n            }\n\n            blocktype_d[chn] = gfc.blocktype_old[chn];\n            // value returned to calling program\n            gfc.blocktype_old[chn] = blocktype[chn];\n            // save for next call to l3psy_anal\n        }\n    }\n\n    function NS_INTERP(x, y, r) {\n        /* was pow((x),(r))*pow((y),1-(r)) */\n        if (r >= 1.0) {\n            /* 99.7% of the time */\n            return x;\n        }\n        if (r <= 0.0)\n            return y;\n        if (y > 0.0) {\n            /* rest of the time */\n            return (Math.pow(x / y, r) * y);\n        }\n        /* never happens */\n        return 0.0;\n    }\n\n    /**\n     * these values are tuned only for 44.1kHz...\n     */\n    var regcoef_s = [11.8, 13.6, 17.2, 32, 46.5,\n        51.3, 57.5, 67.1, 71.5, 84.6, 97.6, 130,\n        /* 255.8 */\n    ];\n\n    function pecalc_s(mr, masking_lower) {\n        var pe_s = 1236.28 / 4;\n        for (var sb = 0; sb < Encoder.SBMAX_s - 1; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                var thm = mr.thm.s[sb][sblock];\n                assert(sb < regcoef_s.length);\n                if (thm > 0.0) {\n                    var x = thm * masking_lower;\n                    var en = mr.en.s[sb][sblock];\n                    if (en > x) {\n                        if (en > x * 1e10) {\n                            pe_s += regcoef_s[sb] * (10.0 * LOG10);\n                        } else {\n                            assert(x > 0);\n                            pe_s += regcoef_s[sb] * Util.FAST_LOG10(en / x);\n                        }\n                    }\n                }\n            }\n        }\n\n        return pe_s;\n    }\n\n    /**\n     * these values are tuned only for 44.1kHz...\n     */\n    var regcoef_l = [6.8, 5.8, 5.8, 6.4, 6.5, 9.9,\n        12.1, 14.4, 15, 18.9, 21.6, 26.9, 34.2, 40.2, 46.8, 56.5,\n        60.7, 73.9, 85.7, 93.4, 126.1,\n        /* 241.3 */\n    ];\n\n    function pecalc_l(mr, masking_lower) {\n        var pe_l = 1124.23 / 4;\n        for (var sb = 0; sb < Encoder.SBMAX_l - 1; sb++) {\n            var thm = mr.thm.l[sb];\n            assert(sb < regcoef_l.length);\n            if (thm > 0.0) {\n                var x = thm * masking_lower;\n                var en = mr.en.l[sb];\n                if (en > x) {\n                    if (en > x * 1e10) {\n                        pe_l += regcoef_l[sb] * (10.0 * LOG10);\n                    } else {\n                        assert(x > 0);\n                        pe_l += regcoef_l[sb] * Util.FAST_LOG10(en / x);\n                    }\n                }\n            }\n        }\n        return pe_l;\n    }\n\n    function calc_energy(gfc, fftenergy, eb, max, avg) {\n        var b, j;\n\n        for (b = j = 0; b < gfc.npart_l; ++b) {\n            var ebb = 0, m = 0;\n            var i;\n            for (i = 0; i < gfc.numlines_l[b]; ++i, ++j) {\n                var el = fftenergy[j];\n                assert(el >= 0);\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n            max[b] = m;\n            avg[b] = ebb * gfc.rnumlines_l[b];\n            assert(gfc.rnumlines_l[b] >= 0);\n            assert(ebb >= 0);\n            assert(eb[b] >= 0);\n            assert(max[b] >= 0);\n            assert(avg[b] >= 0);\n        }\n    }\n\n    function calc_mask_index_l(gfc, max, avg, mask_idx) {\n        var last_tab_entry = tab.length - 1;\n        var b = 0;\n        var a = avg[b] + avg[b + 1];\n        assert(a >= 0);\n        if (a > 0.0) {\n            var m = max[b];\n            if (m < max[b + 1])\n                m = max[b + 1];\n            assert((gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n\n        for (b = 1; b < gfc.npart_l - 1; b++) {\n            a = avg[b - 1] + avg[b] + avg[b + 1];\n            assert(a >= 0);\n            if (a > 0.0) {\n                var m = max[b - 1];\n                if (m < max[b])\n                    m = max[b];\n                if (m < max[b + 1])\n                    m = max[b + 1];\n                assert((gfc.numlines_l[b - 1] + gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1) > 0);\n                a = 20.0\n                    * (m * 3.0 - a)\n                    / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b]\n                    + gfc.numlines_l[b + 1] - 1));\n                var k = 0 | a;\n                if (k > last_tab_entry)\n                    k = last_tab_entry;\n                mask_idx[b] = k;\n            } else {\n                mask_idx[b] = 0;\n            }\n        }\n        assert(b > 0);\n        assert(b == gfc.npart_l - 1);\n\n        a = avg[b - 1] + avg[b];\n        assert(a >= 0);\n        if (a > 0.0) {\n            var m = max[b - 1];\n            if (m < max[b])\n                m = max[b];\n            assert((gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n        assert(b == (gfc.npart_l - 1));\n    }\n\n    var fircoef = [\n        -8.65163e-18 * 2, -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2, 0.0931738 * 2,\n        -5.52212e-17 * 2, -0.313819 * 2\n    ];\n\n    this.L3psycho_anal_ns = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\n        /*\n         * to get a good cache performance, one has to think about the sequence,\n         * in which the variables are used.\n         */\n        var gfc = gfp.internal_flags;\n\n        /* fft and energy calculation */\n        var wsamp_L = new_float_n([2, Encoder.BLKSIZE]);\n        var wsamp_S = new_float_n([2, 3, Encoder.BLKSIZE_s]);\n\n        /* convolution */\n        var eb_l = new_float(Encoder.CBANDS + 1);\n        var eb_s = new_float(Encoder.CBANDS + 1);\n        var thr = new_float(Encoder.CBANDS + 2);\n\n        /* block type */\n        var blocktype = new_int(2), uselongblock = new_int(2);\n\n        /* usual variables like loop indices, etc.. */\n        var numchn, chn;\n        var b, i, j, k;\n        var sb, sblock;\n\n        /* variables used for --nspsytune */\n        var ns_hpfsmpl = new_float_n([2, 576]);\n        var pcfact;\n        var mask_idx_l = new_int(Encoder.CBANDS + 2), mask_idx_s = new_int(Encoder.CBANDS + 2);\n\n        Arrays.fill(mask_idx_s, 0);\n\n        numchn = gfc.channels_out;\n        /* chn=2 and 3 = Mid and Side channels */\n        if (gfp.mode == MPEGMode.JOINT_STEREO)\n            numchn = 4;\n\n        if (gfp.VBR == VbrMode.vbr_off)\n            pcfact = gfc.ResvMax == 0 ? 0 : ( gfc.ResvSize)\n            / gfc.ResvMax * 0.5;\n        else if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh\n            || gfp.VBR == VbrMode.vbr_mt) {\n            pcfact = 0.6;\n        } else\n            pcfact = 1.0;\n\n        /**********************************************************************\n         * Apply HPF of fs/4 to the input signal. This is used for attack\n         * detection / handling.\n         **********************************************************************/\n        /* Don't copy the input buffer into a temporary buffer */\n        /* unroll the loop 2 times */\n        for (chn = 0; chn < gfc.channels_out; chn++) {\n            /* apply high pass filter of fs/4 */\n            var firbuf = buffer[chn];\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\n            assert(fircoef.length == ((NSFIRLEN - 1) / 2));\n            for (i = 0; i < 576; i++) {\n                var sum1, sum2;\n                sum1 = firbuf[firbufPos + i + 10];\n                sum2 = 0.0;\n                for (j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\n                    sum1 += fircoef[j]\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\n                        + NSFIRLEN - j]);\n                    sum2 += fircoef[j + 1]\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\n                        + i + NSFIRLEN - j - 1]);\n                }\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\n            }\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\n            if (numchn > 2) {\n                /* MS maskings */\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\n            }\n        }\n\n        for (chn = 0; chn < numchn; chn++) {\n            var wsamp_l;\n            var wsamp_s;\n            var en_subshort = new_float(12);\n            var en_short = [0, 0, 0, 0];\n            var attack_intensity = new_float(12);\n            var ns_uselongblock = 1;\n            var attackThreshold;\n            var max = new_float(Encoder.CBANDS), avg = new_float(Encoder.CBANDS);\n            var ns_attacks = [0, 0, 0, 0];\n            var fftenergy = new_float(Encoder.HBLKSIZE);\n            var fftenergy_s = new_float_n([3, Encoder.HBLKSIZE_s]);\n\n            /*\n             * rh 20040301: the following loops do access one off the limits so\n             * I increase the array dimensions by one and initialize the\n             * accessed values to zero\n             */\n            assert(gfc.npart_s <= Encoder.CBANDS);\n            assert(gfc.npart_l <= Encoder.CBANDS);\n\n            /***************************************************************\n             * determine the block type (window type)\n             ***************************************************************/\n            /* calculate energies of each sub-shortblocks */\n            for (i = 0; i < 3; i++) {\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\n                assert(gfc.nsPsy.last_en_subshort[chn][i + 4] > 0);\n                attack_intensity[i] = en_subshort[i]\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\n                en_short[0] += en_subshort[i];\n            }\n\n            if (chn == 2) {\n                for (i = 0; i < 576; i++) {\n                    var l, r;\n                    l = ns_hpfsmpl[0][i];\n                    r = ns_hpfsmpl[1][i];\n                    ns_hpfsmpl[0][i] = l + r;\n                    ns_hpfsmpl[1][i] = l - r;\n                }\n            }\n            {\n                var pf = ns_hpfsmpl[chn & 1];\n                var pfPos = 0;\n                for (i = 0; i < 9; i++) {\n                    var pfe = pfPos + 576 / 9;\n                    var p = 1.;\n                    for (; pfPos < pfe; pfPos++)\n                        if (p < Math.abs(pf[pfPos]))\n                            p = Math.abs(pf[pfPos]);\n\n                    gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\n                    en_short[1 + i / 3] += p;\n                    if (p > en_subshort[i + 3 - 2]) {\n                        assert(en_subshort[i + 3 - 2] > 0);\n                        p = p / en_subshort[i + 3 - 2];\n                    } else if (en_subshort[i + 3 - 2] > p * 10.0) {\n                        assert(p > 0);\n                        p = en_subshort[i + 3 - 2] / (p * 10.0);\n                    } else\n                        p = 0.0;\n                    attack_intensity[i + 3] = p;\n                }\n            }\n\n            if (gfp.analysis) {\n                var x = attack_intensity[0];\n                for (i = 1; i < 12; i++)\n                    if (x < attack_intensity[i])\n                        x = attack_intensity[i];\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\n                gfc.pinfo.ers_save[chn] = x;\n            }\n\n            /* compare energies between sub-shortblocks */\n            attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\n                : gfc.nsPsy.attackthre;\n            for (i = 0; i < 12; i++)\n                if (0 == ns_attacks[i / 3]\n                    && attack_intensity[i] > attackThreshold)\n                    ns_attacks[i / 3] = (i % 3) + 1;\n\n            /*\n             * should have energy change between short blocks, in order to avoid\n             * periodic signals\n             */\n            for (i = 1; i < 4; i++) {\n                var ratio;\n                if (en_short[i - 1] > en_short[i]) {\n                    assert(en_short[i] > 0);\n                    ratio = en_short[i - 1] / en_short[i];\n                } else {\n                    assert(en_short[i - 1] > 0);\n                    ratio = en_short[i] / en_short[i - 1];\n                }\n                if (ratio < 1.7) {\n                    ns_attacks[i] = 0;\n                    if (i == 1)\n                        ns_attacks[0] = 0;\n                }\n            }\n\n            if (ns_attacks[0] != 0 && gfc.nsPsy.lastAttacks[chn] != 0)\n                ns_attacks[0] = 0;\n\n            if (gfc.nsPsy.lastAttacks[chn] == 3\n                || (ns_attacks[0] + ns_attacks[1] + ns_attacks[2] + ns_attacks[3]) != 0) {\n                ns_uselongblock = 0;\n\n                if (ns_attacks[1] != 0 && ns_attacks[0] != 0)\n                    ns_attacks[1] = 0;\n                if (ns_attacks[2] != 0 && ns_attacks[1] != 0)\n                    ns_attacks[2] = 0;\n                if (ns_attacks[3] != 0 && ns_attacks[2] != 0)\n                    ns_attacks[3] = 0;\n            }\n\n            if (chn < 2) {\n                uselongblock[chn] = ns_uselongblock;\n            } else {\n                if (ns_uselongblock == 0) {\n                    uselongblock[0] = uselongblock[1] = 0;\n                }\n            }\n\n            /*\n             * there is a one granule delay. Copy maskings computed last call\n             * into masking_ratio to return to calling program.\n             */\n            energy[chn] = gfc.tot_ener[chn];\n\n            /*********************************************************************\n             * compute FFTs\n             *********************************************************************/\n            wsamp_s = wsamp_S;\n            wsamp_l = wsamp_L;\n            compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, (chn & 1),\n                wsamp_s, (chn & 1), gr_out, chn, buffer, bufPos);\n\n            /*********************************************************************\n             * Calculate the energy and the tonality of each partition.\n             *********************************************************************/\n            calc_energy(gfc, fftenergy, eb_l, max, avg);\n            calc_mask_index_l(gfc, max, avg, mask_idx_l);\n            /* compute masking thresholds for short blocks */\n            for (sblock = 0; sblock < 3; sblock++) {\n                var enn, thmm;\n                compute_masking_s(gfp, fftenergy_s, eb_s, thr, chn, sblock);\n                convert_partition2scalefac_s(gfc, eb_s, thr, chn, sblock);\n                /**** short block pre-echo control ****/\n                for (sb = 0; sb < Encoder.SBMAX_s; sb++) {\n                    thmm = gfc.thm[chn].s[sb][sblock];\n\n                    thmm *= NS_PREECHO_ATT0;\n                    if (ns_attacks[sblock] >= 2 || ns_attacks[sblock + 1] == 1) {\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT1 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    }\n\n                    if (ns_attacks[sblock] == 1) {\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT2 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    } else if ((sblock != 0 && ns_attacks[sblock - 1] == 3)\n                        || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\n                        var idx = (sblock != 2) ? sblock + 1 : 0;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT2 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    }\n\n                    /* pulse like signal detection for fatboy.wav and so on */\n                    enn = en_subshort[sblock * 3 + 3]\n                        + en_subshort[sblock * 3 + 4]\n                        + en_subshort[sblock * 3 + 5];\n                    if (en_subshort[sblock * 3 + 5] * 6 < enn) {\n                        thmm *= 0.5;\n                        if (en_subshort[sblock * 3 + 4] * 6 < enn)\n                            thmm *= 0.5;\n                    }\n\n                    gfc.thm[chn].s[sb][sblock] = thmm;\n                }\n            }\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[2];\n\n            /*********************************************************************\n             * convolve the partitioned energy and unpredictability with the\n             * spreading function, s3_l[b][k]\n             ********************************************************************/\n            k = 0;\n            {\n                for (b = 0; b < gfc.npart_l; b++) {\n                    /*\n                     * convolve the partitioned energy with the spreading\n                     * function\n                     */\n                    var kk = gfc.s3ind[b][0];\n                    var eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\n                    var ecb = gfc.s3_ll[k++] * eb2;\n                    while (++kk <= gfc.s3ind[b][1]) {\n                        eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\n                        ecb = mask_add(ecb, gfc.s3_ll[k++] * eb2, kk, kk - b,\n                            gfc, 0);\n                    }\n                    ecb *= 0.158489319246111;\n                    /* pow(10,-0.8) */\n\n                    /**** long block pre-echo control ****/\n                    /**\n                     * <PRE>\n                     * dont use long block pre-echo control if previous granule was\n                     * a short block.  This is to avoid the situation:\n                     * frame0:  quiet (very low masking)\n                     * frame1:  surge  (triggers short blocks)\n                     * frame2:  regular frame.  looks like pre-echo when compared to\n                     *          frame0, but all pre-echo was in frame1.\n                     * </PRE>\n                     */\n                    /*\n                     * chn=0,1 L and R channels\n                     *\n                     * chn=2,3 S and M channels.\n                     */\n\n                    if (gfc.blocktype_old[chn & 1] == Encoder.SHORT_TYPE)\n                        thr[b] = ecb;\n                    else\n                        thr[b] = NS_INTERP(\n                            Math.min(ecb, Math.min(rpelev\n                                * gfc.nb_1[chn][b], rpelev2\n                                * gfc.nb_2[chn][b])), ecb, pcfact);\n\n                    gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n                    gfc.nb_1[chn][b] = ecb;\n                }\n            }\n            for (; b <= Encoder.CBANDS; ++b) {\n                eb_l[b] = 0;\n                thr[b] = 0;\n            }\n            /* compute masking thresholds for long blocks */\n            convert_partition2scalefac_l(gfc, eb_l, thr, chn);\n        }\n        /* end loop over chn */\n\n        if (gfp.mode == MPEGMode.STEREO || gfp.mode == MPEGMode.JOINT_STEREO) {\n            if (gfp.interChRatio > 0.0) {\n                calc_interchannel_masking(gfp, gfp.interChRatio);\n            }\n        }\n\n        if (gfp.mode == MPEGMode.JOINT_STEREO) {\n            var msfix;\n            msfix1(gfc);\n            msfix = gfp.msfix;\n            if (Math.abs(msfix) > 0.0)\n                ns_msfix(gfc, msfix, gfp.ATHlower * gfc.ATH.adjust);\n        }\n\n        /***************************************************************\n         * determine final block type\n         ***************************************************************/\n        block_type_set(gfp, uselongblock, blocktype_d, blocktype);\n\n        /*********************************************************************\n         * compute the value of PE to return ... no delay and advance\n         *********************************************************************/\n        for (chn = 0; chn < numchn; chn++) {\n            var ppe;\n            var ppePos = 0;\n            var type;\n            var mr;\n\n            if (chn > 1) {\n                ppe = percep_MS_entropy;\n                ppePos = -2;\n                type = Encoder.NORM_TYPE;\n                if (blocktype_d[0] == Encoder.SHORT_TYPE\n                    || blocktype_d[1] == Encoder.SHORT_TYPE)\n                    type = Encoder.SHORT_TYPE;\n                mr = masking_MS_ratio[gr_out][chn - 2];\n            } else {\n                ppe = percep_entropy;\n                ppePos = 0;\n                type = blocktype_d[chn];\n                mr = masking_ratio[gr_out][chn];\n            }\n\n            if (type == Encoder.SHORT_TYPE)\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\n            else\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\n\n            if (gfp.analysis)\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\n\n        }\n        return 0;\n    }\n\n    function vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out, fftenergy, wsamp_l, wsamp_lPos) {\n        var gfc = gfp.internal_flags;\n        if (chn < 2) {\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\n        } else if (chn == 2) {\n            /* FFT data for mid and side channel is derived from L & R */\n            for (var j = Encoder.BLKSIZE - 1; j >= 0; --j) {\n                var l = wsamp_l[wsamp_lPos + 0][j];\n                var r = wsamp_l[wsamp_lPos + 1][j];\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util.SQRT2 * 0.5;\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util.SQRT2 * 0.5;\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\n        fftenergy[0] *= fftenergy[0];\n\n        for (var j = Encoder.BLKSIZE / 2 - 1; j >= 0; --j) {\n            var re = wsamp_l[wsamp_lPos + 0][Encoder.BLKSIZE / 2 - j];\n            var im = wsamp_l[wsamp_lPos + 0][Encoder.BLKSIZE / 2 + j];\n            fftenergy[Encoder.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n        /* total energy */\n        {\n            var totalenergy = 0.0;\n            for (var j = 11; j < Encoder.HBLKSIZE; j++)\n                totalenergy += fftenergy[j];\n\n            gfc.tot_ener[chn] = totalenergy;\n        }\n\n        if (gfp.analysis) {\n            for (var j = 0; j < Encoder.HBLKSIZE; j++) {\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\n            }\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\n        }\n    }\n\n    function vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock, fftenergy_s, wsamp_s, wsamp_sPos) {\n        var gfc = gfp.internal_flags;\n\n        if (sblock == 0 && chn < 2) {\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\n        }\n        if (chn == 2) {\n            /* FFT data for mid and side channel is derived from L & R */\n            for (var j = Encoder.BLKSIZE_s - 1; j >= 0; --j) {\n                var l = wsamp_s[wsamp_sPos + 0][sblock][j];\n                var r = wsamp_s[wsamp_sPos + 1][sblock][j];\n                wsamp_s[wsamp_sPos + 0][sblock][j] = (l + r) * Util.SQRT2 * 0.5;\n                wsamp_s[wsamp_sPos + 1][sblock][j] = (l - r) * Util.SQRT2 * 0.5;\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy_s[sblock][0] = wsamp_s[wsamp_sPos + 0][sblock][0];\n        fftenergy_s[sblock][0] *= fftenergy_s[sblock][0];\n        for (var j = Encoder.BLKSIZE_s / 2 - 1; j >= 0; --j) {\n            var re = wsamp_s[wsamp_sPos + 0][sblock][Encoder.BLKSIZE_s / 2 - j];\n            var im = wsamp_s[wsamp_sPos + 0][sblock][Encoder.BLKSIZE_s / 2 + j];\n            fftenergy_s[sblock][Encoder.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n    }\n\n    /**\n     * compute loudness approximation (used for ATH auto-level adjustment)\n     */\n    function vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn, fftenergy) {\n        var gfc = gfp.internal_flags;\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\n            // no loudness for mid/side ch\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\n        }\n    }\n\n    var fircoef_ = [-8.65163e-18 * 2,\n        -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2,\n        0.0931738 * 2, -5.52212e-17 * 2, -0.313819 * 2];\n\n    /**\n     * Apply HPF of fs/4 to the input signal. This is used for attack detection\n     * / handling.\n     */\n    function vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, energy, sub_short_factor, ns_attacks, uselongblock) {\n        var ns_hpfsmpl = new_float_n([2, 576]);\n        var gfc = gfp.internal_flags;\n        var n_chn_out = gfc.channels_out;\n        /* chn=2 and 3 = Mid and Side channels */\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4 : n_chn_out;\n        /* Don't copy the input buffer into a temporary buffer */\n        /* unroll the loop 2 times */\n        for (var chn = 0; chn < n_chn_out; chn++) {\n            /* apply high pass filter of fs/4 */\n            firbuf = buffer[chn];\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\n            assert(fircoef_.length == ((NSFIRLEN - 1) / 2));\n            for (var i = 0; i < 576; i++) {\n                var sum1, sum2;\n                sum1 = firbuf[firbufPos + i + 10];\n                sum2 = 0.0;\n                for (var j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\n                    sum1 += fircoef_[j]\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\n                        + NSFIRLEN - j]);\n                    sum2 += fircoef_[j + 1]\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\n                        + i + NSFIRLEN - j - 1]);\n                }\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\n            }\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\n            if (n_chn_psy > 2) {\n                /* MS maskings */\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\n            }\n        }\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            var attack_intensity = new_float(12);\n            var en_subshort = new_float(12);\n            var en_short = [0, 0, 0, 0];\n            var pf = ns_hpfsmpl[chn & 1];\n            var pfPos = 0;\n            var attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\n                : gfc.nsPsy.attackthre;\n            var ns_uselongblock = 1;\n\n            if (chn == 2) {\n                for (var i = 0, j = 576; j > 0; ++i, --j) {\n                    var l = ns_hpfsmpl[0][i];\n                    var r = ns_hpfsmpl[1][i];\n                    ns_hpfsmpl[0][i] = l + r;\n                    ns_hpfsmpl[1][i] = l - r;\n                }\n            }\n            /***************************************************************\n             * determine the block type (window type)\n             ***************************************************************/\n            /* calculate energies of each sub-shortblocks */\n            for (var i = 0; i < 3; i++) {\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\n                assert(gfc.nsPsy.last_en_subshort[chn][i + 4] > 0);\n                attack_intensity[i] = en_subshort[i]\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\n                en_short[0] += en_subshort[i];\n            }\n\n            for (var i = 0; i < 9; i++) {\n                var pfe = pfPos + 576 / 9;\n                var p = 1.;\n                for (; pfPos < pfe; pfPos++)\n                    if (p < Math.abs(pf[pfPos]))\n                        p = Math.abs(pf[pfPos]);\n\n                gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\n                en_short[1 + i / 3] += p;\n                if (p > en_subshort[i + 3 - 2]) {\n                    assert(en_subshort[i + 3 - 2] > 0);\n                    p = p / en_subshort[i + 3 - 2];\n                } else if (en_subshort[i + 3 - 2] > p * 10.0) {\n                    assert(p > 0);\n                    p = en_subshort[i + 3 - 2] / (p * 10.0);\n                } else {\n                    p = 0.0;\n                }\n                attack_intensity[i + 3] = p;\n            }\n            /* pulse like signal detection for fatboy.wav and so on */\n            for (var i = 0; i < 3; ++i) {\n                var enn = en_subshort[i * 3 + 3]\n                    + en_subshort[i * 3 + 4] + en_subshort[i * 3 + 5];\n                var factor = 1.;\n                if (en_subshort[i * 3 + 5] * 6 < enn) {\n                    factor *= 0.5;\n                    if (en_subshort[i * 3 + 4] * 6 < enn) {\n                        factor *= 0.5;\n                    }\n                }\n                sub_short_factor[chn][i] = factor;\n            }\n\n            if (gfp.analysis) {\n                var x = attack_intensity[0];\n                for (var i = 1; i < 12; i++) {\n                    if (x < attack_intensity[i]) {\n                        x = attack_intensity[i];\n                    }\n                }\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\n                gfc.pinfo.ers_save[chn] = x;\n            }\n\n            /* compare energies between sub-shortblocks */\n            for (var i = 0; i < 12; i++) {\n                if (0 == ns_attacks[chn][i / 3]\n                    && attack_intensity[i] > attackThreshold) {\n                    ns_attacks[chn][i / 3] = (i % 3) + 1;\n                }\n            }\n\n            /*\n             * should have energy change between short blocks, in order to avoid\n             * periodic signals\n             */\n            /* Good samples to show the effect are Trumpet test songs */\n            /*\n             * GB: tuned (1) to avoid too many short blocks for test sample\n             * TRUMPET\n             */\n            /*\n             * RH: tuned (2) to let enough short blocks through for test sample\n             * FSOL and SNAPS\n             */\n            for (var i = 1; i < 4; i++) {\n                var u = en_short[i - 1];\n                var v = en_short[i];\n                var m = Math.max(u, v);\n                if (m < 40000) { /* (2) */\n                    if (u < 1.7 * v && v < 1.7 * u) { /* (1) */\n                        if (i == 1 && ns_attacks[chn][0] <= ns_attacks[chn][i]) {\n                            ns_attacks[chn][0] = 0;\n                        }\n                        ns_attacks[chn][i] = 0;\n                    }\n                }\n            }\n\n            if (ns_attacks[chn][0] <= gfc.nsPsy.lastAttacks[chn]) {\n                ns_attacks[chn][0] = 0;\n            }\n\n            if (gfc.nsPsy.lastAttacks[chn] == 3\n                || (ns_attacks[chn][0] + ns_attacks[chn][1]\n                + ns_attacks[chn][2] + ns_attacks[chn][3]) != 0) {\n                ns_uselongblock = 0;\n\n                if (ns_attacks[chn][1] != 0 && ns_attacks[chn][0] != 0) {\n                    ns_attacks[chn][1] = 0;\n                }\n                if (ns_attacks[chn][2] != 0 && ns_attacks[chn][1] != 0) {\n                    ns_attacks[chn][2] = 0;\n                }\n                if (ns_attacks[chn][3] != 0 && ns_attacks[chn][2] != 0) {\n                    ns_attacks[chn][3] = 0;\n                }\n            }\n            if (chn < 2) {\n                uselongblock[chn] = ns_uselongblock;\n            } else {\n                if (ns_uselongblock == 0) {\n                    uselongblock[0] = uselongblock[1] = 0;\n                }\n            }\n\n            /*\n             * there is a one granule delay. Copy maskings computed last call\n             * into masking_ratio to return to calling program.\n             */\n            energy[chn] = gfc.tot_ener[chn];\n        }\n    }\n\n    function vbrpsy_skip_masking_s(gfc, chn, sblock) {\n        if (sblock == 0) {\n            for (var b = 0; b < gfc.npart_s; b++) {\n                gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n                gfc.nb_s1[chn][b] = 0;\n            }\n        }\n    }\n\n    function vbrpsy_skip_masking_l(gfc, chn) {\n        for (var b = 0; b < gfc.npart_l; b++) {\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n            gfc.nb_1[chn][b] = 0;\n        }\n    }\n\n    function psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx) {\n        var last_tab_entry = tab.length - 1;\n        var b = 0;\n        var a = avg[b] + avg[b + 1];\n        assert(a >= 0);\n        if (a > 0.0) {\n            var m = max[b];\n            if (m < max[b + 1])\n                m = max[b + 1];\n            assert((gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n\n        for (b = 1; b < gfc.npart_s - 1; b++) {\n            a = avg[b - 1] + avg[b] + avg[b + 1];\n            assert(b + 1 < gfc.npart_s);\n            assert(a >= 0);\n            if (a > 0.0) {\n                var m = max[b - 1];\n                if (m < max[b])\n                    m = max[b];\n                if (m < max[b + 1])\n                    m = max[b + 1];\n                assert((gfc.numlines_s[b - 1] + gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1) > 0);\n                a = 20.0\n                    * (m * 3.0 - a)\n                    / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b]\n                    + gfc.numlines_s[b + 1] - 1));\n                var k = 0 | a;\n                if (k > last_tab_entry)\n                    k = last_tab_entry;\n                mask_idx[b] = k;\n            } else {\n                mask_idx[b] = 0;\n            }\n        }\n        assert(b > 0);\n        assert(b == gfc.npart_s - 1);\n\n        a = avg[b - 1] + avg[b];\n        assert(a >= 0);\n        if (a > 0.0) {\n            var m = max[b - 1];\n            if (m < max[b])\n                m = max[b];\n            assert((gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n        assert(b == (gfc.npart_s - 1));\n    }\n\n    function vbrpsy_compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\n        var gfc = gfp.internal_flags;\n        var max = new float[Encoder.CBANDS], avg = new_float(Encoder.CBANDS);\n        var i, j, b;\n        var mask_idx_s = new int[Encoder.CBANDS];\n\n        for (b = j = 0; b < gfc.npart_s; ++b) {\n            var ebb = 0, m = 0;\n            var n = gfc.numlines_s[b];\n            for (i = 0; i < n; ++i, ++j) {\n                var el = fftenergy_s[sblock][j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n            assert(ebb >= 0);\n            max[b] = m;\n            assert(n > 0);\n            avg[b] = ebb / n;\n            assert(avg[b] >= 0);\n        }\n        assert(b == gfc.npart_s);\n        assert(j == 129);\n        for (; b < Encoder.CBANDS; ++b) {\n            max[b] = 0;\n            avg[b] = 0;\n        }\n        psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx_s);\n        for (j = b = 0; b < gfc.npart_s; b++) {\n            var kk = gfc.s3ind_s[b][0];\n            var last = gfc.s3ind_s[b][1];\n            var dd, dd_n;\n            var x, ecb, avg_mask;\n            dd = mask_idx_s[kk];\n            dd_n = 1;\n            ecb = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\n            ++j;\n            ++kk;\n            while (kk <= last) {\n                dd += mask_idx_s[kk];\n                dd_n += 1;\n                x = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\n                ecb = vbrpsy_mask_add(ecb, x, kk - b);\n                ++j;\n                ++kk;\n            }\n            dd = (1 + 2 * dd) / (2 * dd_n);\n            avg_mask = tab[dd] * 0.5;\n            ecb *= avg_mask;\n            thr[b] = ecb;\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n            gfc.nb_s1[chn][b] = ecb;\n            {\n                /*\n                 * if THR exceeds EB, the quantization routines will take the\n                 * difference from other bands. in case of strong tonal samples\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\n                 * we limit THR here.\n                 */\n                x = max[b];\n                x *= gfc.minval_s[b];\n                x *= avg_mask;\n                if (thr[b] > x) {\n                    thr[b] = x;\n                }\n            }\n            if (gfc.masking_lower > 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            if (thr[b] > eb[b]) {\n                thr[b] = eb[b];\n            }\n            if (gfc.masking_lower < 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n\n            assert(thr[b] >= 0);\n        }\n        for (; b < Encoder.CBANDS; ++b) {\n            eb[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_masking_l(gfc, fftenergy, eb_l, thr, chn) {\n        var max = new_float(Encoder.CBANDS), avg = new_float(Encoder.CBANDS);\n        var mask_idx_l = new_int(Encoder.CBANDS + 2);\n        var b;\n\n        /*********************************************************************\n         * Calculate the energy and the tonality of each partition.\n         *********************************************************************/\n        calc_energy(gfc, fftenergy, eb_l, max, avg);\n        calc_mask_index_l(gfc, max, avg, mask_idx_l);\n\n        /*********************************************************************\n         * convolve the partitioned energy and unpredictability with the\n         * spreading function, s3_l[b][k]\n         ********************************************************************/\n        var k = 0;\n        for (b = 0; b < gfc.npart_l; b++) {\n            var x, ecb, avg_mask, t;\n            /* convolve the partitioned energy with the spreading function */\n            var kk = gfc.s3ind[b][0];\n            var last = gfc.s3ind[b][1];\n            var dd = 0, dd_n = 0;\n            dd = mask_idx_l[kk];\n            dd_n += 1;\n            ecb = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\n            ++k;\n            ++kk;\n            while (kk <= last) {\n                dd += mask_idx_l[kk];\n                dd_n += 1;\n                x = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\n                t = vbrpsy_mask_add(ecb, x, kk - b);\n                ecb = t;\n                ++k;\n                ++kk;\n            }\n            dd = (1 + 2 * dd) / (2 * dd_n);\n            avg_mask = tab[dd] * 0.5;\n            ecb *= avg_mask;\n\n            /**** long block pre-echo control ****/\n            /**\n             * <PRE>\n             * dont use long block pre-echo control if previous granule was\n             * a short block.  This is to avoid the situation:\n             * frame0:  quiet (very low masking)\n             * frame1:  surge  (triggers short blocks)\n             * frame2:  regular frame.  looks like pre-echo when compared to\n             *          frame0, but all pre-echo was in frame1.\n             * </PRE>\n             */\n            /*\n             * chn=0,1 L and R channels chn=2,3 S and M channels.\n             */\n            if (gfc.blocktype_old[chn & 0x01] == Encoder.SHORT_TYPE) {\n                var ecb_limit = rpelev * gfc.nb_1[chn][b];\n                if (ecb_limit > 0) {\n                    thr[b] = Math.min(ecb, ecb_limit);\n                } else {\n                    /**\n                     * <PRE>\n                     * Robert 071209:\n                     * Because we don't calculate long block psy when we know a granule\n                     * should be of short blocks, we don't have any clue how the granule\n                     * before would have looked like as a long block. So we have to guess\n                     * a little bit for this END_TYPE block.\n                     * Most of the time we get away with this sloppyness. (fingers crossed :)\n                     * The speed increase is worth it.\n                     * </PRE>\n                     */\n                    thr[b] = Math.min(ecb, eb_l[b] * NS_PREECHO_ATT2);\n                }\n            } else {\n                var ecb_limit_2 = rpelev2 * gfc.nb_2[chn][b];\n                var ecb_limit_1 = rpelev * gfc.nb_1[chn][b];\n                var ecb_limit;\n                if (ecb_limit_2 <= 0) {\n                    ecb_limit_2 = ecb;\n                }\n                if (ecb_limit_1 <= 0) {\n                    ecb_limit_1 = ecb;\n                }\n                if (gfc.blocktype_old[chn & 0x01] == Encoder.NORM_TYPE) {\n                    ecb_limit = Math.min(ecb_limit_1, ecb_limit_2);\n                } else {\n                    ecb_limit = ecb_limit_1;\n                }\n                thr[b] = Math.min(ecb, ecb_limit);\n            }\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n            gfc.nb_1[chn][b] = ecb;\n            {\n                /*\n                 * if THR exceeds EB, the quantization routines will take the\n                 * difference from other bands. in case of strong tonal samples\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\n                 * we limit THR here.\n                 */\n                x = max[b];\n                x *= gfc.minval_l[b];\n                x *= avg_mask;\n                if (thr[b] > x) {\n                    thr[b] = x;\n                }\n            }\n            if (gfc.masking_lower > 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            if (thr[b] > eb_l[b]) {\n                thr[b] = eb_l[b];\n            }\n            if (gfc.masking_lower < 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            assert(thr[b] >= 0);\n        }\n        for (; b < Encoder.CBANDS; ++b) {\n            eb_l[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_block_type(gfp, uselongblock) {\n        var gfc = gfp.internal_flags;\n\n        if (gfp.short_blocks == ShortBlock.short_block_coupled\n                /* force both channels to use the same block type */\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\n                /* But even without ms_stereo, FhG does this */\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\n            uselongblock[0] = uselongblock[1] = 0;\n\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            /* disable short blocks */\n            if (gfp.short_blocks == ShortBlock.short_block_dispensed) {\n                uselongblock[chn] = 1;\n            }\n            if (gfp.short_blocks == ShortBlock.short_block_forced) {\n                uselongblock[chn] = 0;\n            }\n        }\n    }\n\n    function vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d) {\n        var gfc = gfp.internal_flags;\n\n        /*\n         * update the blocktype of the previous granule, since it depends on\n         * what happend in this granule\n         */\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            var blocktype = Encoder.NORM_TYPE;\n            /* disable short blocks */\n\n            if (uselongblock[chn] != 0) {\n                /* no attack : use long blocks */\n                assert(gfc.blocktype_old[chn] != Encoder.START_TYPE);\n                if (gfc.blocktype_old[chn] == Encoder.SHORT_TYPE)\n                    blocktype = Encoder.STOP_TYPE;\n            } else {\n                /* attack : use short blocks */\n                blocktype = Encoder.SHORT_TYPE;\n                if (gfc.blocktype_old[chn] == Encoder.NORM_TYPE) {\n                    gfc.blocktype_old[chn] = Encoder.START_TYPE;\n                }\n                if (gfc.blocktype_old[chn] == Encoder.STOP_TYPE)\n                    gfc.blocktype_old[chn] = Encoder.SHORT_TYPE;\n            }\n\n            blocktype_d[chn] = gfc.blocktype_old[chn];\n            // value returned to calling program\n            gfc.blocktype_old[chn] = blocktype;\n            // save for next call to l3psy_anal\n        }\n    }\n\n    /**\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\n     */\n    function vbrpsy_compute_MS_thresholds(eb, thr, cb_mld, ath_cb, athadjust, msfix, n) {\n        var msfix2 = msfix * 2;\n        var athlower = msfix > 0 ? Math.pow(10, athadjust) : 1;\n        var rside, rmid;\n        for (var b = 0; b < n; ++b) {\n            var ebM = eb[2][b];\n            var ebS = eb[3][b];\n            var thmL = thr[0][b];\n            var thmR = thr[1][b];\n            var thmM = thr[2][b];\n            var thmS = thr[3][b];\n\n            /* use this fix if L & R masking differs by 2db or less */\n            if (thmL <= 1.58 * thmR && thmR <= 1.58 * thmL) {\n                var mld_m = cb_mld[b] * ebS;\n                var mld_s = cb_mld[b] * ebM;\n                rmid = Math.max(thmM, Math.min(thmS, mld_m));\n                rside = Math.max(thmS, Math.min(thmM, mld_s));\n            } else {\n                rmid = thmM;\n                rside = thmS;\n            }\n            if (msfix > 0) {\n                /***************************************************************/\n                /* Adjust M/S maskings if user set \"msfix\" */\n                /***************************************************************/\n                /* Naoki Shibata 2000 */\n                var thmLR, thmMS;\n                var ath = ath_cb[b] * athlower;\n                thmLR = Math.min(Math.max(thmL, ath), Math.max(thmR, ath));\n                thmM = Math.max(rmid, ath);\n                thmS = Math.max(rside, ath);\n                thmMS = thmM + thmS;\n                if (thmMS > 0 && (thmLR * msfix2) < thmMS) {\n                    var f = thmLR * msfix2 / thmMS;\n                    thmM *= f;\n                    thmS *= f;\n                    assert(thmMS > 0);\n                }\n                rmid = Math.min(thmM, rmid);\n                rside = Math.min(thmS, rside);\n            }\n            if (rmid > ebM) {\n                rmid = ebM;\n            }\n            if (rside > ebS) {\n                rside = ebS;\n            }\n            thr[2][b] = rmid;\n            thr[3][b] = rside;\n        }\n    }\n\n    this.L3psycho_anal_vbr = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\n        var gfc = gfp.internal_flags;\n\n        /* fft and energy calculation */\n        var wsamp_l;\n        var wsamp_s;\n        var fftenergy = new_float(Encoder.HBLKSIZE);\n        var fftenergy_s = new_float_n([3, Encoder.HBLKSIZE_s]);\n        var wsamp_L = new_float_n([2, Encoder.BLKSIZE]);\n        var wsamp_S = new_float_n([2, 3, Encoder.BLKSIZE_s]);\n        var eb = new_float_n([4, Encoder.CBANDS]), thr = new_float_n([4, Encoder.CBANDS]);\n        var sub_short_factor = new_float_n([4, 3]);\n        var pcfact = 0.6;\n\n        /* block type */\n        var ns_attacks = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0],\n            [0, 0, 0, 0]];\n        var uselongblock = new_int(2);\n\n        /* usual variables like loop indices, etc.. */\n\n        /* chn=2 and 3 = Mid and Side channels */\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4\n            : gfc.channels_out;\n\n        vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio,\n            masking_MS_ratio, energy, sub_short_factor, ns_attacks,\n            uselongblock);\n\n        vbrpsy_compute_block_type(gfp, uselongblock);\n\n        /* LONG BLOCK CASE */\n        {\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n                wsamp_l = wsamp_L;\n                vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out,\n                    fftenergy, wsamp_l, ch01);\n\n                vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn,\n                    fftenergy);\n\n                if (uselongblock[ch01] != 0) {\n                    vbrpsy_compute_masking_l(gfc, fftenergy, eb[chn], thr[chn],\n                        chn);\n                } else {\n                    vbrpsy_skip_masking_l(gfc, chn);\n                }\n            }\n            if ((uselongblock[0] + uselongblock[1]) == 2) {\n                /* M/S channel */\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                    vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_l,\n                        gfc.ATH.cb_l, gfp.ATHlower * gfc.ATH.adjust,\n                        gfp.msfix, gfc.npart_l);\n                }\n            }\n            /* TODO: apply adaptive ATH masking here ?? */\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n                if (uselongblock[ch01] != 0) {\n                    convert_partition2scalefac_l(gfc, eb[chn], thr[chn], chn);\n                }\n            }\n        }\n\n        /* SHORT BLOCKS CASE */\n        {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\n                    var ch01 = chn & 0x01;\n\n                    if (uselongblock[ch01] != 0) {\n                        vbrpsy_skip_masking_s(gfc, chn, sblock);\n                    } else {\n                        /* compute masking thresholds for short blocks */\n                        wsamp_s = wsamp_S;\n                        vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock,\n                            fftenergy_s, wsamp_s, ch01);\n                        vbrpsy_compute_masking_s(gfp, fftenergy_s, eb[chn],\n                            thr[chn], chn, sblock);\n                    }\n                }\n                if ((uselongblock[0] + uselongblock[1]) == 0) {\n                    /* M/S channel */\n                    if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                        vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_s,\n                            gfc.ATH.cb_s, gfp.ATHlower * gfc.ATH.adjust,\n                            gfp.msfix, gfc.npart_s);\n                    }\n                    /* L/R channel */\n                }\n                /* TODO: apply adaptive ATH masking here ?? */\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\n                    var ch01 = chn & 0x01;\n                    if (0 == uselongblock[ch01]) {\n                        convert_partition2scalefac_s(gfc, eb[chn], thr[chn],\n                            chn, sblock);\n                    }\n                }\n            }\n\n            /**** short block pre-echo control ****/\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n\n                if (uselongblock[ch01] != 0) {\n                    continue;\n                }\n                for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n                    var new_thmm = new_float(3);\n                    for (var sblock = 0; sblock < 3; sblock++) {\n                        var thmm = gfc.thm[chn].s[sb][sblock];\n                        thmm *= NS_PREECHO_ATT0;\n\n                        if (ns_attacks[chn][sblock] >= 2\n                            || ns_attacks[chn][sblock + 1] == 1) {\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT1 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        } else if (ns_attacks[chn][sblock] == 1) {\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT2 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        } else if ((sblock != 0 && ns_attacks[chn][sblock - 1] == 3)\n                            || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\n                            var idx = (sblock != 2) ? sblock + 1 : 0;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT2 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        }\n\n                        /* pulse like signal detection for fatboy.wav and so on */\n                        thmm *= sub_short_factor[chn][sblock];\n\n                        new_thmm[sblock] = thmm;\n                    }\n                    for (var sblock = 0; sblock < 3; sblock++) {\n                        gfc.thm[chn].s[sb][sblock] = new_thmm[sblock];\n                    }\n                }\n            }\n        }\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[chn][2];\n        }\n\n        /***************************************************************\n         * determine final block type\n         ***************************************************************/\n        vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d);\n\n        /*********************************************************************\n         * compute the value of PE to return ... no delay and advance\n         *********************************************************************/\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            var ppe;\n            var ppePos;\n            var type;\n            var mr;\n\n            if (chn > 1) {\n                ppe = percep_MS_entropy;\n                ppePos = -2;\n                type = Encoder.NORM_TYPE;\n                if (blocktype_d[0] == Encoder.SHORT_TYPE\n                    || blocktype_d[1] == Encoder.SHORT_TYPE)\n                    type = Encoder.SHORT_TYPE;\n                mr = masking_MS_ratio[gr_out][chn - 2];\n            } else {\n                ppe = percep_entropy;\n                ppePos = 0;\n                type = blocktype_d[chn];\n                mr = masking_ratio[gr_out][chn];\n            }\n\n            if (type == Encoder.SHORT_TYPE) {\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\n            } else {\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\n            }\n\n            if (gfp.analysis) {\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\n            }\n        }\n        return 0;\n    }\n\n    function s3_func_x(bark, hf_slope) {\n        var tempx = bark, tempy;\n\n        if (tempx >= 0) {\n            tempy = -tempx * 27;\n        } else {\n            tempy = tempx * hf_slope;\n        }\n        if (tempy <= -72.0) {\n            return 0;\n        }\n        return Math.exp(tempy * LN_TO_LOG10);\n    }\n\n    function norm_s3_func_x(hf_slope) {\n        var lim_a = 0, lim_b = 0;\n        {\n            var x = 0, l, h;\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x -= 1)\n                ;\n            l = x;\n            h = 0;\n            while (Math.abs(h - l) > 1e-12) {\n                x = (h + l) / 2;\n                if (s3_func_x(x, hf_slope) > 0) {\n                    h = x;\n                } else {\n                    l = x;\n                }\n            }\n            lim_a = l;\n        }\n        {\n            var x = 0, l, h;\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x += 1)\n                ;\n            l = 0;\n            h = x;\n            while (Math.abs(h - l) > 1e-12) {\n                x = (h + l) / 2;\n                if (s3_func_x(x, hf_slope) > 0) {\n                    l = x;\n                } else {\n                    h = x;\n                }\n            }\n            lim_b = h;\n        }\n        {\n            var sum = 0;\n            var m = 1000;\n            var i;\n            for (i = 0; i <= m; ++i) {\n                var x = lim_a + i * (lim_b - lim_a) / m;\n                var y = s3_func_x(x, hf_slope);\n                sum += y;\n            }\n            {\n                var norm = (m + 1) / (sum * (lim_b - lim_a));\n                /* printf( \"norm = %lf\\n\",norm); */\n                return norm;\n            }\n        }\n    }\n\n    /**\n     *   The spreading function.  Values returned in units of energy\n     */\n    function s3_func(bark) {\n        var tempx, x, tempy, temp;\n        tempx = bark;\n        if (tempx >= 0)\n            tempx *= 3;\n        else\n            tempx *= 1.5;\n\n        if (tempx >= 0.5 && tempx <= 2.5) {\n            temp = tempx - 0.5;\n            x = 8.0 * (temp * temp - 2.0 * temp);\n        } else\n            x = 0.0;\n        tempx += 0.474;\n        tempy = 15.811389 + 7.5 * tempx - 17.5\n            * Math.sqrt(1.0 + tempx * tempx);\n\n        if (tempy <= -60.0)\n            return 0.0;\n\n        tempx = Math.exp((x + tempy) * LN_TO_LOG10);\n\n        /**\n         * <PRE>\n         * Normalization.  The spreading function should be normalized so that:\n         * +inf\n         * /\n         * |  s3 [ bark ]  d(bark)   =  1\n         * /\n         * -inf\n         * </PRE>\n         */\n        tempx /= .6609193;\n        return tempx;\n    }\n\n    /**\n     * see for example \"Zwicker: Psychoakustik, 1982; ISBN 3-540-11401-7\n     */\n    function freq2bark(freq) {\n        /* input: freq in hz output: barks */\n        if (freq < 0)\n            freq = 0;\n        freq = freq * 0.001;\n        return 13.0 * Math.atan(.76 * freq) + 3.5\n            * Math.atan(freq * freq / (7.5 * 7.5));\n    }\n\n    function init_numline(numlines, bo, bm, bval, bval_width, mld, bo_w, sfreq, blksize, scalepos, deltafreq, sbmax) {\n        var b_frq = new_float(Encoder.CBANDS + 1);\n        var sample_freq_frac = sfreq / (sbmax > 15 ? 2 * 576 : 2 * 192);\n        var partition = new_int(Encoder.HBLKSIZE);\n        var i;\n        sfreq /= blksize;\n        var j = 0;\n        var ni = 0;\n        /* compute numlines, the number of spectral lines in each partition band */\n        /* each partition band should be about DELBARK wide. */\n        for (i = 0; i < Encoder.CBANDS; i++) {\n            var bark1;\n            var j2;\n            bark1 = freq2bark(sfreq * j);\n\n            b_frq[i] = sfreq * j;\n\n            for (j2 = j; freq2bark(sfreq * j2) - bark1 < DELBARK\n            && j2 <= blksize / 2; j2++)\n                ;\n\n            numlines[i] = j2 - j;\n            ni = i + 1;\n\n            while (j < j2) {\n                assert(j < Encoder.HBLKSIZE);\n                partition[j++] = i;\n            }\n            if (j > blksize / 2) {\n                j = blksize / 2;\n                ++i;\n                break;\n            }\n        }\n        assert(i < Encoder.CBANDS);\n        b_frq[i] = sfreq * j;\n\n        for (var sfb = 0; sfb < sbmax; sfb++) {\n            var i1, i2, start, end;\n            var arg;\n            start = scalepos[sfb];\n            end = scalepos[sfb + 1];\n\n            i1 = 0 | Math.floor(.5 + deltafreq * (start - .5));\n            if (i1 < 0)\n                i1 = 0;\n            i2 = 0 | Math.floor(.5 + deltafreq * (end - .5));\n\n            if (i2 > blksize / 2)\n                i2 = blksize / 2;\n\n            bm[sfb] = (partition[i1] + partition[i2]) / 2;\n            bo[sfb] = partition[i2];\n            var f_tmp = sample_freq_frac * end;\n            /*\n             * calculate how much of this band belongs to current scalefactor\n             * band\n             */\n            bo_w[sfb] = (f_tmp - b_frq[bo[sfb]])\n                / (b_frq[bo[sfb] + 1] - b_frq[bo[sfb]]);\n            if (bo_w[sfb] < 0) {\n                bo_w[sfb] = 0;\n            } else {\n                if (bo_w[sfb] > 1) {\n                    bo_w[sfb] = 1;\n                }\n            }\n            /* setup stereo demasking thresholds */\n            /* formula reverse enginerred from plot in paper */\n            arg = freq2bark(sfreq * scalepos[sfb] * deltafreq);\n            arg = ( Math.min(arg, 15.5) / 15.5);\n\n            mld[sfb] = Math.pow(10.0,\n                1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\n        }\n\n        /* compute bark values of each critical band */\n        j = 0;\n        for (var k = 0; k < ni; k++) {\n            var w = numlines[k];\n            var bark1, bark2;\n\n            bark1 = freq2bark(sfreq * (j));\n            bark2 = freq2bark(sfreq * (j + w - 1));\n            bval[k] = .5 * (bark1 + bark2);\n\n            bark1 = freq2bark(sfreq * (j - .5));\n            bark2 = freq2bark(sfreq * (j + w - .5));\n            bval_width[k] = bark2 - bark1;\n            j += w;\n        }\n\n        return ni;\n    }\n\n    function init_s3_values(s3ind, npart, bval, bval_width, norm, use_old_s3) {\n        var s3 = new_float_n([Encoder.CBANDS, Encoder.CBANDS]);\n        /*\n         * The s3 array is not linear in the bark scale.\n         *\n         * bval[x] should be used to get the bark value.\n         */\n        var j;\n        var numberOfNoneZero = 0;\n\n        /**\n         * <PRE>\n         * s[i][j], the value of the spreading function,\n         * centered at band j (masker), for band i (maskee)\n         *\n         * i.e.: sum over j to spread into signal barkval=i\n         * NOTE: i and j are used opposite as in the ISO docs\n         * </PRE>\n         */\n        if (use_old_s3) {\n            for (var i = 0; i < npart; i++) {\n                for (j = 0; j < npart; j++) {\n                    var v = s3_func(bval[i] - bval[j]) * bval_width[j];\n                    s3[i][j] = v * norm[i];\n                }\n            }\n        } else {\n            for (j = 0; j < npart; j++) {\n                var hf_slope = 15 + Math.min(21 / bval[j], 12);\n                var s3_x_norm = norm_s3_func_x(hf_slope);\n                for (var i = 0; i < npart; i++) {\n                    var v = s3_x_norm\n                        * s3_func_x(bval[i] - bval[j], hf_slope)\n                        * bval_width[j];\n                    s3[i][j] = v * norm[i];\n                }\n            }\n        }\n        for (var i = 0; i < npart; i++) {\n            for (j = 0; j < npart; j++) {\n                if (s3[i][j] > 0.0)\n                    break;\n            }\n            s3ind[i][0] = j;\n\n            for (j = npart - 1; j > 0; j--) {\n                if (s3[i][j] > 0.0)\n                    break;\n            }\n            s3ind[i][1] = j;\n            numberOfNoneZero += (s3ind[i][1] - s3ind[i][0] + 1);\n        }\n\n        var p = new_float(numberOfNoneZero);\n        var k = 0;\n        for (var i = 0; i < npart; i++)\n            for (j = s3ind[i][0]; j <= s3ind[i][1]; j++)\n                p[k++] = s3[i][j];\n\n        return p;\n    }\n\n    function stereo_demask(f) {\n        /* setup stereo demasking thresholds */\n        /* formula reverse enginerred from plot in paper */\n        var arg = freq2bark(f);\n        arg = (Math.min(arg, 15.5) / 15.5);\n\n        return Math.pow(10.0,\n            1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\n    }\n\n    /**\n     * NOTE: the bitrate reduction from the inter-channel masking effect is low\n     * compared to the chance of getting annyoing artefacts. L3psycho_anal_vbr\n     * does not use this feature. (Robert 071216)\n     */\n    this.psymodel_init = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var i;\n        var useOldS3 = true;\n        var bvl_a = 13, bvl_b = 24;\n        var snr_l_a = 0, snr_l_b = 0;\n        var snr_s_a = -8.25, snr_s_b = -4.5;\n        var bval = new_float(Encoder.CBANDS);\n        var bval_width = new_float(Encoder.CBANDS);\n        var norm = new_float(Encoder.CBANDS);\n        var sfreq = gfp.out_samplerate;\n\n        switch (gfp.experimentalZ) {\n            default:\n            case 0:\n                useOldS3 = true;\n                break;\n            case 1:\n                useOldS3 = (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) ? false\n                    : true;\n                break;\n            case 2:\n                useOldS3 = false;\n                break;\n            case 3:\n                bvl_a = 8;\n                snr_l_a = -1.75;\n                snr_l_b = -0.0125;\n                snr_s_a = -8.25;\n                snr_s_b = -2.25;\n                break;\n        }\n        gfc.ms_ener_ratio_old = .25;\n        gfc.blocktype_old[0] = gfc.blocktype_old[1] = Encoder.NORM_TYPE;\n        // the vbr header is long blocks\n\n        for (i = 0; i < 4; ++i) {\n            for (var j = 0; j < Encoder.CBANDS; ++j) {\n                gfc.nb_1[i][j] = 1e20;\n                gfc.nb_2[i][j] = 1e20;\n                gfc.nb_s1[i][j] = gfc.nb_s2[i][j] = 1.0;\n            }\n            for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\n                gfc.en[i].l[sb] = 1e20;\n                gfc.thm[i].l[sb] = 1e20;\n            }\n            for (var j = 0; j < 3; ++j) {\n                for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n                    gfc.en[i].s[sb][j] = 1e20;\n                    gfc.thm[i].s[sb][j] = 1e20;\n                }\n                gfc.nsPsy.lastAttacks[i] = 0;\n            }\n            for (var j = 0; j < 9; j++)\n                gfc.nsPsy.last_en_subshort[i][j] = 10.;\n        }\n\n        /* init. for loudness approx. -jd 2001 mar 27 */\n        gfc.loudness_sq_save[0] = gfc.loudness_sq_save[1] = 0.0;\n\n        /*************************************************************************\n         * now compute the psychoacoustic model specific constants\n         ************************************************************************/\n        /* compute numlines, bo, bm, bval, bval_width, mld */\n\n        gfc.npart_l = init_numline(gfc.numlines_l, gfc.bo_l, gfc.bm_l, bval,\n            bval_width, gfc.mld_l, gfc.PSY.bo_l_weight, sfreq,\n            Encoder.BLKSIZE, gfc.scalefac_band.l, Encoder.BLKSIZE\n            / (2.0 * 576), Encoder.SBMAX_l);\n        assert(gfc.npart_l < Encoder.CBANDS);\n        /* compute the spreading function */\n        for (i = 0; i < gfc.npart_l; i++) {\n            var snr = snr_l_a;\n            if (bval[i] >= bvl_a) {\n                snr = snr_l_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_l_a\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\n            }\n            norm[i] = Math.pow(10.0, snr / 10.0);\n            if (gfc.numlines_l[i] > 0) {\n                gfc.rnumlines_l[i] = 1.0 / gfc.numlines_l[i];\n            } else {\n                gfc.rnumlines_l[i] = 0;\n            }\n        }\n        gfc.s3_ll = init_s3_values(gfc.s3ind, gfc.npart_l, bval, bval_width,\n            norm, useOldS3);\n\n        /* compute long block specific values, ATH and MINVAL */\n        var j = 0;\n        for (i = 0; i < gfc.npart_l; i++) {\n            var x;\n\n            /* ATH */\n            x = Float.MAX_VALUE;\n            for (var k = 0; k < gfc.numlines_l[i]; k++, j++) {\n                var freq = sfreq * j / (1000.0 * Encoder.BLKSIZE);\n                var level;\n                /*\n                 * ATH below 100 Hz constant, not further climbing\n                 */\n                level = this.ATHformula(freq * 1000, gfp) - 20;\n                // scale to FFT units; returned value is in dB\n                level = Math.pow(10., 0.1 * level);\n                // convert from dB . energy\n                level *= gfc.numlines_l[i];\n                if (x > level)\n                    x = level;\n            }\n            gfc.ATH.cb_l[i] = x;\n\n            /*\n             * MINVAL. For low freq, the strength of the masking is limited by\n             * minval this is an ISO MPEG1 thing, dont know if it is really\n             * needed\n             */\n            /*\n             * FIXME: it does work to reduce low-freq problems in S53-Wind-Sax\n             * and lead-voice samples, but introduces some 3 kbps bit bloat too.\n             * TODO: Further refinement of the shape of this hack.\n             */\n            x = -20 + bval[i] * 20 / 10;\n            if (x > 6) {\n                x = 100;\n            }\n            if (x < -15) {\n                x = -15;\n            }\n            x -= 8.;\n            gfc.minval_l[i] = (Math.pow(10.0, x / 10.) * gfc.numlines_l[i]);\n        }\n\n        /************************************************************************\n         * do the same things for short blocks\n         ************************************************************************/\n        gfc.npart_s = init_numline(gfc.numlines_s, gfc.bo_s, gfc.bm_s, bval,\n            bval_width, gfc.mld_s, gfc.PSY.bo_s_weight, sfreq,\n            Encoder.BLKSIZE_s, gfc.scalefac_band.s, Encoder.BLKSIZE_s\n            / (2.0 * 192), Encoder.SBMAX_s);\n        assert(gfc.npart_s < Encoder.CBANDS);\n\n        /* SNR formula. short block is normalized by SNR. is it still right ? */\n        j = 0;\n        for (i = 0; i < gfc.npart_s; i++) {\n            var x;\n            var snr = snr_s_a;\n            if (bval[i] >= bvl_a) {\n                snr = snr_s_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_s_a\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\n            }\n            norm[i] = Math.pow(10.0, snr / 10.0);\n\n            /* ATH */\n            x = Float.MAX_VALUE;\n            for (var k = 0; k < gfc.numlines_s[i]; k++, j++) {\n                var freq = sfreq * j / (1000.0 * Encoder.BLKSIZE_s);\n                var level;\n                /* freq = Min(.1,freq); */\n                /*\n                 * ATH below 100 Hz constant, not\n                 * further climbing\n                 */\n                level = this.ATHformula(freq * 1000, gfp) - 20;\n                // scale to FFT units; returned value is in dB\n                level = Math.pow(10., 0.1 * level);\n                // convert from dB . energy\n                level *= gfc.numlines_s[i];\n                if (x > level)\n                    x = level;\n            }\n            gfc.ATH.cb_s[i] = x;\n\n            /*\n             * MINVAL. For low freq, the strength of the masking is limited by\n             * minval this is an ISO MPEG1 thing, dont know if it is really\n             * needed\n             */\n            x = (-7.0 + bval[i] * 7.0 / 12.0);\n            if (bval[i] > 12) {\n                x *= 1 + Math.log(1 + x) * 3.1;\n            }\n            if (bval[i] < 12) {\n                x *= 1 + Math.log(1 - x) * 2.3;\n            }\n            if (x < -15) {\n                x = -15;\n            }\n            x -= 8;\n            gfc.minval_s[i] = Math.pow(10.0, x / 10)\n                * gfc.numlines_s[i];\n        }\n\n        gfc.s3_ss = init_s3_values(gfc.s3ind_s, gfc.npart_s, bval, bval_width,\n            norm, useOldS3);\n\n        init_mask_add_max_values();\n        fft.init_fft(gfc);\n\n        /* setup temporal masking */\n        gfc.decay = Math.exp(-1.0 * LOG10\n            / (temporalmask_sustain_sec * sfreq / 192.0));\n\n        {\n            var msfix;\n            msfix = NS_MSFIX;\n            if ((gfp.exp_nspsytune & 2) != 0)\n                msfix = 1.0;\n            if (Math.abs(gfp.msfix) > 0.0)\n                msfix = gfp.msfix;\n            gfp.msfix = msfix;\n\n            /*\n             * spread only from npart_l bands. Normally, we use the spreading\n             * function to convolve from npart_l down to npart_l bands\n             */\n            for (var b = 0; b < gfc.npart_l; b++)\n                if (gfc.s3ind[b][1] > gfc.npart_l - 1)\n                    gfc.s3ind[b][1] = gfc.npart_l - 1;\n        }\n\n        /*\n         * prepare for ATH auto adjustment: we want to decrease the ATH by 12 dB\n         * per second\n         */\n        var frame_duration = (576. * gfc.mode_gr / sfreq);\n        gfc.ATH.decay = Math.pow(10., -12. / 10. * frame_duration);\n        gfc.ATH.adjust = 0.01;\n        /* minimum, for leading low loudness */\n        gfc.ATH.adjustLimit = 1.0;\n        /* on lead, allow adjust up to maximum */\n\n        assert(gfc.bo_l[Encoder.SBMAX_l - 1] <= gfc.npart_l);\n        assert(gfc.bo_s[Encoder.SBMAX_s - 1] <= gfc.npart_s);\n\n        if (gfp.ATHtype != -1) {\n            /* compute equal loudness weights (eql_w) */\n            var freq;\n            var freq_inc = gfp.out_samplerate\n                / (Encoder.BLKSIZE);\n            var eql_balance = 0.0;\n            freq = 0.0;\n            for (i = 0; i < Encoder.BLKSIZE / 2; ++i) {\n                /* convert ATH dB to relative power (not dB) */\n                /* to determine eql_w */\n                freq += freq_inc;\n                gfc.ATH.eql_w[i] = 1. / Math.pow(10, this.ATHformula(freq, gfp) / 10);\n                eql_balance += gfc.ATH.eql_w[i];\n            }\n            eql_balance = 1.0 / eql_balance;\n            for (i = Encoder.BLKSIZE / 2; --i >= 0;) { /* scale weights */\n                gfc.ATH.eql_w[i] *= eql_balance;\n            }\n        }\n        {\n            for (var b = j = 0; b < gfc.npart_s; ++b) {\n                for (i = 0; i < gfc.numlines_s[b]; ++i) {\n                    ++j;\n                }\n            }\n            assert(j == 129);\n            for (var b = j = 0; b < gfc.npart_l; ++b) {\n                for (i = 0; i < gfc.numlines_l[b]; ++i) {\n                    ++j;\n                }\n            }\n            assert(j == 513);\n        }\n        j = 0;\n        for (i = 0; i < gfc.npart_l; i++) {\n            var freq = sfreq * (j + gfc.numlines_l[i] / 2) / (1.0 * Encoder.BLKSIZE);\n            gfc.mld_cb_l[i] = stereo_demask(freq);\n            j += gfc.numlines_l[i];\n        }\n        for (; i < Encoder.CBANDS; ++i) {\n            gfc.mld_cb_l[i] = 1;\n        }\n        j = 0;\n        for (i = 0; i < gfc.npart_s; i++) {\n            var freq = sfreq * (j + gfc.numlines_s[i] / 2) / (1.0 * Encoder.BLKSIZE_s);\n            gfc.mld_cb_s[i] = stereo_demask(freq);\n            j += gfc.numlines_s[i];\n        }\n        for (; i < Encoder.CBANDS; ++i) {\n            gfc.mld_cb_s[i] = 1;\n        }\n        return 0;\n    }\n\n    /**\n     * Those ATH formulas are returning their minimum value for input = -1\n     */\n    function ATHformula_GB(f, value) {\n        /**\n         * <PRE>\n         *  from Painter & Spanias\n         *           modified by Gabriel Bouvigne to better fit the reality\n         *           ath =    3.640 * pow(f,-0.8)\n         *           - 6.800 * exp(-0.6*pow(f-3.4,2.0))\n         *           + 6.000 * exp(-0.15*pow(f-8.7,2.0))\n         *           + 0.6* 0.001 * pow(f,4.0);\n         *\n         *\n         *           In the past LAME was using the Painter &Spanias formula.\n         *           But we had some recurrent problems with HF content.\n         *           We measured real ATH values, and found the older formula\n         *           to be inaccurate in the higher part. So we made this new\n         *           formula and this solved most of HF problematic test cases.\n         *           The tradeoff is that in VBR mode it increases a lot the\n         *           bitrate.\n         * </PRE>\n         */\n\n        /*\n         * This curve can be adjusted according to the VBR scale: it adjusts\n         * from something close to Painter & Spanias on V9 up to Bouvigne's\n         * formula for V0. This way the VBR bitrate is more balanced according\n         * to the -V value.\n         */\n\n        // the following Hack allows to ask for the lowest value\n        if (f < -.3)\n            f = 3410;\n\n        // convert to khz\n        f /= 1000;\n        f = Math.max(0.1, f);\n        var ath = 3.640 * Math.pow(f, -0.8) - 6.800\n            * Math.exp(-0.6 * Math.pow(f - 3.4, 2.0)) + 6.000\n            * Math.exp(-0.15 * Math.pow(f - 8.7, 2.0))\n            + (0.6 + 0.04 * value) * 0.001 * Math.pow(f, 4.0);\n        return ath;\n    }\n\n    this.ATHformula = function (f, gfp) {\n        var ath;\n        switch (gfp.ATHtype) {\n            case 0:\n                ath = ATHformula_GB(f, 9);\n                break;\n            case 1:\n                // over sensitive, should probably be removed\n                ath = ATHformula_GB(f, -1);\n                break;\n            case 2:\n                ath = ATHformula_GB(f, 0);\n                break;\n            case 3:\n                // modification of GB formula by Roel\n                ath = ATHformula_GB(f, 1) + 6;\n                break;\n            case 4:\n                ath = ATHformula_GB(f, gfp.ATHcurve);\n                break;\n            default:\n                ath = ATHformula_GB(f, 0);\n                break;\n        }\n        return ath;\n    }\n\n}\n\nmodule.exports = PsyModel;\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar GrInfo = require('./GrInfo.js');\n\nfunction IIISideInfo() {\n    this.tt = [[null, null], [null, null]];\n    this.main_data_begin = 0;\n    this.private_bits = 0;\n    this.resvDrain_pre = 0;\n    this.resvDrain_post = 0;\n    this.scfsi = [new_int(4), new_int(4)];\n\n    for (var gr = 0; gr < 2; gr++) {\n        for (var ch = 0; ch < 2; ch++) {\n            this.tt[gr][ch] = new GrInfo();\n        }\n    }\n}\n\nmodule.exports = IIISideInfo;\n","'use strict';\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.string.iterator');\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar global = require('../internals/global');\nvar defineProperties = require('../internals/object-define-properties');\nvar redefine = require('../internals/redefine');\nvar anInstance = require('../internals/an-instance');\nvar has = require('../internals/has');\nvar assign = require('../internals/object-assign');\nvar arrayFrom = require('../internals/array-from');\nvar codeAt = require('../internals/string-multibyte').codeAt;\nvar toASCII = require('../internals/string-punycode-to-ascii');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar URLSearchParamsModule = require('../modules/web.url-search-params');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar NativeURL = global.URL;\nvar URLSearchParams = URLSearchParamsModule.URLSearchParams;\nvar getInternalSearchParamsState = URLSearchParamsModule.getState;\nvar setInternalState = InternalStateModule.set;\nvar getInternalURLState = InternalStateModule.getterFor('URL');\nvar floor = Math.floor;\nvar pow = Math.pow;\n\nvar INVALID_AUTHORITY = 'Invalid authority';\nvar INVALID_SCHEME = 'Invalid scheme';\nvar INVALID_HOST = 'Invalid host';\nvar INVALID_PORT = 'Invalid port';\n\nvar ALPHA = /[A-Za-z]/;\nvar ALPHANUMERIC = /[\\d+-.A-Za-z]/;\nvar DIGIT = /\\d/;\nvar HEX_START = /^(0x|0X)/;\nvar OCT = /^[0-7]+$/;\nvar DEC = /^\\d+$/;\nvar HEX = /^[\\dA-Fa-f]+$/;\n// eslint-disable-next-line no-control-regex\nvar FORBIDDEN_HOST_CODE_POINT = /[\\u0000\\u0009\\u000A\\u000D #%/:?@[\\\\]]/;\n// eslint-disable-next-line no-control-regex\nvar FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\\u0000\\u0009\\u000A\\u000D #/:?@[\\\\]]/;\n// eslint-disable-next-line no-control-regex\nvar LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\\u0000-\\u001F ]+|[\\u0000-\\u001F ]+$/g;\n// eslint-disable-next-line no-control-regex\nvar TAB_AND_NEW_LINE = /[\\u0009\\u000A\\u000D]/g;\nvar EOF;\n\nvar parseHost = function (url, input) {\n  var result, codePoints, index;\n  if (input.charAt(0) == '[') {\n    if (input.charAt(input.length - 1) != ']') return INVALID_HOST;\n    result = parseIPv6(input.slice(1, -1));\n    if (!result) return INVALID_HOST;\n    url.host = result;\n  // opaque host\n  } else if (!isSpecial(url)) {\n    if (FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT.test(input)) return INVALID_HOST;\n    result = '';\n    codePoints = arrayFrom(input);\n    for (index = 0; index < codePoints.length; index++) {\n      result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);\n    }\n    url.host = result;\n  } else {\n    input = toASCII(input);\n    if (FORBIDDEN_HOST_CODE_POINT.test(input)) return INVALID_HOST;\n    result = parseIPv4(input);\n    if (result === null) return INVALID_HOST;\n    url.host = result;\n  }\n};\n\nvar parseIPv4 = function (input) {\n  var parts = input.split('.');\n  var partsLength, numbers, index, part, radix, number, ipv4;\n  if (parts.length && parts[parts.length - 1] == '') {\n    parts.pop();\n  }\n  partsLength = parts.length;\n  if (partsLength > 4) return input;\n  numbers = [];\n  for (index = 0; index < partsLength; index++) {\n    part = parts[index];\n    if (part == '') return input;\n    radix = 10;\n    if (part.length > 1 && part.charAt(0) == '0') {\n      radix = HEX_START.test(part) ? 16 : 8;\n      part = part.slice(radix == 8 ? 1 : 2);\n    }\n    if (part === '') {\n      number = 0;\n    } else {\n      if (!(radix == 10 ? DEC : radix == 8 ? OCT : HEX).test(part)) return input;\n      number = parseInt(part, radix);\n    }\n    numbers.push(number);\n  }\n  for (index = 0; index < partsLength; index++) {\n    number = numbers[index];\n    if (index == partsLength - 1) {\n      if (number >= pow(256, 5 - partsLength)) return null;\n    } else if (number > 255) return null;\n  }\n  ipv4 = numbers.pop();\n  for (index = 0; index < numbers.length; index++) {\n    ipv4 += numbers[index] * pow(256, 3 - index);\n  }\n  return ipv4;\n};\n\n// eslint-disable-next-line max-statements\nvar parseIPv6 = function (input) {\n  var address = [0, 0, 0, 0, 0, 0, 0, 0];\n  var pieceIndex = 0;\n  var compress = null;\n  var pointer = 0;\n  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;\n\n  var char = function () {\n    return input.charAt(pointer);\n  };\n\n  if (char() == ':') {\n    if (input.charAt(1) != ':') return;\n    pointer += 2;\n    pieceIndex++;\n    compress = pieceIndex;\n  }\n  while (char()) {\n    if (pieceIndex == 8) return;\n    if (char() == ':') {\n      if (compress !== null) return;\n      pointer++;\n      pieceIndex++;\n      compress = pieceIndex;\n      continue;\n    }\n    value = length = 0;\n    while (length < 4 && HEX.test(char())) {\n      value = value * 16 + parseInt(char(), 16);\n      pointer++;\n      length++;\n    }\n    if (char() == '.') {\n      if (length == 0) return;\n      pointer -= length;\n      if (pieceIndex > 6) return;\n      numbersSeen = 0;\n      while (char()) {\n        ipv4Piece = null;\n        if (numbersSeen > 0) {\n          if (char() == '.' && numbersSeen < 4) pointer++;\n          else return;\n        }\n        if (!DIGIT.test(char())) return;\n        while (DIGIT.test(char())) {\n          number = parseInt(char(), 10);\n          if (ipv4Piece === null) ipv4Piece = number;\n          else if (ipv4Piece == 0) return;\n          else ipv4Piece = ipv4Piece * 10 + number;\n          if (ipv4Piece > 255) return;\n          pointer++;\n        }\n        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\n        numbersSeen++;\n        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;\n      }\n      if (numbersSeen != 4) return;\n      break;\n    } else if (char() == ':') {\n      pointer++;\n      if (!char()) return;\n    } else if (char()) return;\n    address[pieceIndex++] = value;\n  }\n  if (compress !== null) {\n    swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex != 0 && swaps > 0) {\n      swap = address[pieceIndex];\n      address[pieceIndex--] = address[compress + swaps - 1];\n      address[compress + --swaps] = swap;\n    }\n  } else if (pieceIndex != 8) return;\n  return address;\n};\n\nvar findLongestZeroSequence = function (ipv6) {\n  var maxIndex = null;\n  var maxLength = 1;\n  var currStart = null;\n  var currLength = 0;\n  var index = 0;\n  for (; index < 8; index++) {\n    if (ipv6[index] !== 0) {\n      if (currLength > maxLength) {\n        maxIndex = currStart;\n        maxLength = currLength;\n      }\n      currStart = null;\n      currLength = 0;\n    } else {\n      if (currStart === null) currStart = index;\n      ++currLength;\n    }\n  }\n  if (currLength > maxLength) {\n    maxIndex = currStart;\n    maxLength = currLength;\n  }\n  return maxIndex;\n};\n\nvar serializeHost = function (host) {\n  var result, index, compress, ignore0;\n  // ipv4\n  if (typeof host == 'number') {\n    result = [];\n    for (index = 0; index < 4; index++) {\n      result.unshift(host % 256);\n      host = floor(host / 256);\n    } return result.join('.');\n  // ipv6\n  } else if (typeof host == 'object') {\n    result = '';\n    compress = findLongestZeroSequence(host);\n    for (index = 0; index < 8; index++) {\n      if (ignore0 && host[index] === 0) continue;\n      if (ignore0) ignore0 = false;\n      if (compress === index) {\n        result += index ? ':' : '::';\n        ignore0 = true;\n      } else {\n        result += host[index].toString(16);\n        if (index < 7) result += ':';\n      }\n    }\n    return '[' + result + ']';\n  } return host;\n};\n\nvar C0ControlPercentEncodeSet = {};\nvar fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {\n  ' ': 1, '\"': 1, '<': 1, '>': 1, '`': 1\n});\nvar pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {\n  '#': 1, '?': 1, '{': 1, '}': 1\n});\nvar userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {\n  '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\\\': 1, ']': 1, '^': 1, '|': 1\n});\n\nvar percentEncode = function (char, set) {\n  var code = codeAt(char, 0);\n  return code > 0x20 && code < 0x7F && !has(set, char) ? char : encodeURIComponent(char);\n};\n\nvar specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nvar isSpecial = function (url) {\n  return has(specialSchemes, url.scheme);\n};\n\nvar includesCredentials = function (url) {\n  return url.username != '' || url.password != '';\n};\n\nvar cannotHaveUsernamePasswordPort = function (url) {\n  return !url.host || url.cannotBeABaseURL || url.scheme == 'file';\n};\n\nvar isWindowsDriveLetter = function (string, normalized) {\n  var second;\n  return string.length == 2 && ALPHA.test(string.charAt(0))\n    && ((second = string.charAt(1)) == ':' || (!normalized && second == '|'));\n};\n\nvar startsWithWindowsDriveLetter = function (string) {\n  var third;\n  return string.length > 1 && isWindowsDriveLetter(string.slice(0, 2)) && (\n    string.length == 2 ||\n    ((third = string.charAt(2)) === '/' || third === '\\\\' || third === '?' || third === '#')\n  );\n};\n\nvar shortenURLsPath = function (url) {\n  var path = url.path;\n  var pathSize = path.length;\n  if (pathSize && (url.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {\n    path.pop();\n  }\n};\n\nvar isSingleDot = function (segment) {\n  return segment === '.' || segment.toLowerCase() === '%2e';\n};\n\nvar isDoubleDot = function (segment) {\n  segment = segment.toLowerCase();\n  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';\n};\n\n// States:\nvar SCHEME_START = {};\nvar SCHEME = {};\nvar NO_SCHEME = {};\nvar SPECIAL_RELATIVE_OR_AUTHORITY = {};\nvar PATH_OR_AUTHORITY = {};\nvar RELATIVE = {};\nvar RELATIVE_SLASH = {};\nvar SPECIAL_AUTHORITY_SLASHES = {};\nvar SPECIAL_AUTHORITY_IGNORE_SLASHES = {};\nvar AUTHORITY = {};\nvar HOST = {};\nvar HOSTNAME = {};\nvar PORT = {};\nvar FILE = {};\nvar FILE_SLASH = {};\nvar FILE_HOST = {};\nvar PATH_START = {};\nvar PATH = {};\nvar CANNOT_BE_A_BASE_URL_PATH = {};\nvar QUERY = {};\nvar FRAGMENT = {};\n\n// eslint-disable-next-line max-statements\nvar parseURL = function (url, input, stateOverride, base) {\n  var state = stateOverride || SCHEME_START;\n  var pointer = 0;\n  var buffer = '';\n  var seenAt = false;\n  var seenBracket = false;\n  var seenPasswordToken = false;\n  var codePoints, char, bufferCodePoints, failure;\n\n  if (!stateOverride) {\n    url.scheme = '';\n    url.username = '';\n    url.password = '';\n    url.host = null;\n    url.port = null;\n    url.path = [];\n    url.query = null;\n    url.fragment = null;\n    url.cannotBeABaseURL = false;\n    input = input.replace(LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');\n  }\n\n  input = input.replace(TAB_AND_NEW_LINE, '');\n\n  codePoints = arrayFrom(input);\n\n  while (pointer <= codePoints.length) {\n    char = codePoints[pointer];\n    switch (state) {\n      case SCHEME_START:\n        if (char && ALPHA.test(char)) {\n          buffer += char.toLowerCase();\n          state = SCHEME;\n        } else if (!stateOverride) {\n          state = NO_SCHEME;\n          continue;\n        } else return INVALID_SCHEME;\n        break;\n\n      case SCHEME:\n        if (char && (ALPHANUMERIC.test(char) || char == '+' || char == '-' || char == '.')) {\n          buffer += char.toLowerCase();\n        } else if (char == ':') {\n          if (stateOverride && (\n            (isSpecial(url) != has(specialSchemes, buffer)) ||\n            (buffer == 'file' && (includesCredentials(url) || url.port !== null)) ||\n            (url.scheme == 'file' && !url.host)\n          )) return;\n          url.scheme = buffer;\n          if (stateOverride) {\n            if (isSpecial(url) && specialSchemes[url.scheme] == url.port) url.port = null;\n            return;\n          }\n          buffer = '';\n          if (url.scheme == 'file') {\n            state = FILE;\n          } else if (isSpecial(url) && base && base.scheme == url.scheme) {\n            state = SPECIAL_RELATIVE_OR_AUTHORITY;\n          } else if (isSpecial(url)) {\n            state = SPECIAL_AUTHORITY_SLASHES;\n          } else if (codePoints[pointer + 1] == '/') {\n            state = PATH_OR_AUTHORITY;\n            pointer++;\n          } else {\n            url.cannotBeABaseURL = true;\n            url.path.push('');\n            state = CANNOT_BE_A_BASE_URL_PATH;\n          }\n        } else if (!stateOverride) {\n          buffer = '';\n          state = NO_SCHEME;\n          pointer = 0;\n          continue;\n        } else return INVALID_SCHEME;\n        break;\n\n      case NO_SCHEME:\n        if (!base || (base.cannotBeABaseURL && char != '#')) return INVALID_SCHEME;\n        if (base.cannotBeABaseURL && char == '#') {\n          url.scheme = base.scheme;\n          url.path = base.path.slice();\n          url.query = base.query;\n          url.fragment = '';\n          url.cannotBeABaseURL = true;\n          state = FRAGMENT;\n          break;\n        }\n        state = base.scheme == 'file' ? FILE : RELATIVE;\n        continue;\n\n      case SPECIAL_RELATIVE_OR_AUTHORITY:\n        if (char == '/' && codePoints[pointer + 1] == '/') {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n          pointer++;\n        } else {\n          state = RELATIVE;\n          continue;\n        } break;\n\n      case PATH_OR_AUTHORITY:\n        if (char == '/') {\n          state = AUTHORITY;\n          break;\n        } else {\n          state = PATH;\n          continue;\n        }\n\n      case RELATIVE:\n        url.scheme = base.scheme;\n        if (char == EOF) {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = base.query;\n        } else if (char == '/' || (char == '\\\\' && isSpecial(url))) {\n          state = RELATIVE_SLASH;\n        } else if (char == '?') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = '';\n          state = QUERY;\n        } else if (char == '#') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = base.query;\n          url.fragment = '';\n          state = FRAGMENT;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.path.pop();\n          state = PATH;\n          continue;\n        } break;\n\n      case RELATIVE_SLASH:\n        if (isSpecial(url) && (char == '/' || char == '\\\\')) {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        } else if (char == '/') {\n          state = AUTHORITY;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          state = PATH;\n          continue;\n        } break;\n\n      case SPECIAL_AUTHORITY_SLASHES:\n        state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        if (char != '/' || buffer.charAt(pointer + 1) != '/') continue;\n        pointer++;\n        break;\n\n      case SPECIAL_AUTHORITY_IGNORE_SLASHES:\n        if (char != '/' && char != '\\\\') {\n          state = AUTHORITY;\n          continue;\n        } break;\n\n      case AUTHORITY:\n        if (char == '@') {\n          if (seenAt) buffer = '%40' + buffer;\n          seenAt = true;\n          bufferCodePoints = arrayFrom(buffer);\n          for (var i = 0; i < bufferCodePoints.length; i++) {\n            var codePoint = bufferCodePoints[i];\n            if (codePoint == ':' && !seenPasswordToken) {\n              seenPasswordToken = true;\n              continue;\n            }\n            var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);\n            if (seenPasswordToken) url.password += encodedCodePoints;\n            else url.username += encodedCodePoints;\n          }\n          buffer = '';\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url))\n        ) {\n          if (seenAt && buffer == '') return INVALID_AUTHORITY;\n          pointer -= arrayFrom(buffer).length + 1;\n          buffer = '';\n          state = HOST;\n        } else buffer += char;\n        break;\n\n      case HOST:\n      case HOSTNAME:\n        if (stateOverride && url.scheme == 'file') {\n          state = FILE_HOST;\n          continue;\n        } else if (char == ':' && !seenBracket) {\n          if (buffer == '') return INVALID_HOST;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PORT;\n          if (stateOverride == HOSTNAME) return;\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url))\n        ) {\n          if (isSpecial(url) && buffer == '') return INVALID_HOST;\n          if (stateOverride && buffer == '' && (includesCredentials(url) || url.port !== null)) return;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PATH_START;\n          if (stateOverride) return;\n          continue;\n        } else {\n          if (char == '[') seenBracket = true;\n          else if (char == ']') seenBracket = false;\n          buffer += char;\n        } break;\n\n      case PORT:\n        if (DIGIT.test(char)) {\n          buffer += char;\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url)) ||\n          stateOverride\n        ) {\n          if (buffer != '') {\n            var port = parseInt(buffer, 10);\n            if (port > 0xFFFF) return INVALID_PORT;\n            url.port = (isSpecial(url) && port === specialSchemes[url.scheme]) ? null : port;\n            buffer = '';\n          }\n          if (stateOverride) return;\n          state = PATH_START;\n          continue;\n        } else return INVALID_PORT;\n        break;\n\n      case FILE:\n        url.scheme = 'file';\n        if (char == '/' || char == '\\\\') state = FILE_SLASH;\n        else if (base && base.scheme == 'file') {\n          if (char == EOF) {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = base.query;\n          } else if (char == '?') {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = '';\n            state = QUERY;\n          } else if (char == '#') {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = base.query;\n            url.fragment = '';\n            state = FRAGMENT;\n          } else {\n            if (!startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n              url.host = base.host;\n              url.path = base.path.slice();\n              shortenURLsPath(url);\n            }\n            state = PATH;\n            continue;\n          }\n        } else {\n          state = PATH;\n          continue;\n        } break;\n\n      case FILE_SLASH:\n        if (char == '/' || char == '\\\\') {\n          state = FILE_HOST;\n          break;\n        }\n        if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n          if (isWindowsDriveLetter(base.path[0], true)) url.path.push(base.path[0]);\n          else url.host = base.host;\n        }\n        state = PATH;\n        continue;\n\n      case FILE_HOST:\n        if (char == EOF || char == '/' || char == '\\\\' || char == '?' || char == '#') {\n          if (!stateOverride && isWindowsDriveLetter(buffer)) {\n            state = PATH;\n          } else if (buffer == '') {\n            url.host = '';\n            if (stateOverride) return;\n            state = PATH_START;\n          } else {\n            failure = parseHost(url, buffer);\n            if (failure) return failure;\n            if (url.host == 'localhost') url.host = '';\n            if (stateOverride) return;\n            buffer = '';\n            state = PATH_START;\n          } continue;\n        } else buffer += char;\n        break;\n\n      case PATH_START:\n        if (isSpecial(url)) {\n          state = PATH;\n          if (char != '/' && char != '\\\\') continue;\n        } else if (!stateOverride && char == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (!stateOverride && char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          state = PATH;\n          if (char != '/') continue;\n        } break;\n\n      case PATH:\n        if (\n          char == EOF || char == '/' ||\n          (char == '\\\\' && isSpecial(url)) ||\n          (!stateOverride && (char == '?' || char == '#'))\n        ) {\n          if (isDoubleDot(buffer)) {\n            shortenURLsPath(url);\n            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n              url.path.push('');\n            }\n          } else if (isSingleDot(buffer)) {\n            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n              url.path.push('');\n            }\n          } else {\n            if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {\n              if (url.host) url.host = '';\n              buffer = buffer.charAt(0) + ':'; // normalize windows drive letter\n            }\n            url.path.push(buffer);\n          }\n          buffer = '';\n          if (url.scheme == 'file' && (char == EOF || char == '?' || char == '#')) {\n            while (url.path.length > 1 && url.path[0] === '') {\n              url.path.shift();\n            }\n          }\n          if (char == '?') {\n            url.query = '';\n            state = QUERY;\n          } else if (char == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          }\n        } else {\n          buffer += percentEncode(char, pathPercentEncodeSet);\n        } break;\n\n      case CANNOT_BE_A_BASE_URL_PATH:\n        if (char == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          url.path[0] += percentEncode(char, C0ControlPercentEncodeSet);\n        } break;\n\n      case QUERY:\n        if (!stateOverride && char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          if (char == \"'\" && isSpecial(url)) url.query += '%27';\n          else if (char == '#') url.query += '%23';\n          else url.query += percentEncode(char, C0ControlPercentEncodeSet);\n        } break;\n\n      case FRAGMENT:\n        if (char != EOF) url.fragment += percentEncode(char, fragmentPercentEncodeSet);\n        break;\n    }\n\n    pointer++;\n  }\n};\n\n// `URL` constructor\n// https://url.spec.whatwg.org/#url-class\nvar URLConstructor = function URL(url /* , base */) {\n  var that = anInstance(this, URLConstructor, 'URL');\n  var base = arguments.length > 1 ? arguments[1] : undefined;\n  var urlString = String(url);\n  var state = setInternalState(that, { type: 'URL' });\n  var baseState, failure;\n  if (base !== undefined) {\n    if (base instanceof URLConstructor) baseState = getInternalURLState(base);\n    else {\n      failure = parseURL(baseState = {}, String(base));\n      if (failure) throw TypeError(failure);\n    }\n  }\n  failure = parseURL(state, urlString, null, baseState);\n  if (failure) throw TypeError(failure);\n  var searchParams = state.searchParams = new URLSearchParams();\n  var searchParamsState = getInternalSearchParamsState(searchParams);\n  searchParamsState.updateSearchParams(state.query);\n  searchParamsState.updateURL = function () {\n    state.query = String(searchParams) || null;\n  };\n  if (!DESCRIPTORS) {\n    that.href = serializeURL.call(that);\n    that.origin = getOrigin.call(that);\n    that.protocol = getProtocol.call(that);\n    that.username = getUsername.call(that);\n    that.password = getPassword.call(that);\n    that.host = getHost.call(that);\n    that.hostname = getHostname.call(that);\n    that.port = getPort.call(that);\n    that.pathname = getPathname.call(that);\n    that.search = getSearch.call(that);\n    that.searchParams = getSearchParams.call(that);\n    that.hash = getHash.call(that);\n  }\n};\n\nvar URLPrototype = URLConstructor.prototype;\n\nvar serializeURL = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var username = url.username;\n  var password = url.password;\n  var host = url.host;\n  var port = url.port;\n  var path = url.path;\n  var query = url.query;\n  var fragment = url.fragment;\n  var output = scheme + ':';\n  if (host !== null) {\n    output += '//';\n    if (includesCredentials(url)) {\n      output += username + (password ? ':' + password : '') + '@';\n    }\n    output += serializeHost(host);\n    if (port !== null) output += ':' + port;\n  } else if (scheme == 'file') output += '//';\n  output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n  if (query !== null) output += '?' + query;\n  if (fragment !== null) output += '#' + fragment;\n  return output;\n};\n\nvar getOrigin = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var port = url.port;\n  if (scheme == 'blob') try {\n    return new URL(scheme.path[0]).origin;\n  } catch (error) {\n    return 'null';\n  }\n  if (scheme == 'file' || !isSpecial(url)) return 'null';\n  return scheme + '://' + serializeHost(url.host) + (port !== null ? ':' + port : '');\n};\n\nvar getProtocol = function () {\n  return getInternalURLState(this).scheme + ':';\n};\n\nvar getUsername = function () {\n  return getInternalURLState(this).username;\n};\n\nvar getPassword = function () {\n  return getInternalURLState(this).password;\n};\n\nvar getHost = function () {\n  var url = getInternalURLState(this);\n  var host = url.host;\n  var port = url.port;\n  return host === null ? ''\n    : port === null ? serializeHost(host)\n    : serializeHost(host) + ':' + port;\n};\n\nvar getHostname = function () {\n  var host = getInternalURLState(this).host;\n  return host === null ? '' : serializeHost(host);\n};\n\nvar getPort = function () {\n  var port = getInternalURLState(this).port;\n  return port === null ? '' : String(port);\n};\n\nvar getPathname = function () {\n  var url = getInternalURLState(this);\n  var path = url.path;\n  return url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n};\n\nvar getSearch = function () {\n  var query = getInternalURLState(this).query;\n  return query ? '?' + query : '';\n};\n\nvar getSearchParams = function () {\n  return getInternalURLState(this).searchParams;\n};\n\nvar getHash = function () {\n  var fragment = getInternalURLState(this).fragment;\n  return fragment ? '#' + fragment : '';\n};\n\nvar accessorDescriptor = function (getter, setter) {\n  return { get: getter, set: setter, configurable: true, enumerable: true };\n};\n\nif (DESCRIPTORS) {\n  defineProperties(URLPrototype, {\n    // `URL.prototype.href` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-href\n    href: accessorDescriptor(serializeURL, function (href) {\n      var url = getInternalURLState(this);\n      var urlString = String(href);\n      var failure = parseURL(url, urlString);\n      if (failure) throw TypeError(failure);\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.origin` getter\n    // https://url.spec.whatwg.org/#dom-url-origin\n    origin: accessorDescriptor(getOrigin),\n    // `URL.prototype.protocol` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-protocol\n    protocol: accessorDescriptor(getProtocol, function (protocol) {\n      var url = getInternalURLState(this);\n      parseURL(url, String(protocol) + ':', SCHEME_START);\n    }),\n    // `URL.prototype.username` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-username\n    username: accessorDescriptor(getUsername, function (username) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom(String(username));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.username = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        url.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.password` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-password\n    password: accessorDescriptor(getPassword, function (password) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom(String(password));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.password = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        url.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.host` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-host\n    host: accessorDescriptor(getHost, function (host) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, String(host), HOST);\n    }),\n    // `URL.prototype.hostname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hostname\n    hostname: accessorDescriptor(getHostname, function (hostname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, String(hostname), HOSTNAME);\n    }),\n    // `URL.prototype.port` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-port\n    port: accessorDescriptor(getPort, function (port) {\n      var url = getInternalURLState(this);\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      port = String(port);\n      if (port == '') url.port = null;\n      else parseURL(url, port, PORT);\n    }),\n    // `URL.prototype.pathname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-pathname\n    pathname: accessorDescriptor(getPathname, function (pathname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      url.path = [];\n      parseURL(url, pathname + '', PATH_START);\n    }),\n    // `URL.prototype.search` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-search\n    search: accessorDescriptor(getSearch, function (search) {\n      var url = getInternalURLState(this);\n      search = String(search);\n      if (search == '') {\n        url.query = null;\n      } else {\n        if ('?' == search.charAt(0)) search = search.slice(1);\n        url.query = '';\n        parseURL(url, search, QUERY);\n      }\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.searchParams` getter\n    // https://url.spec.whatwg.org/#dom-url-searchparams\n    searchParams: accessorDescriptor(getSearchParams),\n    // `URL.prototype.hash` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hash\n    hash: accessorDescriptor(getHash, function (hash) {\n      var url = getInternalURLState(this);\n      hash = String(hash);\n      if (hash == '') {\n        url.fragment = null;\n        return;\n      }\n      if ('#' == hash.charAt(0)) hash = hash.slice(1);\n      url.fragment = '';\n      parseURL(url, hash, FRAGMENT);\n    })\n  });\n}\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\nredefine(URLPrototype, 'toJSON', function toJSON() {\n  return serializeURL.call(this);\n}, { enumerable: true });\n\n// `URL.prototype.toString` method\n// https://url.spec.whatwg.org/#URL-stringification-behavior\nredefine(URLPrototype, 'toString', function toString() {\n  return serializeURL.call(this);\n}, { enumerable: true });\n\nif (NativeURL) {\n  var nativeCreateObjectURL = NativeURL.createObjectURL;\n  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;\n  // `URL.createObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n  // eslint-disable-next-line no-unused-vars\n  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', function createObjectURL(blob) {\n    return nativeCreateObjectURL.apply(NativeURL, arguments);\n  });\n  // `URL.revokeObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL\n  // eslint-disable-next-line no-unused-vars\n  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', function revokeObjectURL(url) {\n    return nativeRevokeObjectURL.apply(NativeURL, arguments);\n  });\n}\n\nsetToStringTag(URLConstructor, 'URL');\n\n$({ global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {\n  URL: URLConstructor\n});\n","/*\n *  ReplayGainAnalysis - analyzes input samples and give the recommended dB change\n *  Copyright (C) 2001 David Robinson and Glen Sawyer\n *  Improvements and optimizations added by Frank Klemm, and by Marcel Muller \n *\n *  This library is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU Lesser General Public\n *  License as published by the Free Software Foundation; either\n *  version 2.1 of the License, or (at your option) any later version.\n *\n *  This library is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n *  Lesser General Public License for more details.\n *\n *  You should have received a copy of the GNU Lesser General Public\n *  License along with this library; if not, write to the Free Software\n *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n *\n *  concept and filter values by David Robinson (David@Robinson.org)\n *    -- blame him if you think the idea is flawed\n *  original coding by Glen Sawyer (mp3gain@hotmail.com)\n *    -- blame him if you think this runs too slowly, or the coding is otherwise flawed\n *\n *  lots of code improvements by Frank Klemm ( http://www.uni-jena.de/~pfk/mpp/ )\n *    -- credit him for all the _good_ programming ;)\n *\n *\n *  For an explanation of the concepts and the basic algorithms involved, go to:\n *    http://www.replaygain.org/\n */\n\n/*\n *  Here's the deal. Call\n *\n *    InitGainAnalysis ( long samplefreq );\n *\n *  to initialize everything. Call\n *\n *    AnalyzeSamples ( var Float_t*  left_samples,\n *                     var Float_t*  right_samples,\n *                     size_t          num_samples,\n *                     int             num_channels );\n *\n *  as many times as you want, with as many or as few samples as you want.\n *  If mono, pass the sample buffer in through left_samples, leave\n *  right_samples NULL, and make sure num_channels = 1.\n *\n *    GetTitleGain()\n *\n *  will return the recommended dB level change for all samples analyzed\n *  SINCE THE LAST TIME you called GetTitleGain() OR InitGainAnalysis().\n *\n *    GetAlbumGain()\n *\n *  will return the recommended dB level change for all samples analyzed\n *  since InitGainAnalysis() was called and finalized with GetTitleGain().\n *\n *  Pseudo-code to process an album:\n *\n *    Float_t       l_samples [4096];\n *    Float_t       r_samples [4096];\n *    size_t        num_samples;\n *    unsigned int  num_songs;\n *    unsigned int  i;\n *\n *    InitGainAnalysis ( 44100 );\n *    for ( i = 1; i <= num_songs; i++ ) {\n *        while ( ( num_samples = getSongSamples ( song[i], left_samples, right_samples ) ) > 0 )\n *            AnalyzeSamples ( left_samples, right_samples, num_samples, 2 );\n *        fprintf (\"Recommended dB change for song %2d: %+6.2 dB\\n\", i, GetTitleGain() );\n *    }\n *    fprintf (\"Recommended dB change for whole album: %+6.2 dB\\n\", GetAlbumGain() );\n */\n\n/*\n *  So here's the main source of potential code confusion:\n *\n *  The filters applied to the incoming samples are IIR filters,\n *  meaning they rely on up to <filter order> number of previous samples\n *  AND up to <filter order> number of previous filtered samples.\n *\n *  I set up the AnalyzeSamples routine to minimize memory usage and interface\n *  complexity. The speed isn't compromised too much (I don't think), but the\n *  internal complexity is higher than it should be for such a relatively\n *  simple routine.\n *\n *  Optimization/clarity suggestions are welcome.\n */\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\n/**\n * Table entries per dB\n */\nGainAnalysis.STEPS_per_dB = 100.;\n/**\n * Table entries for 0...MAX_dB (normal max. values are 70...80 dB)\n */\nGainAnalysis.MAX_dB = 120.;\nGainAnalysis.GAIN_NOT_ENOUGH_SAMPLES = -24601;\nGainAnalysis.GAIN_ANALYSIS_ERROR = 0;\nGainAnalysis.GAIN_ANALYSIS_OK = 1;\nGainAnalysis.INIT_GAIN_ANALYSIS_ERROR = 0;\nGainAnalysis.INIT_GAIN_ANALYSIS_OK = 1;\n\nGainAnalysis.YULE_ORDER = 10;\nGainAnalysis.MAX_ORDER = GainAnalysis.YULE_ORDER;\n\nGainAnalysis.MAX_SAMP_FREQ = 48000;\nGainAnalysis.RMS_WINDOW_TIME_NUMERATOR = 1;\nGainAnalysis.RMS_WINDOW_TIME_DENOMINATOR = 20;\nGainAnalysis.MAX_SAMPLES_PER_WINDOW = ((GainAnalysis.MAX_SAMP_FREQ * GainAnalysis.RMS_WINDOW_TIME_NUMERATOR) / GainAnalysis.RMS_WINDOW_TIME_DENOMINATOR + 1);\n\nfunction GainAnalysis() {\n    /**\n     * calibration value for 89dB\n     */\n    var PINK_REF = 64.82;\n\n    var YULE_ORDER = GainAnalysis.YULE_ORDER;\n    /**\n     * percentile which is louder than the proposed level\n     */\n    var RMS_PERCENTILE = 0.95;\n    /**\n     * maximum allowed sample frequency [Hz]\n     */\n    var MAX_SAMP_FREQ = GainAnalysis.MAX_SAMP_FREQ;\n    var RMS_WINDOW_TIME_NUMERATOR = GainAnalysis.RMS_WINDOW_TIME_NUMERATOR;\n    /**\n     * numerator / denominator = time slice size [s]\n     */\n    var RMS_WINDOW_TIME_DENOMINATOR = GainAnalysis.RMS_WINDOW_TIME_DENOMINATOR;\n    /**\n     * max. Samples per Time slice\n     */\n    var MAX_SAMPLES_PER_WINDOW = GainAnalysis.MAX_SAMPLES_PER_WINDOW;\n\n\n    var ABYule = [\n        [0.03857599435200, -3.84664617118067, -0.02160367184185,\n            7.81501653005538, -0.00123395316851, -11.34170355132042,\n            -0.00009291677959, 13.05504219327545, -0.01655260341619,\n            -12.28759895145294, 0.02161526843274, 9.48293806319790,\n            -0.02074045215285, -5.87257861775999, 0.00594298065125,\n            2.75465861874613, 0.00306428023191, -0.86984376593551,\n            0.00012025322027, 0.13919314567432, 0.00288463683916],\n        [0.05418656406430, -3.47845948550071, -0.02911007808948,\n            6.36317777566148, -0.00848709379851, -8.54751527471874,\n            -0.00851165645469, 9.47693607801280, -0.00834990904936,\n            -8.81498681370155, 0.02245293253339, 6.85401540936998,\n            -0.02596338512915, -4.39470996079559, 0.01624864962975,\n            2.19611684890774, -0.00240879051584, -0.75104302451432,\n            0.00674613682247, 0.13149317958808, -0.00187763777362],\n        [0.15457299681924, -2.37898834973084, -0.09331049056315,\n            2.84868151156327, -0.06247880153653, -2.64577170229825,\n            0.02163541888798, 2.23697657451713, -0.05588393329856,\n            -1.67148153367602, 0.04781476674921, 1.00595954808547,\n            0.00222312597743, -0.45953458054983, 0.03174092540049,\n            0.16378164858596, -0.01390589421898, -0.05032077717131,\n            0.00651420667831, 0.02347897407020, -0.00881362733839],\n        [0.30296907319327, -1.61273165137247, -0.22613988682123,\n            1.07977492259970, -0.08587323730772, -0.25656257754070,\n            0.03282930172664, -0.16276719120440, -0.00915702933434,\n            -0.22638893773906, -0.02364141202522, 0.39120800788284,\n            -0.00584456039913, -0.22138138954925, 0.06276101321749,\n            0.04500235387352, -0.00000828086748, 0.02005851806501,\n            0.00205861885564, 0.00302439095741, -0.02950134983287],\n        [0.33642304856132, -1.49858979367799, -0.25572241425570,\n            0.87350271418188, -0.11828570177555, 0.12205022308084,\n            0.11921148675203, -0.80774944671438, -0.07834489609479,\n            0.47854794562326, -0.00469977914380, -0.12453458140019,\n            -0.00589500224440, -0.04067510197014, 0.05724228140351,\n            0.08333755284107, 0.00832043980773, -0.04237348025746,\n            -0.01635381384540, 0.02977207319925, -0.01760176568150],\n        [0.44915256608450, -0.62820619233671, -0.14351757464547,\n            0.29661783706366, -0.22784394429749, -0.37256372942400,\n            -0.01419140100551, 0.00213767857124, 0.04078262797139,\n            -0.42029820170918, -0.12398163381748, 0.22199650564824,\n            0.04097565135648, 0.00613424350682, 0.10478503600251,\n            0.06747620744683, -0.01863887810927, 0.05784820375801,\n            -0.03193428438915, 0.03222754072173, 0.00541907748707],\n        [0.56619470757641, -1.04800335126349, -0.75464456939302,\n            0.29156311971249, 0.16242137742230, -0.26806001042947,\n            0.16744243493672, 0.00819999645858, -0.18901604199609,\n            0.45054734505008, 0.30931782841830, -0.33032403314006,\n            -0.27562961986224, 0.06739368333110, 0.00647310677246,\n            -0.04784254229033, 0.08647503780351, 0.01639907836189,\n            -0.03788984554840, 0.01807364323573, -0.00588215443421],\n        [0.58100494960553, -0.51035327095184, -0.53174909058578,\n            -0.31863563325245, -0.14289799034253, -0.20256413484477,\n            0.17520704835522, 0.14728154134330, 0.02377945217615,\n            0.38952639978999, 0.15558449135573, -0.23313271880868,\n            -0.25344790059353, -0.05246019024463, 0.01628462406333,\n            -0.02505961724053, 0.06920467763959, 0.02442357316099,\n            -0.03721611395801, 0.01818801111503, -0.00749618797172],\n        [0.53648789255105, -0.25049871956020, -0.42163034350696,\n            -0.43193942311114, -0.00275953611929, -0.03424681017675,\n            0.04267842219415, -0.04678328784242, -0.10214864179676,\n            0.26408300200955, 0.14590772289388, 0.15113130533216,\n            -0.02459864859345, -0.17556493366449, -0.11202315195388,\n            -0.18823009262115, -0.04060034127000, 0.05477720428674,\n            0.04788665548180, 0.04704409688120, -0.02217936801134]];\n\n    var ABButter = [\n        [0.98621192462708, -1.97223372919527, -1.97242384925416,\n            0.97261396931306, 0.98621192462708],\n        [0.98500175787242, -1.96977855582618, -1.97000351574484,\n            0.97022847566350, 0.98500175787242],\n        [0.97938932735214, -1.95835380975398, -1.95877865470428,\n            0.95920349965459, 0.97938932735214],\n        [0.97531843204928, -1.95002759149878, -1.95063686409857,\n            0.95124613669835, 0.97531843204928],\n        [0.97316523498161, -1.94561023566527, -1.94633046996323,\n            0.94705070426118, 0.97316523498161],\n        [0.96454515552826, -1.92783286977036, -1.92909031105652,\n            0.93034775234268, 0.96454515552826],\n        [0.96009142950541, -1.91858953033784, -1.92018285901082,\n            0.92177618768381, 0.96009142950541],\n        [0.95856916599601, -1.91542108074780, -1.91713833199203,\n            0.91885558323625, 0.95856916599601],\n        [0.94597685600279, -1.88903307939452, -1.89195371200558,\n            0.89487434461664, 0.94597685600279]];\n\n\n    /**\n     * When calling this procedure, make sure that ip[-order] and op[-order]\n     * point to real data\n     */\n    //private void filterYule(final float[] input, int inputPos, float[] output,\n    //int outputPos, int nSamples, final float[] kernel) {\n    function filterYule(input, inputPos, output, outputPos, nSamples, kernel) {\n\n        while ((nSamples--) != 0) {\n            /* 1e-10 is a hack to avoid slowdown because of denormals */\n            output[outputPos] = 1e-10 + input[inputPos + 0] * kernel[0]\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\n                * kernel[2] - output[outputPos - 2] * kernel[3]\n                + input[inputPos - 2] * kernel[4] - output[outputPos - 3]\n                * kernel[5] + input[inputPos - 3] * kernel[6]\n                - output[outputPos - 4] * kernel[7] + input[inputPos - 4]\n                * kernel[8] - output[outputPos - 5] * kernel[9]\n                + input[inputPos - 5] * kernel[10] - output[outputPos - 6]\n                * kernel[11] + input[inputPos - 6] * kernel[12]\n                - output[outputPos - 7] * kernel[13] + input[inputPos - 7]\n                * kernel[14] - output[outputPos - 8] * kernel[15]\n                + input[inputPos - 8] * kernel[16] - output[outputPos - 9]\n                * kernel[17] + input[inputPos - 9] * kernel[18]\n                - output[outputPos - 10] * kernel[19]\n                + input[inputPos - 10] * kernel[20];\n            ++outputPos;\n            ++inputPos;\n        }\n    }\n\n//private void filterButter(final float[] input, int inputPos,\n//    float[] output, int outputPos, int nSamples, final float[] kernel) {\n    function filterButter(input, inputPos, output, outputPos, nSamples, kernel) {\n\n        while ((nSamples--) != 0) {\n            output[outputPos] = input[inputPos + 0] * kernel[0]\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\n                * kernel[2] - output[outputPos - 2] * kernel[3]\n                + input[inputPos - 2] * kernel[4];\n            ++outputPos;\n            ++inputPos;\n        }\n    }\n\n    /**\n     * @return INIT_GAIN_ANALYSIS_OK if successful, INIT_GAIN_ANALYSIS_ERROR if\n     *         not\n     */\n    function ResetSampleFrequency(rgData, samplefreq) {\n        /* zero out initial values */\n        for (var i = 0; i < MAX_ORDER; i++)\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\n\n        switch (0 | (samplefreq)) {\n            case 48000:\n                rgData.reqindex = 0;\n                break;\n            case 44100:\n                rgData.reqindex = 1;\n                break;\n            case 32000:\n                rgData.reqindex = 2;\n                break;\n            case 24000:\n                rgData.reqindex = 3;\n                break;\n            case 22050:\n                rgData.reqindex = 4;\n                break;\n            case 16000:\n                rgData.reqindex = 5;\n                break;\n            case 12000:\n                rgData.reqindex = 6;\n                break;\n            case 11025:\n                rgData.reqindex = 7;\n                break;\n            case 8000:\n                rgData.reqindex = 8;\n                break;\n            default:\n                return INIT_GAIN_ANALYSIS_ERROR;\n        }\n\n        rgData.sampleWindow = 0 | ((samplefreq * RMS_WINDOW_TIME_NUMERATOR\n            + RMS_WINDOW_TIME_DENOMINATOR - 1) / RMS_WINDOW_TIME_DENOMINATOR);\n\n        rgData.lsum = 0.;\n        rgData.rsum = 0.;\n        rgData.totsamp = 0;\n\n        Arrays.ill(rgData.A, 0);\n\n        return INIT_GAIN_ANALYSIS_OK;\n    }\n\n    this.InitGainAnalysis = function (rgData, samplefreq) {\n        if (ResetSampleFrequency(rgData, samplefreq) != INIT_GAIN_ANALYSIS_OK) {\n            return INIT_GAIN_ANALYSIS_ERROR;\n        }\n\n        rgData.linpre = MAX_ORDER;\n        rgData.rinpre = MAX_ORDER;\n        rgData.lstep = MAX_ORDER;\n        rgData.rstep = MAX_ORDER;\n        rgData.lout = MAX_ORDER;\n        rgData.rout = MAX_ORDER;\n\n        Arrays.fill(rgData.B, 0);\n\n        return INIT_GAIN_ANALYSIS_OK;\n    };\n\n    /**\n     * square\n     */\n    function fsqr(d) {\n        return d * d;\n    }\n\n    this.AnalyzeSamples = function (rgData, left_samples, left_samplesPos, right_samples, right_samplesPos, num_samples,\n                                    num_channels) {\n        var curleft;\n        var curleftBase;\n        var curright;\n        var currightBase;\n        var batchsamples;\n        var cursamples;\n        var cursamplepos;\n\n        if (num_samples == 0)\n            return GAIN_ANALYSIS_OK;\n\n        cursamplepos = 0;\n        batchsamples = num_samples;\n\n        switch (num_channels) {\n            case 1:\n                right_samples = left_samples;\n                right_samplesPos = left_samplesPos;\n                break;\n            case 2:\n                break;\n            default:\n                return GAIN_ANALYSIS_ERROR;\n        }\n\n        if (num_samples < MAX_ORDER) {\n            System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER, num_samples);\n            System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER, num_samples);\n        } else {\n            System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER, MAX_ORDER);\n            System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER, MAX_ORDER);\n        }\n\n        while (batchsamples > 0) {\n            cursamples = batchsamples > rgData.sampleWindow - rgData.totsamp ? rgData.sampleWindow\n            - rgData.totsamp\n                : batchsamples;\n            if (cursamplepos < MAX_ORDER) {\n                curleft = rgData.linpre + cursamplepos;\n                curleftBase = rgData.linprebuf;\n                curright = rgData.rinpre + cursamplepos;\n                currightBase = rgData.rinprebuf;\n                if (cursamples > MAX_ORDER - cursamplepos)\n                    cursamples = MAX_ORDER - cursamplepos;\n            } else {\n                curleft = left_samplesPos + cursamplepos;\n                curleftBase = left_samples;\n                curright = right_samplesPos + cursamplepos;\n                currightBase = right_samples;\n            }\n\n            filterYule(curleftBase, curleft, rgData.lstepbuf, rgData.lstep\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\n            filterYule(currightBase, curright, rgData.rstepbuf, rgData.rstep\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\n\n            filterButter(rgData.lstepbuf, rgData.lstep + rgData.totsamp,\n                rgData.loutbuf, rgData.lout + rgData.totsamp, cursamples,\n                ABButter[rgData.reqindex]);\n            filterButter(rgData.rstepbuf, rgData.rstep + rgData.totsamp,\n                rgData.routbuf, rgData.rout + rgData.totsamp, cursamples,\n                ABButter[rgData.reqindex]);\n\n            curleft = rgData.lout + rgData.totsamp;\n            /* Get the squared values */\n            curleftBase = rgData.loutbuf;\n            curright = rgData.rout + rgData.totsamp;\n            currightBase = rgData.routbuf;\n\n            var i = cursamples % 8;\n            while ((i--) != 0) {\n                rgData.lsum += fsqr(curleftBase[curleft++]);\n                rgData.rsum += fsqr(currightBase[curright++]);\n            }\n            i = cursamples / 8;\n            while ((i--) != 0) {\n                rgData.lsum += fsqr(curleftBase[curleft + 0])\n                    + fsqr(curleftBase[curleft + 1])\n                    + fsqr(curleftBase[curleft + 2])\n                    + fsqr(curleftBase[curleft + 3])\n                    + fsqr(curleftBase[curleft + 4])\n                    + fsqr(curleftBase[curleft + 5])\n                    + fsqr(curleftBase[curleft + 6])\n                    + fsqr(curleftBase[curleft + 7]);\n                curleft += 8;\n                rgData.rsum += fsqr(currightBase[curright + 0])\n                    + fsqr(currightBase[curright + 1])\n                    + fsqr(currightBase[curright + 2])\n                    + fsqr(currightBase[curright + 3])\n                    + fsqr(currightBase[curright + 4])\n                    + fsqr(currightBase[curright + 5])\n                    + fsqr(currightBase[curright + 6])\n                    + fsqr(currightBase[curright + 7]);\n                curright += 8;\n            }\n\n            batchsamples -= cursamples;\n            cursamplepos += cursamples;\n            rgData.totsamp += cursamples;\n            if (rgData.totsamp == rgData.sampleWindow) {\n                /* Get the Root Mean Square (RMS) for this set of samples */\n                var val = GainAnalysis.STEPS_per_dB\n                    * 10.\n                    * Math.log10((rgData.lsum + rgData.rsum)\n                        / rgData.totsamp * 0.5 + 1.e-37);\n                var ival = (val <= 0) ? 0 : 0 | val;\n                if (ival >= rgData.A.length)\n                    ival = rgData.A.length - 1;\n                rgData.A[ival]++;\n                rgData.lsum = rgData.rsum = 0.;\n\n                System.arraycopy(rgData.loutbuf, rgData.totsamp,\n                    rgData.loutbuf, 0, MAX_ORDER);\n                System.arraycopy(rgData.routbuf, rgData.totsamp,\n                    rgData.routbuf, 0, MAX_ORDER);\n                System.arraycopy(rgData.lstepbuf, rgData.totsamp,\n                    rgData.lstepbuf, 0, MAX_ORDER);\n                System.arraycopy(rgData.rstepbuf, rgData.totsamp,\n                    rgData.rstepbuf, 0, MAX_ORDER);\n                rgData.totsamp = 0;\n            }\n            if (rgData.totsamp > rgData.sampleWindow) {\n                /*\n                 * somehow I really screwed up: Error in programming! Contact\n                 * author about totsamp > sampleWindow\n                 */\n                return GAIN_ANALYSIS_ERROR;\n            }\n        }\n        if (num_samples < MAX_ORDER) {\n            System.arraycopy(rgData.linprebuf, num_samples, rgData.linprebuf,\n                0, MAX_ORDER - num_samples);\n            System.arraycopy(rgData.rinprebuf, num_samples, rgData.rinprebuf,\n                0, MAX_ORDER - num_samples);\n            System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER - num_samples, num_samples);\n            System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER - num_samples, num_samples);\n        } else {\n            System.arraycopy(left_samples, left_samplesPos + num_samples\n                - MAX_ORDER, rgData.linprebuf, 0, MAX_ORDER);\n            System.arraycopy(right_samples, right_samplesPos + num_samples\n                - MAX_ORDER, rgData.rinprebuf, 0, MAX_ORDER);\n        }\n\n        return GAIN_ANALYSIS_OK;\n    };\n\n    function analyzeResult(Array, len) {\n        var i;\n\n        var elems = 0;\n        for (i = 0; i < len; i++)\n            elems += Array[i];\n        if (elems == 0)\n            return GAIN_NOT_ENOUGH_SAMPLES;\n\n        var upper = 0 | Math.ceil(elems * (1. - RMS_PERCENTILE));\n        for (i = len; i-- > 0;) {\n            if ((upper -= Array[i]) <= 0)\n                break;\n        }\n\n        //return (float) ((float) PINK_REF - (float) i / (float) STEPS_per_dB);\n        return (PINK_REF - i / GainAnalysis.STEPS_per_dB);\n    }\n\n    this.GetTitleGain = function (rgData) {\n        var retval = analyzeResult(rgData.A, rgData.A.length);\n\n        for (var i = 0; i < rgData.A.length; i++) {\n            rgData.B[i] += rgData.A[i];\n            rgData.A[i] = 0;\n        }\n\n        for (var i = 0; i < MAX_ORDER; i++)\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\n\n        rgData.totsamp = 0;\n        rgData.lsum = rgData.rsum = 0.;\n        return retval;\n    }\n\n}\n\nmodule.exports = GainAnalysis;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"page\"}},[_c('div',{attrs:{\"id\":\"header\"}},[_c('h1',[_vm._v(\" \"+_vm._s(_vm.$t(\"Suisei Remix Editor\"))+\" \"),_c('sup',[_vm._v(_vm._s(_vm.$t(\"experimental\")))])]),_c('p',{domProps:{\"innerHTML\":_vm._s(_vm.$t('long-editor-description'))}}),_c('div',{style:({\n        display: _vm.smallScreen === 1 ? 'none' : 'flex',\n        opacity: _vm.smallScreen === 2 ? 0 : 1\n      }),attrs:{\"id\":\"operations\"}},[_c('div',{staticClass:\"normalBtn\",on:{\"click\":_vm.playRemix}},[_vm._v(_vm._s(_vm.$t(\"Play\")))]),_c('div',{staticClass:\"normalBtn\",on:{\"click\":_vm.exportRemix}},[_vm._v(_vm._s(_vm.$t(\"Export\")))]),_c('div',{staticClass:\"normalBtn\",on:{\"click\":_vm.clearRemix}},[_vm._v(_vm._s(_vm.$t(\"Clear\")))])])]),_c('div',{style:({ display: _vm.smallScreen === 0 ? 'none' : 'block' }),attrs:{\"id\":\"smallScreen\"}},[_c('p',[_vm._v(\" \"+_vm._s(_vm.$t(\"Your device screen is too small to run this editor. Sorry~\"))+\" \")])]),_c('div',{style:({\n      display: _vm.smallScreen === 1 ? 'none' : 'block',\n      opacity: _vm.smallScreen === 2 ? 0 : 1\n    })},[_c('div',{ref:\"clips\",attrs:{\"id\":\"buttons\"}},[_vm._l((_vm.sounds),function(item,index){return [_c('BaseButton',{key:index,staticClass:\"item normalBtn\",attrs:{\"item\":item,\"noclickplay\":true,\"data-sound-id\":index}})]})],2),_c('div',{ref:\"editor\",attrs:{\"id\":\"editor\"}},[_vm._m(0)])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"tracks\"}},[_c('div',{staticClass:\"track\",attrs:{\"data-track-id\":\"1\"}}),_c('div',{staticClass:\"track\",attrs:{\"data-track-id\":\"2\"}}),_c('div',{staticClass:\"track\",attrs:{\"data-track-id\":\"3\"}}),_c('div',{staticClass:\"track\",attrs:{\"data-track-id\":\"4\"}})])}]\n\nexport { render, staticRenderFns }","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","const encoder = require(\"audio-encoder\");\n\nasync function encoderWrapper(buf: AudioBuffer): Promise<Blob> {\n  return new Promise((resolve, reject) => {\n    try {\n      encoder(buf, 128, null, function onComplete(blob: Blob) {\n        resolve(blob);\n      });\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n/**\n * ハッピーシンセサイザ (Happy Synthesizer)\n * This is the module used by EditorView to export the edits.\n */\nexport async function mergeAudio(srcs: SynthItem[]): Promise<string> {\n  const ctx = new OfflineAudioContext(2, 44100 * 5, 44100);\n  for (const i of srcs) {\n    console.log(`Fetching ${i.musicurl}`);\n    const arrayBuf = await fetch(i.musicurl)\n      .then(x => x.blob())\n      .then(x => x.arrayBuffer());\n    const audioBufSrc = ctx.createBufferSource();\n    const audioBuf = await ctx.decodeAudioData(arrayBuf).catch(err => {\n      console.log(`Error when decoding ${i.musicurl}:`, err);\n    });\n    if (!audioBuf) continue;\n    console.log(`Decoded ${i.musicurl} delaying`, audioBuf, i.delay);\n    audioBufSrc.buffer = audioBuf;\n    audioBufSrc.connect(ctx.destination);\n    audioBufSrc.start(i.delay);\n  }\n  console.log(\"Rendering...\");\n  const mergedAudioBuf = await ctx.startRendering();\n  const finalBlob = await encoderWrapper(mergedAudioBuf);\n  const url = URL.createObjectURL(finalBlob);\n  return url;\n}\n\nexport interface SynthItem {\n  musicurl: string;\n  delay: number;\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from \"vue-property-decorator\";\nimport { Sound } from \"../types\";\nimport BaseButton from \"../components/BaseButton.vue\";\nimport interact from \"interactjs\";\nimport { mergeAudio, SynthItem } from \"../components/HappySynthesizer\";\nimport { setLanguage } from \"../components/setLanguage\";\n\nlet editorElements: {\n  [key: string]: {\n    id: number;\n    location: number;\n  };\n} = {};\n\n(window as any).editorElements = editorElements;\n\nfunction getXLocation(target: HTMLElement) {\n  return (\n    target.offsetLeft +\n    Number(target.getAttribute(\"data-x\") || -1 * target.offsetLeft)\n  );\n}\n\nfunction updateElementPos(target: HTMLElement, dx: number, dy: number) {\n  const x = (parseFloat(target.getAttribute(\"data-x\") || \"\") || 0) + dx;\n  const y = (parseFloat(target.getAttribute(\"data-y\") || \"\") || 0) + dy;\n  target.style.webkitTransform = target.style.transform =\n    \"translate(\" + x + \"px, \" + y + \"px)\";\n  target.setAttribute(\"data-x\", String(x));\n  target.setAttribute(\"data-y\", String(y));\n}\n\nfunction moveHandler(event: any) {\n  const target = event.target;\n  updateElementPos(target, event.dx, event.dy);\n\n  // Update value\n  const seq = Number(target.getAttribute(\"data-seq-id\"));\n  if (!editorElements[seq]) return;\n  const location = getXLocation(target);\n  editorElements[seq].location = location;\n}\n\n@Component({\n  components: {\n    BaseButton\n  }\n})\nexport default class App extends Vue {\n  private sounds: Sound[] = [];\n  private smallScreen = 0;\n  private timelineLength = 3;\n\n  private async loadVoice() {\n    const soundNotExpanded = (await fetch(\"/sounds.json\")\n      .then(x => x.json())\n      .catch(() => {\n        // tslint:disable-next-line:no-console\n        console.error(\"Sound data fetch error. Exiting.\");\n      })) as Sound[];\n    for (const i of soundNotExpanded) {\n      if (typeof i.file === \"string\") {\n        // Single voice, go on\n        this.sounds.push(i);\n      } else {\n        // Array of voices\n        for (let idx = 0; idx < i.file.length; idx++) {\n          const name_l10n = { ...i.name_l10n };\n          for (const lang in name_l10n) {\n            name_l10n[lang] += ` (${idx + 1})`;\n          }\n          const singleSound = Object.assign({}, i, {\n            name: `${i.name} (${idx + 1})`,\n            name_l10n,\n            file: i.file[idx]\n          });\n          this.sounds.push(singleSound);\n        }\n      }\n    }\n  }\n\n  private validateDisplay() {\n    if (window.innerHeight > 600) {\n      this.smallScreen = 0;\n      return;\n    }\n    this.smallScreen = 2;\n    const editorBottom =\n      (this.$refs.editor as HTMLElement).offsetHeight +\n      (this.$refs.editor as HTMLElement).offsetTop;\n    if (window.innerHeight < editorBottom) {\n      this.smallScreen = 1;\n    } else {\n      if (editorBottom !== 0) {\n        this.smallScreen = 0;\n      }\n    }\n  }\n\n  private async mounted() {\n    await this.loadVoice();\n    setLanguage(window, navigator, this);\n    this.validateDisplay();\n    window.addEventListener(\"resize\", this.validateDisplay);\n    this.initDrag();\n  }\n\n  private initDrag() {\n    const buttonsOffsetLeft = (this.$refs.clips as HTMLElement).offsetLeft;\n    const buttonsOffsetTop = (this.$refs.clips as HTMLElement).offsetTop;\n    const that = this;\n    interact(\".item\").draggable({\n      inertia: false,\n      modifiers: [\n        interact.modifiers.restrictRect({\n          restriction: document.getElementById(\"page\") as HTMLElement,\n          endOnly: true\n        })\n      ],\n      listeners: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        move: function(event: any) {\n          moveHandler(event);\n        },\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        end: function(event: any) {\n          moveHandler(event);\n          const target: HTMLElement = event.target;\n          if (!target.getAttribute(\"data-seq-id\")) {\n            // Revert button location\n            if (target.getAttribute(\"data-in-track\")) {\n              (that.$refs.clips as HTMLElement).removeChild(target);\n            } else {\n              target.style.webkitTransform = target.style.transform = \"\";\n              target.removeAttribute(\"data-x\");\n              target.removeAttribute(\"data-y\");\n            }\n          } else {\n            // Append the same button\n            if (!target.getAttribute(\"data-in-track\")) {\n              const newNode = target.cloneNode(true);\n              (newNode as HTMLElement).style.webkitTransform = (newNode as HTMLElement).style.transform =\n                \"\";\n              (newNode as HTMLElement).removeAttribute(\"data-x\");\n              (newNode as HTMLElement).removeAttribute(\"data-y\");\n              (newNode as HTMLElement).removeAttribute(\"data-seq-id\");\n              (newNode as HTMLElement).removeAttribute(\"data-in-track\");\n              (that.$refs.clips as HTMLElement).appendChild(newNode);\n              target.setAttribute(\"data-in-track\", \"1\");\n\n              updateElementPos(\n                target,\n                target.offsetLeft - buttonsOffsetLeft - 12,\n                target.offsetTop - buttonsOffsetTop - 12\n              );\n              target.style.position = \"absolute\";\n            }\n          }\n        }\n      }\n    });\n    interact(\".track\").dropzone({\n      accept: \".item\",\n      ondragenter: function(event) {\n        const target: HTMLElement = event.relatedTarget;\n        let seqId = target.getAttribute(\"data-seq-id\");\n        if (seqId) return;\n        seqId = String(Math.random());\n        target.setAttribute(\"data-seq-id\", seqId);\n        editorElements[seqId] = {\n          id: Number(target.getAttribute(\"data-sound-id\")),\n          location: -1\n        };\n      },\n      ondragleave: function(event) {\n        const target: HTMLElement = event.relatedTarget;\n        const seqId = target.getAttribute(\"data-seq-id\");\n        if (seqId) {\n          editorElements[seqId] && delete editorElements[seqId];\n          target.removeAttribute(\"data-seq-id\");\n        }\n      }\n    });\n  }\n\n  private playRemix() {\n    const tracks = document.getElementsByClassName(\"track\");\n    if (!tracks) return;\n    const track = tracks[0];\n    const ratio =\n      Number((track as HTMLElement).offsetWidth) / this.timelineLength;\n    const preparedSounds: { [key: string]: HTMLAudioElement } = {};\n    for (const [key, i] of Object.entries(editorElements)) {\n      if (i.id < 0) continue;\n      const id = i.id;\n      const sound = preparedSounds[key];\n      if (sound) continue;\n      const audioFilename = this.sounds[id].file;\n      const audio = new Audio(`assets/${audioFilename}`);\n      audio.preload = \"auto\";\n      preparedSounds[key] = audio;\n    }\n    for (const [key, i] of Object.entries(editorElements)) {\n      if (i.id < 0 || i.location < 0) continue;\n      setTimeout(() => {\n        preparedSounds[key].play();\n      }, (i.location / ratio) * 1000);\n    }\n  }\n\n  private clearRemix() {\n    for (const item of document.querySelectorAll(\".item[data-seq-id]\")) {\n      (this.$refs.clips as HTMLElement).removeChild(item);\n    }\n    editorElements = {};\n  }\n\n  private async exportRemix() {\n    const tracks = document.getElementsByClassName(\"track\");\n    if (!tracks) return;\n    const track = tracks[0];\n    const clips: SynthItem[] = [];\n    const ratio =\n      Number((track as HTMLElement).offsetWidth) / this.timelineLength;\n    for (const i of Object.values(editorElements)) {\n      clips.push({\n        musicurl: `assets/${this.sounds[i.id].file}`,\n        delay: i.location / ratio\n      });\n    }\n    const url = await mergeAudio(clips);\n    const fileLink = document.createElement(\"a\");\n    fileLink.href = url;\n    fileLink.download = \"output.mp3\";\n    fileLink.click();\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditorView.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditorView.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./EditorView.vue?vue&type=template&id=0440d7d9&scoped=true&\"\nimport script from \"./EditorView.vue?vue&type=script&lang=ts&\"\nexport * from \"./EditorView.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./EditorView.vue?vue&type=style&index=0&id=0440d7d9&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0440d7d9\",\n  null\n  \n)\n\nexport default component.exports","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nfunction Presets() {\n    function VBRPresets(qual, comp, compS,\n                        y, shThreshold, shThresholdS,\n                        adj, adjShort, lower,\n                        curve, sens, inter,\n                        joint, mod, fix) {\n        this.vbr_q = qual;\n        this.quant_comp = comp;\n        this.quant_comp_s = compS;\n        this.expY = y;\n        this.st_lrm = shThreshold;\n        this.st_s = shThresholdS;\n        this.masking_adj = adj;\n        this.masking_adj_short = adjShort;\n        this.ath_lower = lower;\n        this.ath_curve = curve;\n        this.ath_sensitivity = sens;\n        this.interch = inter;\n        this.safejoint = joint;\n        this.sfb21mod = mod;\n        this.msfix = fix;\n    }\n\n    function ABRPresets(kbps, comp, compS,\n                        joint, fix, shThreshold,\n                        shThresholdS, bass, sc,\n                        mask, lower, curve,\n                        interCh, sfScale) {\n        this.quant_comp = comp;\n        this.quant_comp_s = compS;\n        this.safejoint = joint;\n        this.nsmsfix = fix;\n        this.st_lrm = shThreshold;\n        this.st_s = shThresholdS;\n        this.nsbass = bass;\n        this.scale = sc;\n        this.masking_adj = mask;\n        this.ath_lower = lower;\n        this.ath_curve = curve;\n        this.interch = interCh;\n        this.sfscale = sfScale;\n    }\n\n    var lame;\n\n    this.setModules = function (_lame) {\n        lame = _lame;\n    };\n\n    /**\n     * <PRE>\n     * Switch mappings for VBR mode VBR_RH\n     *             vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\n     * </PRE>\n     */\n    var vbr_old_switch_map = [\n        new VBRPresets(0, 9, 9, 0, 5.20, 125.0, -4.2, -6.3, 4.8, 1, 0, 0, 2, 21, 0.97),\n        new VBRPresets(1, 9, 9, 0, 5.30, 125.0, -3.6, -5.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n        new VBRPresets(2, 9, 9, 0, 5.60, 125.0, -2.2, -3.5, 2.8, 2, 0, 0, 2, 21, 1.49),\n        new VBRPresets(3, 9, 9, 1, 5.80, 130.0, -1.8, -2.8, 2.6, 3, -4, 0, 2, 20, 1.64),\n        new VBRPresets(4, 9, 9, 1, 6.00, 135.0, -0.7, -1.1, 1.1, 3.5, -8, 0, 2, 0, 1.79),\n        new VBRPresets(5, 9, 9, 1, 6.40, 140.0, 0.5, 0.4, -7.5, 4, -12, 0.0002, 0, 0, 1.95),\n        new VBRPresets(6, 9, 9, 1, 6.60, 145.0, 0.67, 0.65, -14.7, 6.5, -19, 0.0004, 0, 0, 2.30),\n        new VBRPresets(7, 9, 9, 1, 6.60, 145.0, 0.8, 0.75, -19.7, 8, -22, 0.0006, 0, 0, 2.70),\n        new VBRPresets(8, 9, 9, 1, 6.60, 145.0, 1.2, 1.15, -27.5, 10, -23, 0.0007, 0, 0, 0),\n        new VBRPresets(9, 9, 9, 1, 6.60, 145.0, 1.6, 1.6, -36, 11, -25, 0.0008, 0, 0, 0),\n        new VBRPresets(10, 9, 9, 1, 6.60, 145.0, 2.0, 2.0, -36, 12, -25, 0.0008, 0, 0, 0)\n    ];\n\n    /**\n     * <PRE>\n     *                 vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\n     * </PRE>\n     */\n    var vbr_psy_switch_map = [\n        new VBRPresets(0, 9, 9, 0, 4.20, 25.0, -7.0, -4.0, 7.5, 1, 0, 0, 2, 26, 0.97),\n        new VBRPresets(1, 9, 9, 0, 4.20, 25.0, -5.6, -3.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n        new VBRPresets(2, 9, 9, 0, 4.20, 25.0, -4.4, -1.8, 2, 2, 0, 0, 2, 18, 1.49),\n        new VBRPresets(3, 9, 9, 1, 4.20, 25.0, -3.4, -1.25, 1.1, 3, -4, 0, 2, 15, 1.64),\n        new VBRPresets(4, 9, 9, 1, 4.20, 25.0, -2.2, 0.1, 0, 3.5, -8, 0, 2, 0, 1.79),\n        new VBRPresets(5, 9, 9, 1, 4.20, 25.0, -1.0, 1.65, -7.7, 4, -12, 0.0002, 0, 0, 1.95),\n        new VBRPresets(6, 9, 9, 1, 4.20, 25.0, -0.0, 2.47, -7.7, 6.5, -19, 0.0004, 0, 0, 2),\n        new VBRPresets(7, 9, 9, 1, 4.20, 25.0, 0.5, 2.0, -14.5, 8, -22, 0.0006, 0, 0, 2),\n        new VBRPresets(8, 9, 9, 1, 4.20, 25.0, 1.0, 2.4, -22.0, 10, -23, 0.0007, 0, 0, 2),\n        new VBRPresets(9, 9, 9, 1, 4.20, 25.0, 1.5, 2.95, -30.0, 11, -25, 0.0008, 0, 0, 2),\n        new VBRPresets(10, 9, 9, 1, 4.20, 25.0, 2.0, 2.95, -36.0, 12, -30, 0.0008, 0, 0, 2)\n    ];\n\n    function apply_vbr_preset(gfp, a, enforce) {\n        var vbr_preset = gfp.VBR == VbrMode.vbr_rh ? vbr_old_switch_map\n            : vbr_psy_switch_map;\n\n        var x = gfp.VBR_q_frac;\n        var p = vbr_preset[a];\n        var q = vbr_preset[a + 1];\n        var set = p;\n\n        // NOOP(vbr_q);\n        // NOOP(quant_comp);\n        // NOOP(quant_comp_s);\n        // NOOP(expY);\n        p.st_lrm = p.st_lrm + x * (q.st_lrm - p.st_lrm);\n        // LERP(st_lrm);\n        p.st_s = p.st_s + x * (q.st_s - p.st_s);\n        // LERP(st_s);\n        p.masking_adj = p.masking_adj + x * (q.masking_adj - p.masking_adj);\n        // LERP(masking_adj);\n        p.masking_adj_short = p.masking_adj_short + x\n            * (q.masking_adj_short - p.masking_adj_short);\n        // LERP(masking_adj_short);\n        p.ath_lower = p.ath_lower + x * (q.ath_lower - p.ath_lower);\n        // LERP(ath_lower);\n        p.ath_curve = p.ath_curve + x * (q.ath_curve - p.ath_curve);\n        // LERP(ath_curve);\n        p.ath_sensitivity = p.ath_sensitivity + x\n            * (q.ath_sensitivity - p.ath_sensitivity);\n        // LERP(ath_sensitivity);\n        p.interch = p.interch + x * (q.interch - p.interch);\n        // LERP(interch);\n        // NOOP(safejoint);\n        // NOOP(sfb21mod);\n        p.msfix = p.msfix + x * (q.msfix - p.msfix);\n        // LERP(msfix);\n\n        lame_set_VBR_q(gfp, set.vbr_q);\n\n        if (enforce != 0)\n            gfp.quant_comp = set.quant_comp;\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\n            gfp.quant_comp = set.quant_comp;\n        // SET_OPTION(quant_comp, set.quant_comp, -1);\n        if (enforce != 0)\n            gfp.quant_comp_short = set.quant_comp_s;\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\n            gfp.quant_comp_short = set.quant_comp_s;\n        // SET_OPTION(quant_comp_short, set.quant_comp_s, -1);\n        if (set.expY != 0) {\n            gfp.experimentalY = set.expY != 0;\n        }\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\n        // SET_OPTION(short_threshold_lrm, set.st_lrm, -1);\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\n        // SET_OPTION(short_threshold_s, set.st_s, -1);\n        if (enforce != 0)\n            gfp.maskingadjust = set.masking_adj;\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\n            gfp.maskingadjust = set.masking_adj;\n        // SET_OPTION(maskingadjust, set.masking_adj, 0);\n        if (enforce != 0)\n            gfp.maskingadjust_short = set.masking_adj_short;\n        else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n            gfp.maskingadjust_short = set.masking_adj_short;\n        // SET_OPTION(maskingadjust_short, set.masking_adj_short, 0);\n        if (enforce != 0)\n            gfp.ATHlower = -set.ath_lower / 10.0;\n        else if (!(Math.abs((-gfp.ATHlower * 10.0) - 0) > 0))\n            gfp.ATHlower = -set.ath_lower / 10.0;\n        // SET_OPTION(ATHlower, set.ath_lower, 0);\n        if (enforce != 0)\n            gfp.ATHcurve = set.ath_curve;\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\n            gfp.ATHcurve = set.ath_curve;\n        // SET_OPTION(ATHcurve, set.ath_curve, -1);\n        if (enforce != 0)\n            gfp.athaa_sensitivity = set.ath_sensitivity;\n        else if (!(Math.abs(gfp.athaa_sensitivity - -1) > 0))\n            gfp.athaa_sensitivity = set.ath_sensitivity;\n        // SET_OPTION(athaa_sensitivity, set.ath_sensitivity, 0);\n        if (set.interch > 0) {\n            if (enforce != 0)\n                gfp.interChRatio = set.interch;\n            else if (!(Math.abs(gfp.interChRatio - -1) > 0))\n                gfp.interChRatio = set.interch;\n            // SET_OPTION(interChRatio, set.interch, -1);\n        }\n\n        /* parameters for which there is no proper set/get interface */\n        if (set.safejoint > 0) {\n            gfp.exp_nspsytune = gfp.exp_nspsytune | set.safejoint;\n        }\n        if (set.sfb21mod > 0) {\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (set.sfb21mod << 20);\n        }\n        if (enforce != 0)\n            gfp.msfix = set.msfix;\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\n            gfp.msfix = set.msfix;\n        // SET_OPTION(msfix, set.msfix, -1);\n\n        if (enforce == 0) {\n            gfp.VBR_q = a;\n            gfp.VBR_q_frac = x;\n        }\n    }\n\n    /**\n     * <PRE>\n     *  Switch mappings for ABR mode\n     *\n     *              kbps  quant q_s safejoint nsmsfix st_lrm  st_s  ns-bass scale   msk ath_lwr ath_curve  interch , sfscale\n     * </PRE>\n     */\n    var abr_switch_map = [\n        new ABRPresets(8, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -30.0, 11, 0.0012, 1), /*   8, impossible to use in stereo */\n        new ABRPresets(16, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -25.0, 11, 0.0010, 1), /*  16 */\n        new ABRPresets(24, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -20.0, 11, 0.0010, 1), /*  24 */\n        new ABRPresets(32, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -15.0, 11, 0.0010, 1), /*  32 */\n        new ABRPresets(40, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  40 */\n        new ABRPresets(48, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  48 */\n        new ABRPresets(56, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -6.0, 11, 0.0008, 1), /*  56 */\n        new ABRPresets(64, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -2.0, 11, 0.0008, 1), /*  64 */\n        new ABRPresets(80, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, .0, 8, 0.0007, 1), /*  80 */\n        new ABRPresets(96, 9, 9, 0, 2.50, 6.60, 145, 0, 0.95, 0, 1.0, 5.5, 0.0006, 1), /*  96 */\n        new ABRPresets(112, 9, 9, 0, 2.25, 6.60, 145, 0, 0.95, 0, 2.0, 4.5, 0.0005, 1), /* 112 */\n        new ABRPresets(128, 9, 9, 0, 1.95, 6.40, 140, 0, 0.95, 0, 3.0, 4, 0.0002, 1), /* 128 */\n        new ABRPresets(160, 9, 9, 1, 1.79, 6.00, 135, 0, 0.95, -2, 5.0, 3.5, 0, 1), /* 160 */\n        new ABRPresets(192, 9, 9, 1, 1.49, 5.60, 125, 0, 0.97, -4, 7.0, 3, 0, 0), /* 192 */\n        new ABRPresets(224, 9, 9, 1, 1.25, 5.20, 125, 0, 0.98, -6, 9.0, 2, 0, 0), /* 224 */\n        new ABRPresets(256, 9, 9, 1, 0.97, 5.20, 125, 0, 1.00, -8, 10.0, 1, 0, 0), /* 256 */\n        new ABRPresets(320, 9, 9, 1, 0.90, 5.20, 125, 0, 1.00, -10, 12.0, 0, 0, 0)  /* 320 */\n    ];\n\n    function apply_abr_preset(gfp, preset, enforce) {\n        /* Variables for the ABR stuff */\n        var actual_bitrate = preset;\n\n        var r = lame.nearestBitrateFullIndex(preset);\n\n        gfp.VBR = VbrMode.vbr_abr;\n        gfp.VBR_mean_bitrate_kbps = actual_bitrate;\n        gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps, 320);\n        gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps, 8);\n        gfp.brate = gfp.VBR_mean_bitrate_kbps;\n        if (gfp.VBR_mean_bitrate_kbps > 320) {\n            gfp.disable_reservoir = true;\n        }\n\n        /* parameters for which there is no proper set/get interface */\n        if (abr_switch_map[r].safejoint > 0)\n            gfp.exp_nspsytune = gfp.exp_nspsytune | 2;\n        /* safejoint */\n\n        if (abr_switch_map[r].sfscale > 0) {\n            gfp.internal_flags.noise_shaping = 2;\n        }\n        /* ns-bass tweaks */\n        if (Math.abs(abr_switch_map[r].nsbass) > 0) {\n            var k = (int)(abr_switch_map[r].nsbass * 4);\n            if (k < 0)\n                k += 64;\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (k << 2);\n        }\n\n        if (enforce != 0)\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\n        // SET_OPTION(quant_comp, abr_switch_map[r].quant_comp, -1);\n        if (enforce != 0)\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\n        // SET_OPTION(quant_comp_short, abr_switch_map[r].quant_comp_s, -1);\n\n        if (enforce != 0)\n            gfp.msfix = abr_switch_map[r].nsmsfix;\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\n            gfp.msfix = abr_switch_map[r].nsmsfix;\n        // SET_OPTION(msfix, abr_switch_map[r].nsmsfix, -1);\n\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\n        // SET_OPTION(short_threshold_lrm, abr_switch_map[r].st_lrm, -1);\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\n        // SET_OPTION(short_threshold_s, abr_switch_map[r].st_s, -1);\n\n        /*\n         * ABR seems to have big problems with clipping, especially at low\n         * bitrates\n         */\n        /*\n         * so we compensate for that here by using a scale value depending on\n         * bitrate\n         */\n        if (enforce != 0)\n            gfp.scale = abr_switch_map[r].scale;\n        else if (!(Math.abs(gfp.scale - -1) > 0))\n            gfp.scale = abr_switch_map[r].scale;\n        // SET_OPTION(scale, abr_switch_map[r].scale, -1);\n\n        if (enforce != 0)\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\n        // SET_OPTION(maskingadjust, abr_switch_map[r].masking_adj, 0);\n        if (abr_switch_map[r].masking_adj > 0) {\n            if (enforce != 0)\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\n            // .9, 0);\n        } else {\n            if (enforce != 0)\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\n            // 1.1, 0);\n        }\n\n        if (enforce != 0)\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\n        else if (!(Math.abs((-gfp.ATHlower * 10.) - 0) > 0))\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\n        // SET_OPTION(ATHlower, abr_switch_map[r].ath_lower, 0);\n        if (enforce != 0)\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\n        // SET_OPTION(ATHcurve, abr_switch_map[r].ath_curve, -1);\n\n        if (enforce != 0)\n            gfp.interChRatio = abr_switch_map[r].interch;\n        else if (!(Math.abs(gfp.interChRatio - -1) > 0))\n            gfp.interChRatio = abr_switch_map[r].interch;\n        // SET_OPTION(interChRatio, abr_switch_map[r].interch, -1);\n\n        return preset;\n    }\n\n    this.apply_preset = function(gfp, preset, enforce) {\n        /* translate legacy presets */\n        switch (preset) {\n            case Lame.R3MIX:\n            {\n                preset = Lame.V3;\n                gfp.VBR = VbrMode.vbr_mtrh;\n                break;\n            }\n            case Lame.MEDIUM:\n            {\n                preset = Lame.V4;\n                gfp.VBR = VbrMode.vbr_rh;\n                break;\n            }\n            case Lame.MEDIUM_FAST:\n            {\n                preset = Lame.V4;\n                gfp.VBR = VbrMode.vbr_mtrh;\n                break;\n            }\n            case Lame.STANDARD:\n            {\n                preset = Lame.V2;\n                gfp.VBR = VbrMode.vbr_rh;\n                break;\n            }\n            case Lame.STANDARD_FAST:\n            {\n                preset = Lame.V2;\n                gfp.VBR = VbrMode.vbr_mtrh;\n                break;\n            }\n            case Lame.EXTREME:\n            {\n                preset = Lame.V0;\n                gfp.VBR = VbrMode.vbr_rh;\n                break;\n            }\n            case Lame.EXTREME_FAST:\n            {\n                preset = Lame.V0;\n                gfp.VBR = VbrMode.vbr_mtrh;\n                break;\n            }\n            case Lame.INSANE:\n            {\n                preset = 320;\n                gfp.preset = preset;\n                apply_abr_preset(gfp, preset, enforce);\n                gfp.VBR = VbrMode.vbr_off;\n                return preset;\n            }\n        }\n\n        gfp.preset = preset;\n        {\n            switch (preset) {\n                case Lame.V9:\n                    apply_vbr_preset(gfp, 9, enforce);\n                    return preset;\n                case Lame.V8:\n                    apply_vbr_preset(gfp, 8, enforce);\n                    return preset;\n                case Lame.V7:\n                    apply_vbr_preset(gfp, 7, enforce);\n                    return preset;\n                case Lame.V6:\n                    apply_vbr_preset(gfp, 6, enforce);\n                    return preset;\n                case Lame.V5:\n                    apply_vbr_preset(gfp, 5, enforce);\n                    return preset;\n                case Lame.V4:\n                    apply_vbr_preset(gfp, 4, enforce);\n                    return preset;\n                case Lame.V3:\n                    apply_vbr_preset(gfp, 3, enforce);\n                    return preset;\n                case Lame.V2:\n                    apply_vbr_preset(gfp, 2, enforce);\n                    return preset;\n                case Lame.V1:\n                    apply_vbr_preset(gfp, 1, enforce);\n                    return preset;\n                case Lame.V0:\n                    apply_vbr_preset(gfp, 0, enforce);\n                    return preset;\n                default:\n                    break;\n            }\n        }\n        if (8 <= preset && preset <= 320) {\n            return apply_abr_preset(gfp, preset, enforce);\n        }\n\n        /* no corresponding preset found */\n        gfp.preset = 0;\n        return preset;\n    }\n\n    // Rest from getset.c:\n\n    /**\n     * VBR quality level.<BR>\n     * 0 = highest<BR>\n     * 9 = lowest\n     */\n    function lame_set_VBR_q(gfp, VBR_q) {\n        var ret = 0;\n\n        if (0 > VBR_q) {\n            /* Unknown VBR quality level! */\n            ret = -1;\n            VBR_q = 0;\n        }\n        if (9 < VBR_q) {\n            ret = -1;\n            VBR_q = 9;\n        }\n\n        gfp.VBR_q = VBR_q;\n        gfp.VBR_q_frac = 0;\n        return ret;\n    }\n\n}\n\nmodule.exports = Presets;\n","'use strict';\nvar $ = require('../internals/export');\nvar forEach = require('../internals/array-for-each');\n\n// `Array.prototype.forEach` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {\n  forEach: forEach\n});\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar MeanBits = require('./MeanBits.js');\nvar Encoder = require('./Encoder.js');\nvar L3Side = require('./L3Side.js');\nvar LameInternalFlags = require('./LameInternalFlags.js');\n\nfunction CBRNewIterationLoop(_quantize)  {\n    var quantize = _quantize;\n    this.quantize = quantize;\n\tthis.iteration_loop = function(gfp, pe, ms_ener_ratio, ratio) {\n\t\tvar gfc = gfp.internal_flags;\n        var l3_xmin = new_float(L3Side.SFBMAX);\n\t\tvar xrpow = new_float(576);\n\t\tvar targ_bits = new_int(2);\n\t\tvar mean_bits = 0, max_bits;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tvar mb = new MeanBits(mean_bits);\n\t\tthis.quantize.rv.ResvFrameBegin(gfp, mb);\n\t\tmean_bits = mb.bits;\n\n\t\t/* quantize! */\n\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\n\t\t\t/*\n\t\t\t * calculate needed bits\n\t\t\t */\n\t\t\tmax_bits = this.quantize.qupvt.on_pe(gfp, pe, targ_bits, mean_bits,\n\t\t\t\t\tgr, gr);\n\n\t\t\tif (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\n\t\t\t\tthis.quantize.ms_convert(gfc.l3_side, gr);\n\t\t\t\tthis.quantize.qupvt.reduce_side(targ_bits, ms_ener_ratio[gr],\n\t\t\t\t\t\tmean_bits, max_bits);\n\t\t\t}\n\n\t\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\t\tvar adjust, masking_lower_db;\n\t\t\t\tvar cod_info = l3_side.tt[gr][ch];\n\n\t\t\t\tif (cod_info.block_type != Encoder.SHORT_TYPE) {\n\t\t\t\t\t// NORM, START or STOP type\n\t\t\t\t\tadjust = 0;\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust - adjust;\n\t\t\t\t} else {\n\t\t\t\t\tadjust = 0;\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust_short - adjust;\n\t\t\t\t}\n\t\t\t\tgfc.masking_lower =  Math.pow(10.0,\n\t\t\t\t\t\tmasking_lower_db * 0.1);\n\n\t\t\t\t/*\n\t\t\t\t * init_outer_loop sets up cod_info, scalefac and xrpow\n\t\t\t\t */\n\t\t\t\tthis.quantize.init_outer_loop(gfc, cod_info);\n\t\t\t\tif (this.quantize.init_xrpow(gfc, cod_info, xrpow)) {\n\t\t\t\t\t/*\n\t\t\t\t\t * xr contains energy we will have to encode calculate the\n\t\t\t\t\t * masking abilities find some good quantization in\n\t\t\t\t\t * outer_loop\n\t\t\t\t\t */\n\t\t\t\t\tthis.quantize.qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n\t\t\t\t\t\t\tl3_xmin);\n\t\t\t\t\tthis.quantize.outer_loop(gfp, cod_info, l3_xmin, xrpow, ch,\n\t\t\t\t\t\t\ttarg_bits[ch]);\n\t\t\t\t}\n\n\t\t\t\tthis.quantize.iteration_finish_one(gfc, gr, ch);\n\t\t\t\tassert (cod_info.part2_3_length <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n\t\t\t\tassert (cod_info.part2_3_length <= targ_bits[ch]);\n\t\t\t} /* for ch */\n\t\t} /* for gr */\n\n\t\tthis.quantize.rv.ResvFrameEnd(gfc, mean_bits);\n\t}\n}\nmodule.exports = CBRNewIterationLoop;\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\n/**\n * ENCDELAY The encoder delay.\n *\n * Minimum allowed is MDCTDELAY (see below)\n *\n * The first 96 samples will be attenuated, so using a value less than 96\n * will result in corrupt data for the first 96-ENCDELAY samples.\n *\n * suggested: 576 set to 1160 to sync with FhG.\n */\nEncoder.ENCDELAY = 576;\n/**\n * make sure there is at least one complete frame after the last frame\n * containing real data\n *\n * Using a value of 288 would be sufficient for a a very sophisticated\n * decoder that can decode granule-by-granule instead of frame by frame. But\n * lets not assume this, and assume the decoder will not decode frame N\n * unless it also has data for frame N+1\n */\nEncoder.POSTDELAY = 1152;\n\n/**\n * delay of the MDCT used in mdct.c original ISO routines had a delay of\n * 528! Takehiro's routines:\n */\nEncoder.MDCTDELAY = 48;\nEncoder.FFTOFFSET = (224 + Encoder.MDCTDELAY);\n\n/**\n * Most decoders, including the one we use, have a delay of 528 samples.\n */\nEncoder.DECDELAY = 528;\n\n/**\n * number of subbands\n */\nEncoder.SBLIMIT = 32;\n\n/**\n * parition bands bands\n */\nEncoder.CBANDS = 64;\n\n/**\n * number of critical bands/scale factor bands where masking is computed\n */\nEncoder.SBPSY_l = 21;\nEncoder.SBPSY_s = 12;\n\n/**\n * total number of scalefactor bands encoded\n */\nEncoder.SBMAX_l = 22;\nEncoder.SBMAX_s = 13;\nEncoder.PSFB21 = 6;\nEncoder.PSFB12 = 6;\n\n/**\n * FFT sizes\n */\nEncoder.BLKSIZE = 1024;\nEncoder.HBLKSIZE = (Encoder.BLKSIZE / 2 + 1);\nEncoder.BLKSIZE_s = 256;\nEncoder.HBLKSIZE_s = (Encoder.BLKSIZE_s / 2 + 1);\n\nEncoder.NORM_TYPE = 0;\nEncoder.START_TYPE = 1;\nEncoder.SHORT_TYPE = 2;\nEncoder.STOP_TYPE = 3;\n\n/**\n * <PRE>\n * Mode Extention:\n * When we are in stereo mode, there are 4 possible methods to store these\n * two channels. The stereo modes -m? are using a subset of them.\n *\n *  -ms: MPG_MD_LR_LR\n *  -mj: MPG_MD_LR_LR and MPG_MD_MS_LR\n *  -mf: MPG_MD_MS_LR\n *  -mi: all\n * </PRE>\n */\nEncoder.MPG_MD_LR_LR = 0;\nEncoder.MPG_MD_LR_I = 1;\nEncoder.MPG_MD_MS_LR = 2;\nEncoder.MPG_MD_MS_I = 3;\n\nEncoder.fircoef = [-0.0207887 * 5, -0.0378413 * 5,\n    -0.0432472 * 5, -0.031183 * 5, 7.79609e-18 * 5, 0.0467745 * 5,\n    0.10091 * 5, 0.151365 * 5, 0.187098 * 5];\n\nfunction Encoder() {\n    var NewMDCT = require('./NewMDCT.js');\n    var III_psy_ratio = require('./III_psy_ratio.js');\n\n    var FFTOFFSET = Encoder.FFTOFFSET;\n    var MPG_MD_MS_LR = Encoder.MPG_MD_MS_LR;\n    //BitStream bs;\n    //PsyModel psy;\n    //VBRTag vbr;\n    //QuantizePVT qupvt;\n    var bs = null;\n    this.psy = null;\n    var psy = null;\n    var vbr = null;\n    var qupvt = null;\n\n    //public final void setModules(BitStream bs, PsyModel psy, QuantizePVT qupvt,\n    //    VBRTag vbr) {\n    this.setModules = function (_bs, _psy, _qupvt, _vbr) {\n        bs = _bs;\n        this.psy = _psy;\n        psy = _psy;\n        vbr = _vbr;\n        qupvt = _qupvt;\n    };\n\n    var newMDCT = new NewMDCT();\n\n    /***********************************************************************\n     *\n     * encoder and decoder delays\n     *\n     ***********************************************************************/\n\n    /**\n     * <PRE>\n     * layer III enc->dec delay:  1056 (1057?)   (observed)\n     * layer  II enc->dec delay:   480  (481?)   (observed)\n     *\n     * polyphase 256-16             (dec or enc)        = 240\n     * mdct      256+32  (9*32)     (dec or enc)        = 288\n     * total:    512+16\n     *\n     * My guess is that delay of polyphase filterbank is actualy 240.5\n     * (there are technical reasons for this, see postings in mp3encoder).\n     * So total Encode+Decode delay = ENCDELAY + 528 + 1\n     * </PRE>\n     */\n\n\n    /**\n     * auto-adjust of ATH, useful for low volume Gabriel Bouvigne 3 feb 2001\n     *\n     * modifies some values in gfp.internal_flags.ATH (gfc.ATH)\n     */\n//private void adjust_ATH(final LameInternalFlags gfc) {\n    function adjust_ATH(gfc) {\n        var gr2_max, max_pow;\n\n        if (gfc.ATH.useAdjust == 0) {\n            gfc.ATH.adjust = 1.0;\n            /* no adjustment */\n            return;\n        }\n\n        /* jd - 2001 mar 12, 27, jun 30 */\n        /* loudness based on equal loudness curve; */\n        /* use granule with maximum combined loudness */\n        max_pow = gfc.loudness_sq[0][0];\n        gr2_max = gfc.loudness_sq[1][0];\n        if (gfc.channels_out == 2) {\n            max_pow += gfc.loudness_sq[0][1];\n            gr2_max += gfc.loudness_sq[1][1];\n        } else {\n            max_pow += max_pow;\n            gr2_max += gr2_max;\n        }\n        if (gfc.mode_gr == 2) {\n            max_pow = Math.max(max_pow, gr2_max);\n        }\n        max_pow *= 0.5;\n        /* max_pow approaches 1.0 for full band noise */\n\n        /* jd - 2001 mar 31, jun 30 */\n        /* user tuning of ATH adjustment region */\n        max_pow *= gfc.ATH.aaSensitivityP;\n\n        /*\n         * adjust ATH depending on range of maximum value\n         */\n\n        /* jd - 2001 feb27, mar12,20, jun30, jul22 */\n        /* continuous curves based on approximation */\n        /* to GB's original values. */\n        /* For an increase in approximate loudness, */\n        /* set ATH adjust to adjust_limit immediately */\n        /* after a delay of one frame. */\n        /* For a loudness decrease, reduce ATH adjust */\n        /* towards adjust_limit gradually. */\n        /* max_pow is a loudness squared or a power. */\n        if (max_pow > 0.03125) { /* ((1 - 0.000625)/ 31.98) from curve below */\n            if (gfc.ATH.adjust >= 1.0) {\n                gfc.ATH.adjust = 1.0;\n            } else {\n                /* preceding frame has lower ATH adjust; */\n                /* ascend only to the preceding adjust_limit */\n                /* in case there is leading low volume */\n                if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\n                    gfc.ATH.adjust = gfc.ATH.adjustLimit;\n                }\n            }\n            gfc.ATH.adjustLimit = 1.0;\n        } else { /* adjustment curve */\n            /* about 32 dB maximum adjust (0.000625) */\n            var adj_lim_new = 31.98 * max_pow + 0.000625;\n            if (gfc.ATH.adjust >= adj_lim_new) { /* descend gradually */\n                gfc.ATH.adjust *= adj_lim_new * 0.075 + 0.925;\n                if (gfc.ATH.adjust < adj_lim_new) { /* stop descent */\n                    gfc.ATH.adjust = adj_lim_new;\n                }\n            } else { /* ascend */\n                if (gfc.ATH.adjustLimit >= adj_lim_new) {\n                    gfc.ATH.adjust = adj_lim_new;\n                } else {\n                    /* preceding frame has lower ATH adjust; */\n                    /* ascend only to the preceding adjust_limit */\n                    if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\n                        gfc.ATH.adjust = gfc.ATH.adjustLimit;\n                    }\n                }\n            }\n            gfc.ATH.adjustLimit = adj_lim_new;\n        }\n    }\n\n    /**\n     * <PRE>\n     *  some simple statistics\n     *\n     *  bitrate index 0: free bitrate . not allowed in VBR mode\n     *  : bitrates, kbps depending on MPEG version\n     *  bitrate index 15: forbidden\n     *\n     *  mode_ext:\n     *  0:  LR\n     *  1:  LR-i\n     *  2:  MS\n     *  3:  MS-i\n     * </PRE>\n     */\n    function updateStats(gfc) {\n        var gr, ch;\n        assert(0 <= gfc.bitrate_index && gfc.bitrate_index < 16);\n        assert(0 <= gfc.mode_ext && gfc.mode_ext < 4);\n\n        /* count bitrate indices */\n        gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][4]++;\n        gfc.bitrate_stereoMode_Hist[15][4]++;\n\n        /* count 'em for every mode extension in case of 2 channel encoding */\n        if (gfc.channels_out == 2) {\n            gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][gfc.mode_ext]++;\n            gfc.bitrate_stereoMode_Hist[15][gfc.mode_ext]++;\n        }\n        for (gr = 0; gr < gfc.mode_gr; ++gr) {\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                var bt = gfc.l3_side.tt[gr][ch].block_type | 0;\n                if (gfc.l3_side.tt[gr][ch].mixed_block_flag != 0)\n                    bt = 4;\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][bt]++;\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][5]++;\n                gfc.bitrate_blockType_Hist[15][bt]++;\n                gfc.bitrate_blockType_Hist[15][5]++;\n            }\n        }\n    }\n\n    function lame_encode_frame_init(gfp, inbuf) {\n        var gfc = gfp.internal_flags;\n\n        var ch, gr;\n\n        if (gfc.lame_encode_frame_init == 0) {\n            /* prime the MDCT/polyphase filterbank with a short block */\n            var i, j;\n            var primebuff0 = new_float(286 + 1152 + 576);\n            var primebuff1 = new_float(286 + 1152 + 576);\n            gfc.lame_encode_frame_init = 1;\n            for (i = 0, j = 0; i < 286 + 576 * (1 + gfc.mode_gr); ++i) {\n                if (i < 576 * gfc.mode_gr) {\n                    primebuff0[i] = 0;\n                    if (gfc.channels_out == 2)\n                        primebuff1[i] = 0;\n                } else {\n                    primebuff0[i] = inbuf[0][j];\n                    if (gfc.channels_out == 2)\n                        primebuff1[i] = inbuf[1][j];\n                    ++j;\n                }\n            }\n            /* polyphase filtering / mdct */\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder.SHORT_TYPE;\n                }\n            }\n            newMDCT.mdct_sub48(gfc, primebuff0, primebuff1);\n\n            /* check FFT will not use a negative starting offset */\n            assert(576 >= Encoder.FFTOFFSET);\n            /* check if we have enough data for FFT */\n            assert(gfc.mf_size >= (Encoder.BLKSIZE + gfp.framesize - Encoder.FFTOFFSET));\n            /* check if we have enough data for polyphase filterbank */\n            assert(gfc.mf_size >= (512 + gfp.framesize - 32));\n        }\n\n    }\n\n    /**\n     * <PRE>\n     * encodeframe()           Layer 3\n     *\n     * encode a single frame\n     *\n     *\n     *    lame_encode_frame()\n     *\n     *\n     *                           gr 0            gr 1\n     *    inbuf:           |--------------|--------------|--------------|\n     *\n     *\n     *    Polyphase (18 windows, each shifted 32)\n     *    gr 0:\n     *    window1          <----512---.\n     *    window18                 <----512---.\n     *\n     *    gr 1:\n     *    window1                         <----512---.\n     *    window18                                <----512---.\n     *\n     *\n     *\n     *    MDCT output:  |--------------|--------------|--------------|\n     *\n     *    FFT's                    <---------1024---------.\n     *                                             <---------1024-------.\n     *\n     *\n     *\n     *        inbuf = buffer of PCM data size=MP3 framesize\n     *        encoder acts on inbuf[ch][0], but output is delayed by MDCTDELAY\n     *        so the MDCT coefficints are from inbuf[ch][-MDCTDELAY]\n     *\n     *        psy-model FFT has a 1 granule delay, so we feed it data for the\n     *        next granule.\n     *        FFT is centered over granule:  224+576+224\n     *        So FFT starts at:   576-224-MDCTDELAY\n     *\n     *        MPEG2:  FFT ends at:  BLKSIZE+576-224-MDCTDELAY      (1328)\n     *        MPEG1:  FFT ends at:  BLKSIZE+2*576-224-MDCTDELAY    (1904)\n     *\n     *        MPEG2:  polyphase first window:  [0..511]\n     *                          18th window:   [544..1055]          (1056)\n     *        MPEG1:            36th window:   [1120..1631]         (1632)\n     *                data needed:  512+framesize-32\n     *\n     *        A close look newmdct.c shows that the polyphase filterbank\n     *        only uses data from [0..510] for each window.  Perhaps because the window\n     *        used by the filterbank is zero for the last point, so Takehiro's\n     *        code doesn't bother to compute with it.\n     *\n     *        FFT starts at 576-224-MDCTDELAY (304)  = 576-FFTOFFSET\n     *\n     * </PRE>\n     */\n\n\n    this.lame_encode_mp3_frame = function (gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\n        var mp3count;\n        var masking_LR = new_array_n([2, 2]);\n        /*\n         * LR masking &\n         * energy\n         */\n        masking_LR[0][0] = new III_psy_ratio();\n        masking_LR[0][1] = new III_psy_ratio();\n        masking_LR[1][0] = new III_psy_ratio();\n        masking_LR[1][1] = new III_psy_ratio();\n        var masking_MS = new_array_n([2, 2]);\n        /* MS masking & energy */\n        masking_MS[0][0] = new III_psy_ratio();\n        masking_MS[0][1] = new III_psy_ratio();\n        masking_MS[1][0] = new III_psy_ratio();\n        masking_MS[1][1] = new III_psy_ratio();\n        //III_psy_ratio masking[][];\n        var masking;\n        /* pointer to selected maskings */\n        var inbuf = [null, null];\n        var gfc = gfp.internal_flags;\n\n        var tot_ener = new_float_n([2, 4]);\n        var ms_ener_ratio = [.5, .5];\n        var pe = [[0., 0.], [0., 0.]];\n        var pe_MS = [[0., 0.], [0., 0.]];\n\n//float[][] pe_use;\n        var pe_use;\n\n        var ch, gr;\n\n        inbuf[0] = inbuf_l;\n        inbuf[1] = inbuf_r;\n\n        if (gfc.lame_encode_frame_init == 0) {\n            /* first run? */\n            lame_encode_frame_init(gfp, inbuf);\n\n        }\n\n        /********************** padding *****************************/\n        /**\n         * <PRE>\n         * padding method as described in\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\"\n         * by Martin Sieler, Ralph Sperschneider\n         *\n         * note: there is no padding for the very first frame\n         *\n         * Robert Hegemann 2000-06-22\n         * </PRE>\n         */\n        gfc.padding = 0;\n        if ((gfc.slot_lag -= gfc.frac_SpF) < 0) {\n            gfc.slot_lag += gfp.out_samplerate;\n            gfc.padding = 1;\n        }\n\n        /****************************************\n         * Stage 1: psychoacoustic model *\n         ****************************************/\n\n        if (gfc.psymodel != 0) {\n            /*\n             * psychoacoustic model psy model has a 1 granule (576) delay that\n             * we must compensate for (mt 6/99).\n             */\n            var ret;\n            var bufp = [null, null];\n            /* address of beginning of left & right granule */\n            var bufpPos = 0;\n            /* address of beginning of left & right granule */\n            var blocktype = new_int(2);\n\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    bufp[ch] = inbuf[ch];\n                    bufpPos = 576 + gr * 576 - Encoder.FFTOFFSET;\n                }\n                if (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) {\n                    ret = psy.L3psycho_anal_vbr(gfp, bufp, bufpPos, gr,\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\n                        tot_ener[gr], blocktype);\n                } else {\n                    ret = psy.L3psycho_anal_ns(gfp, bufp, bufpPos, gr,\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\n                        tot_ener[gr], blocktype);\n                }\n                if (ret != 0)\n                    return -4;\n\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                    ms_ener_ratio[gr] = tot_ener[gr][2] + tot_ener[gr][3];\n                    if (ms_ener_ratio[gr] > 0)\n                        ms_ener_ratio[gr] = tot_ener[gr][3] / ms_ener_ratio[gr];\n                }\n\n                /* block type flags */\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var cod_info = gfc.l3_side.tt[gr][ch];\n                    cod_info.block_type = blocktype[ch];\n                    cod_info.mixed_block_flag = 0;\n                }\n            }\n        } else {\n            /* no psy model */\n            for (gr = 0; gr < gfc.mode_gr; gr++)\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder.NORM_TYPE;\n                    gfc.l3_side.tt[gr][ch].mixed_block_flag = 0;\n                    pe_MS[gr][ch] = pe[gr][ch] = 700;\n                }\n        }\n\n        /* auto-adjust of ATH, useful for low volume */\n        adjust_ATH(gfc);\n\n        /****************************************\n         * Stage 2: MDCT *\n         ****************************************/\n\n        /* polyphase filtering / mdct */\n        newMDCT.mdct_sub48(gfc, inbuf[0], inbuf[1]);\n\n        /****************************************\n         * Stage 3: MS/LR decision *\n         ****************************************/\n\n        /* Here will be selected MS or LR coding of the 2 stereo channels */\n        gfc.mode_ext = Encoder.MPG_MD_LR_LR;\n\n        if (gfp.force_ms) {\n            gfc.mode_ext = Encoder.MPG_MD_MS_LR;\n        } else if (gfp.mode == MPEGMode.JOINT_STEREO) {\n            /*\n             * ms_ratio = is scaled, for historical reasons, to look like a\n             * ratio of side_channel / total. 0 = signal is 100% mono .5 = L & R\n             * uncorrelated\n             */\n\n            /**\n             * <PRE>\n             * [0] and [1] are the results for the two granules in MPEG-1,\n             * in MPEG-2 it's only a faked averaging of the same value\n             * _prev is the value of the last granule of the previous frame\n             * _next is the value of the first granule of the next frame\n             * </PRE>\n             */\n\n            var sum_pe_MS = 0.;\n            var sum_pe_LR = 0.;\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    sum_pe_MS += pe_MS[gr][ch];\n                    sum_pe_LR += pe[gr][ch];\n                }\n            }\n\n            /* based on PE: M/S coding would not use much more bits than L/R */\n            if (sum_pe_MS <= 1.00 * sum_pe_LR) {\n\n                var gi0 = gfc.l3_side.tt[0];\n                var gi1 = gfc.l3_side.tt[gfc.mode_gr - 1];\n\n                if (gi0[0].block_type == gi0[1].block_type\n                    && gi1[0].block_type == gi1[1].block_type) {\n\n                    gfc.mode_ext = Encoder.MPG_MD_MS_LR;\n                }\n            }\n        }\n\n        /* bit and noise allocation */\n        if (gfc.mode_ext == MPG_MD_MS_LR) {\n            masking = masking_MS;\n            /* use MS masking */\n            pe_use = pe_MS;\n        } else {\n            masking = masking_LR;\n            /* use LR masking */\n            pe_use = pe;\n        }\n\n        /* copy data for MP3 frame analyzer */\n        if (gfp.analysis && gfc.pinfo != null) {\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.pinfo.ms_ratio[gr] = gfc.ms_ratio[gr];\n                    gfc.pinfo.ms_ener_ratio[gr] = ms_ener_ratio[gr];\n                    gfc.pinfo.blocktype[gr][ch] = gfc.l3_side.tt[gr][ch].block_type;\n                    gfc.pinfo.pe[gr][ch] = pe_use[gr][ch];\n                    System.arraycopy(gfc.l3_side.tt[gr][ch].xr, 0,\n                        gfc.pinfo.xr[gr][ch], 0, 576);\n                    /*\n                     * in psymodel, LR and MS data was stored in pinfo. switch\n                     * to MS data:\n                     */\n                    if (gfc.mode_ext == MPG_MD_MS_LR) {\n                        gfc.pinfo.ers[gr][ch] = gfc.pinfo.ers[gr][ch + 2];\n                        System.arraycopy(gfc.pinfo.energy[gr][ch + 2], 0,\n                            gfc.pinfo.energy[gr][ch], 0,\n                            gfc.pinfo.energy[gr][ch].length);\n                    }\n                }\n            }\n        }\n\n        /****************************************\n         * Stage 4: quantization loop *\n         ****************************************/\n\n        if (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_abr) {\n\n            var i;\n            var f;\n\n            for (i = 0; i < 18; i++)\n                gfc.nsPsy.pefirbuf[i] = gfc.nsPsy.pefirbuf[i + 1];\n\n            f = 0.0;\n            for (gr = 0; gr < gfc.mode_gr; gr++)\n                for (ch = 0; ch < gfc.channels_out; ch++)\n                    f += pe_use[gr][ch];\n            gfc.nsPsy.pefirbuf[18] = f;\n\n            f = gfc.nsPsy.pefirbuf[9];\n            for (i = 0; i < 9; i++)\n                f += (gfc.nsPsy.pefirbuf[i] + gfc.nsPsy.pefirbuf[18 - i])\n                    * Encoder.fircoef[i];\n\n            f = (670 * 5 * gfc.mode_gr * gfc.channels_out) / f;\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    pe_use[gr][ch] *= f;\n                }\n            }\n        }\n        gfc.iteration_loop.iteration_loop(gfp, pe_use, ms_ener_ratio, masking);\n\n        /****************************************\n         * Stage 5: bitstream formatting *\n         ****************************************/\n\n        /* write the frame to the bitstream */\n        bs.format_bitstream(gfp);\n\n        /* copy mp3 bit buffer into array */\n        mp3count = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 1);\n\n        if (gfp.bWriteVbrTag)\n            vbr.addVbrFrame(gfp);\n\n        if (gfp.analysis && gfc.pinfo != null) {\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var j;\n                for (j = 0; j < FFTOFFSET; j++)\n                    gfc.pinfo.pcmdata[ch][j] = gfc.pinfo.pcmdata[ch][j\n                    + gfp.framesize];\n                for (j = FFTOFFSET; j < 1600; j++) {\n                    gfc.pinfo.pcmdata[ch][j] = inbuf[ch][j - FFTOFFSET];\n                }\n            }\n            qupvt.set_frame_pinfo(gfp, masking);\n        }\n\n        updateStats(gfc);\n\n        return mp3count;\n    }\n}\n\n\nmodule.exports = Encoder;\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n// Edge 14- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var $ = require('../internals/export');\nvar $entries = require('../internals/object-to-array').entries;\n\n// `Object.entries` method\n// https://tc39.github.io/ecma262/#sec-object.entries\n$({ target: 'Object', stat: true }, {\n  entries: function entries(O) {\n    return $entries(O);\n  }\n});\n","/* interact.js 1.9.10 | https://raw.github.com/taye/interact.js/master/LICENSE */\n!function(t){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).interact=t()}}(function(){function t(e){var n;return function(t){return n||e(n={exports:{},parent:t},n.exports),n.exports}}var k=t(function(t,e){\"use strict\";function a(t){return(a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(e,\"__esModule\",{value:!0}),e.default=e.Interactable=void 0;var i=r(ot),c=m({}),u=n(z),l=r(_t),s=r(We),f=r(K),p=n(w),d=r(Z);function v(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return v=function(){return t},t}function n(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==a(t)&&\"function\"!=typeof t)return{default:t};var e=v();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}return n.default=t,e&&e.set(t,n),n}function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function y(t,e,n){return e&&o(t.prototype,e),n&&o(t,n),t}function h(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var g=function(){function o(t,e,n,r){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,o),h(this,\"options\",void 0),h(this,\"_actions\",void 0),h(this,\"target\",void 0),h(this,\"events\",new i.default),h(this,\"_context\",void 0),h(this,\"_win\",void 0),h(this,\"_doc\",void 0),h(this,\"_scopeEvents\",void 0),this._actions=e.actions,this.target=t,this._context=e.context||n,this._win=(0,O.getWindow)((0,Dt.trySelector)(t)?this._context:t),this._doc=this._win.document,this._scopeEvents=r,this.set(e)}return y(o,[{key:\"_defaults\",get:function(){return{base:{},perAction:{},actions:{}}}}]),y(o,[{key:\"setOnEvents\",value:function(t,e){return p.func(e.onstart)&&this.on(\"\".concat(t,\"start\"),e.onstart),p.func(e.onmove)&&this.on(\"\".concat(t,\"move\"),e.onmove),p.func(e.onend)&&this.on(\"\".concat(t,\"end\"),e.onend),p.func(e.oninertiastart)&&this.on(\"\".concat(t,\"inertiastart\"),e.oninertiastart),this}},{key:\"updatePerActionListeners\",value:function(t,e,n){(p.array(e)||p.object(e))&&this.off(t,e),(p.array(n)||p.object(n))&&this.on(t,n)}},{key:\"setPerAction\",value:function(t,e){var n=this._defaults;for(var r in e){var o=r,i=this.options[t],a=e[o];\"listeners\"===o&&this.updatePerActionListeners(t,i.listeners,a),p.array(a)?i[o]=u.from(a):p.plainObject(a)?(i[o]=(0,f.default)(i[o]||{},(0,s.default)(a)),p.object(n.perAction[o])&&\"enabled\"in n.perAction[o]&&(i[o].enabled=!1!==a.enabled)):p.bool(a)&&p.object(n.perAction[o])?i[o].enabled=a:i[o]=a}}},{key:\"getRect\",value:function(t){return t=t||(p.element(this.target)?this.target:null),p.string(this.target)&&(t=t||this._context.querySelector(this.target)),(0,Dt.getElementRect)(t)}},{key:\"rectChecker\",value:function(t){return p.func(t)?(this.getRect=t,this):null===t?(delete this.getRect,this):this.getRect}},{key:\"_backCompatOption\",value:function(t,e){if((0,Dt.trySelector)(e)||p.object(e)){for(var n in this.options[t]=e,this._actions.map)this.options[n][t]=e;return this}return this.options[t]}},{key:\"origin\",value:function(t){return this._backCompatOption(\"origin\",t)}},{key:\"deltaSource\",value:function(t){return\"page\"===t||\"client\"===t?(this.options.deltaSource=t,this):this.options.deltaSource}},{key:\"context\",value:function(){return this._context}},{key:\"inContext\",value:function(t){return this._context===t.ownerDocument||(0,Dt.nodeContains)(this._context,t)}},{key:\"testIgnoreAllow\",value:function(t,e,n){return!this.testIgnore(t.ignoreFrom,e,n)&&this.testAllow(t.allowFrom,e,n)}},{key:\"testAllow\",value:function(t,e,n){return!t||!!p.element(n)&&(p.string(t)?(0,Dt.matchesUpTo)(n,t,e):!!p.element(t)&&(0,Dt.nodeContains)(t,n))}},{key:\"testIgnore\",value:function(t,e,n){return!(!t||!p.element(n))&&(p.string(t)?(0,Dt.matchesUpTo)(n,t,e):!!p.element(t)&&(0,Dt.nodeContains)(t,n))}},{key:\"fire\",value:function(t){return this.events.fire(t),this}},{key:\"_onOff\",value:function(t,e,n,r){p.object(e)&&!p.array(e)&&(r=n,n=null);var o=\"on\"===t?\"add\":\"remove\",i=(0,d.default)(e,n);for(var a in i){\"wheel\"===a&&(a=l.default.wheelEvent);for(var u=0;u<i[a].length;u++){var s=i[a][u];(0,c.isNonNativeEvent)(a,this._actions)?this.events[t](a,s):p.string(this.target)?this._scopeEvents[\"\".concat(o,\"Delegate\")](this.target,this._context,a,s,r):this._scopeEvents[o](this.target,a,s,r)}}return this}},{key:\"on\",value:function(t,e,n){return this._onOff(\"on\",t,e,n)}},{key:\"off\",value:function(t,e,n){return this._onOff(\"off\",t,e,n)}},{key:\"set\",value:function(t){var e=this._defaults;for(var n in p.object(t)||(t={}),this.options=(0,s.default)(e.base),this._actions.methodDict){var r=n,o=this._actions.methodDict[r];this.options[r]={},this.setPerAction(r,(0,f.default)((0,f.default)({},e.perAction),e.actions[r])),this[o](t[r])}for(var i in t)p.func(this[i])&&this[i](t[i]);return this}},{key:\"unset\",value:function(){if(p.string(this.target))for(var t in this._scopeEvents.delegatedEvents)for(var e=this._scopeEvents.delegatedEvents[t],n=e.length-1;0<=n;n--){var r=e[n],o=r.selector,i=r.context,a=r.listeners;o===this.target&&i===this._context&&e.splice(n,1);for(var u=a.length-1;0<=u;u--)this._scopeEvents.removeDelegate(this.target,this._context,t,a[u][0],a[u][1])}else this._scopeEvents.remove(this.target,\"all\")}}]),o}(),b=e.Interactable=g;e.default=b}),m=t(function(t,e){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.isNonNativeEvent=function(t,e){if(e.phaselessTypes[t])return!0;for(var n in e.map)if(0===t.indexOf(n)&&t.substr(n.length)in e.phases)return!0;return!1},e.initScope=M,e.Scope=e.default=void 0;var r=d(ot),o=d(ee),i=d(T({})),a=d(k({})),u=d(dn),s=d(yt),n=d(Sn),c=d(E({})),l=d(bt),f=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==v(t)&&\"function\"!=typeof t)return{default:t};var e=p();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}($e);function p(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return p=function(){return t},t}function d(t){return t&&t.__esModule?t:{default:t}}function v(t){return(v=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function y(t,e,n){return(y=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=b(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function h(t,e){return(h=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function g(i){return function(){var t,e,n,r=b(i);if(function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return;if(Reflect.construct.sham)return;if(\"function\"==typeof Proxy)return 1;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),1}catch(t){return}}()){var o=b(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return e=this,!(n=t)||\"object\"!==v(n)&&\"function\"!=typeof n?function(t){if(void 0!==t)return t;throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\")}(e):n}}function b(t){return(b=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function m(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function O(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function w(t,e,n){return e&&O(t.prototype,e),n&&O(t,n),t}function _(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var P=f.win,x=f.browser,S=f.raf,j=function(){function t(){var e=this;m(this,t),_(this,\"id\",\"__interact_scope_\".concat(Math.floor(100*Math.random()))),_(this,\"isInitialized\",!1),_(this,\"listenerMaps\",[]),_(this,\"browser\",x),_(this,\"utils\",f),_(this,\"defaults\",f.clone(s.default)),_(this,\"Eventable\",r.default),_(this,\"actions\",{map:{},phases:{start:!0,move:!0,end:!0},methodDict:{},phaselessTypes:{}}),_(this,\"interactStatic\",new i.default(this)),_(this,\"InteractEvent\",o.default),_(this,\"Interactable\",void 0),_(this,\"interactables\",new u.default(this)),_(this,\"_win\",void 0),_(this,\"document\",void 0),_(this,\"window\",void 0),_(this,\"documents\",[]),_(this,\"_plugins\",{list:[],map:{}}),_(this,\"onWindowUnload\",function(t){return e.removeDocument(t.target)});var n=this;this.Interactable=function(){!function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&h(t,e)}(e,a[\"default\"]);var t=g(e);function e(){return m(this,e),t.apply(this,arguments)}return w(e,[{key:\"set\",value:function(t){return y(b(e.prototype),\"set\",this).call(this,t),n.fire(\"interactable:set\",{options:t,interactable:this}),this}},{key:\"unset\",value:function(){y(b(e.prototype),\"unset\",this).call(this),n.interactables.list.splice(n.interactables.list.indexOf(this),1),n.fire(\"interactable:unset\",{interactable:this})}},{key:\"_defaults\",get:function(){return n.defaults}}]),e}()}return w(t,[{key:\"addListeners\",value:function(t,e){this.listenerMaps.push({id:e,map:t})}},{key:\"fire\",value:function(t,e){for(var n=0;n<this.listenerMaps.length;n++){var r=this.listenerMaps[n].map[t];if(r&&!1===r(e,this,t))return!1}}},{key:\"init\",value:function(t){return this.isInitialized?this:M(this,t)}},{key:\"pluginIsInstalled\",value:function(t){return this._plugins.map[t.id]||-1!==this._plugins.list.indexOf(t)}},{key:\"usePlugin\",value:function(t,e){if(!this.isInitialized)return this;if(this.pluginIsInstalled(t))return this;if(t.id&&(this._plugins.map[t.id]=t),this._plugins.list.push(t),t.install&&t.install(this,e),t.listeners&&t.before){for(var n=0,r=this.listenerMaps.length,o=t.before.reduce(function(t,e){return t[e]=!0,t},{});n<r;n++){if(o[this.listenerMaps[n].id])break}this.listenerMaps.splice(n,0,{id:t.id,map:t.listeners})}else t.listeners&&this.listenerMaps.push({id:t.id,map:t.listeners});return this}},{key:\"addDocument\",value:function(t,e){if(-1!==this.getDocIndex(t))return!1;var n=P.getWindow(t);e=e?f.extend({},e):{},this.documents.push({doc:t,options:e}),this.events.documents.push(t),t!==this.document&&this.events.add(n,\"unload\",this.onWindowUnload),this.fire(\"scope:add-document\",{doc:t,window:n,scope:this,options:e})}},{key:\"removeDocument\",value:function(t){var e=this.getDocIndex(t),n=P.getWindow(t),r=this.documents[e].options;this.events.remove(n,\"unload\",this.onWindowUnload),this.documents.splice(e,1),this.events.documents.splice(e,1),this.fire(\"scope:remove-document\",{doc:t,window:n,scope:this,options:r})}},{key:\"getDocIndex\",value:function(t){for(var e=0;e<this.documents.length;e++)if(this.documents[e].doc===t)return e;return-1}},{key:\"getDocOptions\",value:function(t){var e=this.getDocIndex(t);return-1===e?null:this.documents[e].options}},{key:\"now\",value:function(){return(this.window.Date||Date).now()}}]),t}();function M(t,e){return t.isInitialized=!0,P.init(e),l.default.init(e),x.init(e),S.init(e),t.window=e,t.document=e.document,t.usePlugin(c.default),t.usePlugin(n.default),t}e.Scope=e.default=j}),E=t(function(t,e){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.default=void 0;var u=n(Gn),s=n(lr),o=n(br),_=(n(m({})),n(_t)),c=n(bt),P=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==l(t)&&\"function\"!=typeof t)return{default:t};var e=a();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}(Oe);function a(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return a=function(){return t},t}function n(t){return t&&t.__esModule?t:{default:t}}function l(t){return(l=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function x(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(\"undefined\"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,u=t[Symbol.iterator]();!(r=(a=u.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==u.return||u.return()}finally{if(o)throw i}}return n}(t,e)||function(t,e){if(!t)return;if(\"string\"==typeof t)return r(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(t,e)}(t,e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function r(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function f(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function p(t,e){return(p=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function d(i){return function(){var t,e,n,r=v(i);if(function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return;if(Reflect.construct.sham)return;if(\"function\"==typeof Proxy)return 1;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),1}catch(t){return}}()){var o=v(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return e=this,!(n=t)||\"object\"!==l(n)&&\"function\"!=typeof n?function(t){if(void 0!==t)return t;throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\")}(e):n}}function v(t){return(v=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var y=[\"pointerDown\",\"pointerMove\",\"pointerUp\",\"updatePointer\",\"removePointer\",\"windowBlur\"];function h(O,w){return function(t){var e=w.interactions.list,n=P.getPointerType(t),r=x(P.getEventTargets(t),2),o=r[0],i=r[1],a=[];if(/^touch/.test(t.type)){w.prevTouchTime=w.now();for(var u=0;u<t.changedTouches.length;u++){s=t.changedTouches[u];var s,c={pointer:s,pointerId:P.getPointerId(s),pointerType:n,eventType:t.type,eventTarget:o,curEventTarget:i,scope:w},l=S(c);a.push([c.pointer,c.eventTarget,c.curEventTarget,l])}}else{var f=!1;if(!_.default.supportsPointerEvent&&/mouse/.test(t.type)){for(var p=0;p<e.length&&!f;p++)f=\"mouse\"!==e[p].pointerType&&e[p].pointerIsDown;f=f||w.now()-w.prevTouchTime<500||0===t.timeStamp}if(!f){var d={pointer:t,pointerId:P.getPointerId(t),pointerType:n,eventType:t.type,curEventTarget:i,eventTarget:o,scope:w},v=S(d);a.push([d.pointer,d.eventTarget,d.curEventTarget,v])}}for(var y=0;y<a.length;y++){var h=x(a[y],4),g=h[0],b=h[1],m=h[2];h[3][O](g,t,b,m)}}}function S(t){var e=t.pointerType,n=t.scope,r={interaction:o.default.search(t),searchDetails:t};return n.fire(\"interactions:find\",r),r.interaction||n.interactions.new({pointerType:e})}function i(t,e){var n=t.doc,r=t.scope,o=t.options,i=r.interactions.docEvents,a=r.events,u=a[e];for(var s in r.browser.isIOS&&!o.events&&(o.events={passive:!1}),a.delegatedEvents)u(n,s,a.delegateListener),u(n,s,a.delegateUseCapture,!0);for(var c=o&&o.events,l=0;l<i.length;l++){var f;f=i[l];u(n,f.type,f.listener,c)}}var g={id:\"core/interactions\",install:function(i){for(var t={},e=0;e<y.length;e++){var n;n=y[e];t[n]=h(n,i)}var r,o=_.default.pEventTypes;function a(){for(var t=0;t<i.interactions.list.length;t++){var e=i.interactions.list[t];if(e.pointerIsDown&&\"touch\"===e.pointerType&&!e._interacting)for(var n=function(){var n=e.pointers[r];i.documents.some(function(t){var e=t.doc;return(0,Dt.nodeContains)(e,n.downTarget)})||e.removePointer(n.pointer,n.event)},r=0;r<e.pointers.length;r++){n()}}}(r=c.default.PointerEvent?[{type:o.down,listener:a},{type:o.down,listener:t.pointerDown},{type:o.move,listener:t.pointerMove},{type:o.up,listener:t.pointerUp},{type:o.cancel,listener:t.pointerUp}]:[{type:\"mousedown\",listener:t.pointerDown},{type:\"mousemove\",listener:t.pointerMove},{type:\"mouseup\",listener:t.pointerUp},{type:\"touchstart\",listener:a},{type:\"touchstart\",listener:t.pointerDown},{type:\"touchmove\",listener:t.pointerMove},{type:\"touchend\",listener:t.pointerUp},{type:\"touchcancel\",listener:t.pointerUp}]).push({type:\"blur\",listener:function(t){for(var e=0;e<i.interactions.list.length;e++){i.interactions.list[e].documentBlur(t)}}}),i.prevTouchTime=0,i.Interaction=function(){!function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&p(t,e)}(o,u[\"default\"]);var t,e,n,r=d(o);function o(){return function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,o),r.apply(this,arguments)}return t=o,(e=[{key:\"_now\",value:function(){return i.now()}},{key:\"pointerMoveTolerance\",get:function(){return i.interactions.pointerMoveTolerance},set:function(t){i.interactions.pointerMoveTolerance=t}}])&&f(t.prototype,e),n&&f(t,n),o}(),i.interactions={list:[],new:function(t){t.scopeFire=function(t,e){return i.fire(t,e)};var e=new i.Interaction(t);return i.interactions.list.push(e),e},listeners:t,docEvents:r,pointerMoveTolerance:1},i.usePlugin(s.default)},listeners:{\"scope:add-document\":function(t){return i(t,\"add\")},\"scope:remove-document\":function(t){return i(t,\"remove\")},\"interactable:unset\":function(t,e){for(var n=t.interactable,r=e.interactions.list.length-1;0<=r;r--){var o=e.interactions.list[r];o.interactable===n&&(o.stop(),e.fire(\"interactions:destroy\",{interaction:o}),o.destroy(),2<e.interactions.list.length&&e.interactions.list.splice(r,1))}}},onDocSignal:i,doOnInteractions:h,methodNames:y};e.default=g}),T=t(function(t,e){\"use strict\";function a(t){return(a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(e,\"__esModule\",{value:!0}),e.default=e.InteractStatic=void 0;var n,u=m({}),r=(n=_t)&&n.__esModule?n:{default:n},s=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==a(t)&&\"function\"!=typeof t)return{default:t};var e=c();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}($e);function c(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function o(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var i=function(){function a(r){var o=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,a),l(this,\"getPointerAverage\",s.pointer.pointerAverage),l(this,\"getTouchBBox\",s.pointer.touchBBox),l(this,\"getTouchDistance\",s.pointer.touchDistance),l(this,\"getTouchAngle\",s.pointer.touchAngle),l(this,\"getElementRect\",s.dom.getElementRect),l(this,\"getElementClientRect\",s.dom.getElementClientRect),l(this,\"matchesSelector\",s.dom.matchesSelector),l(this,\"closest\",s.dom.closest),l(this,\"globalEvents\",{}),l(this,\"dynamicDrop\",void 0),l(this,\"version\",\"1.9.10\"),l(this,\"interact\",void 0),l(this,\"scope\",void 0),this.scope=r;for(var t=this.constructor.prototype,e=function(t,e){var n=r.interactables.get(t,e);return n||((n=r.interactables.new(t,e)).events.global=o.globalEvents),n},n=0;n<Object.getOwnPropertyNames(this.constructor.prototype).length;n++){var i;i=Object.getOwnPropertyNames(this.constructor.prototype)[n];e[i]=t[i]}return s.extend(e,this),e.constructor=this.constructor,this.interact=e}var t,e,n;return t=a,(e=[{key:\"use\",value:function(t,e){return this.scope.usePlugin(t,e),this}},{key:\"isSet\",value:function(t,e){return!!this.scope.interactables.get(t,e&&e.context)}},{key:\"on\",value:function(t,e,n){if(s.is.string(t)&&-1!==t.search(\" \")&&(t=t.trim().split(/ +/)),s.is.array(t)){for(var r=0;r<t.length;r++){var o=t[r];this.on(o,e,n)}return this}if(s.is.object(t)){for(var i in t)this.on(i,t[i],e);return this}return(0,u.isNonNativeEvent)(t,this.scope.actions)?this.globalEvents[t]?this.globalEvents[t].push(e):this.globalEvents[t]=[e]:this.scope.events.add(this.scope.document,t,e,{options:n}),this}},{key:\"off\",value:function(t,e,n){if(s.is.string(t)&&-1!==t.search(\" \")&&(t=t.trim().split(/ +/)),s.is.array(t)){for(var r=0;r<t.length;r++){var o=t[r];this.off(o,e,n)}return this}if(s.is.object(t)){for(var i in t)this.off(i,t[i],e);return this}var a;(0,u.isNonNativeEvent)(t,this.scope.actions)?t in this.globalEvents&&-1!==(a=this.globalEvents[t].indexOf(e))&&this.globalEvents[t].splice(a,1):this.scope.events.remove(this.scope.document,t,e,n);return this}},{key:\"debug\",value:function(){return this.scope}},{key:\"supportsTouch\",value:function(){return r.default.supportsTouch}},{key:\"supportsPointerEvent\",value:function(){return r.default.supportsPointerEvent}},{key:\"stop\",value:function(){for(var t=0;t<this.scope.interactions.list.length;t++){this.scope.interactions.list[t].stop()}return this}},{key:\"pointerMoveTolerance\",value:function(t){return s.is.number(t)?(this.scope.interactions.pointerMoveTolerance=t,this):this.scope.interactions.pointerMoveTolerance}},{key:\"addDocument\",value:function(t,e){this.scope.addDocument(t,e)}},{key:\"removeDocument\",value:function(t){this.scope.removeDocument(t)}}])&&o(t.prototype,e),n&&o(t,n),a}(),f=e.InteractStatic=i;e.default=f}),e={};Object.defineProperty(e,\"__esModule\",{value:!0}),e.default=void 0;e.default=function(t){return!(!t||!t.Window)&&t instanceof t.Window};var O={};Object.defineProperty(O,\"__esModule\",{value:!0}),O.init=i,O.getWindow=a,O.default=void 0;var n,r=(n=e)&&n.__esModule?n:{default:n};var o={realWindow:void 0,window:void 0,getWindow:a,init:i};function i(t){var e=(o.realWindow=t).document.createTextNode(\"\");e.ownerDocument!==t.document&&\"function\"==typeof t.wrap&&t.wrap(e)===e&&(t=t.wrap(t)),o.window=t}function a(t){return(0,r.default)(t)?t:(t.ownerDocument||t).defaultView||o.window}\"undefined\"==typeof window?(o.window=void 0,o.realWindow=void 0):i(window),o.init=i;var u=o;O.default=u;var w={};Object.defineProperty(w,\"__esModule\",{value:!0}),w.array=w.plainObject=w.element=w.string=w.bool=w.number=w.func=w.object=w.docFrag=w.window=void 0;var s=l(e),c=l(O);function l(t){return t&&t.__esModule?t:{default:t}}function f(t){return(f=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}w.window=function(t){return t===c.default.window||(0,s.default)(t)};w.docFrag=function(t){return p(t)&&11===t.nodeType};var p=function(t){return!!t&&\"object\"===f(t)};w.object=p;function d(t){return\"function\"==typeof t}w.func=d;w.number=function(t){return\"number\"==typeof t};w.bool=function(t){return\"boolean\"==typeof t};w.string=function(t){return\"string\"==typeof t};w.element=function(t){if(!t||\"object\"!==f(t))return!1;var e=c.default.getWindow(t)||c.default.window;return/object|function/.test(f(e.Element))?t instanceof e.Element:1===t.nodeType&&\"string\"==typeof t.nodeName};w.plainObject=function(t){return p(t)&&!!t.constructor&&/function Object\\b/.test(t.constructor.toString())};w.array=function(t){return p(t)&&void 0!==t.length&&d(t.splice)};var v={};function y(t){return(y=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(v,\"__esModule\",{value:!0}),v.default=void 0;var h=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==y(t)&&\"function\"!=typeof t)return{default:t};var e=g();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}(w);function g(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return g=function(){return t},t}function b(t){var e=t.interaction;if(\"drag\"===e.prepared.name){var n=e.prepared.axis;\"x\"===n?(e.coords.cur.page.y=e.coords.start.page.y,e.coords.cur.client.y=e.coords.start.client.y,e.coords.velocity.client.y=0,e.coords.velocity.page.y=0):\"y\"===n&&(e.coords.cur.page.x=e.coords.start.page.x,e.coords.cur.client.x=e.coords.start.client.x,e.coords.velocity.client.x=0,e.coords.velocity.page.x=0)}}function _(t){var e=t.iEvent,n=t.interaction;if(\"drag\"===n.prepared.name){var r=n.prepared.axis;if(\"x\"===r||\"y\"===r){var o=\"x\"===r?\"y\":\"x\";e.page[o]=n.coords.start.page[o],e.client[o]=n.coords.start.client[o],e.delta[o]=0}}}var P={id:\"actions/drag\",install:function(t){var e=t.actions,n=t.Interactable,r=t.defaults;n.prototype.draggable=P.draggable,e.map.drag=P,e.methodDict.drag=\"draggable\",r.actions.drag=P.defaults},listeners:{\"interactions:before-action-move\":b,\"interactions:action-resume\":b,\"interactions:action-move\":_,\"auto-start:check\":function(t){var e=t.interaction,n=t.interactable,r=t.buttons,o=n.options.drag;if(o&&o.enabled&&(!e.pointerIsDown||!/mouse|pointer/.test(e.pointerType)||0!=(r&n.options.drag.mouseButtons)))return!(t.action={name:\"drag\",axis:\"start\"===o.lockAxis?o.startAxis:o.lockAxis})}},draggable:function(t){return h.object(t)?(this.options.drag.enabled=!1!==t.enabled,this.setPerAction(\"drag\",t),this.setOnEvents(\"drag\",t),/^(xy|x|y|start)$/.test(t.lockAxis)&&(this.options.drag.lockAxis=t.lockAxis),/^(xy|x|y)$/.test(t.startAxis)&&(this.options.drag.startAxis=t.startAxis),this):h.bool(t)?(this.options.drag.enabled=t,this):this.options.drag},beforeMove:b,move:_,defaults:{startAxis:\"xy\",lockAxis:\"xy\"},getCursor:function(){return\"move\"}},x=P;v.default=x;var S={};function j(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function M(t,e,n){return e&&j(t.prototype,e),n&&j(t,n),t}function D(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}Object.defineProperty(S,\"__esModule\",{value:!0}),S.default=S.BaseEvent=void 0;var I=function(){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,e),D(this,\"type\",void 0),D(this,\"target\",void 0),D(this,\"currentTarget\",void 0),D(this,\"interactable\",void 0),D(this,\"_interaction\",void 0),D(this,\"timeStamp\",void 0),D(this,\"immediatePropagationStopped\",!1),D(this,\"propagationStopped\",!1),this._interaction=t}return M(e,[{key:\"interaction\",get:function(){return this._interaction._proxy}}]),M(e,[{key:\"preventDefault\",value:function(){}},{key:\"stopPropagation\",value:function(){this.propagationStopped=!0}},{key:\"stopImmediatePropagation\",value:function(){this.immediatePropagationStopped=this.propagationStopped=!0}}]),e}(),A=S.BaseEvent=I;S.default=A;var z={};Object.defineProperty(z,\"__esModule\",{value:!0}),z.find=z.findIndex=z.from=z.merge=z.remove=z.contains=void 0;z.contains=function(t,e){return-1!==t.indexOf(e)};z.remove=function(t,e){return t.splice(t.indexOf(e),1)};function R(t,e){for(var n=0;n<e.length;n++){var r=e[n];t.push(r)}return t}z.merge=R;z.from=function(t){return R([],t)};function C(t,e){for(var n=0;n<t.length;n++)if(e(t[n],n,t))return n;return-1}z.findIndex=C;z.find=function(t,e){return t[C(t,e)]};var W={};Object.defineProperty(W,\"__esModule\",{value:!0}),W.default=void 0;var F,X=(F=S)&&F.__esModule?F:{default:F},Y=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==L(t)&&\"function\"!=typeof t)return{default:t};var e=N();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}(z);function N(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return N=function(){return t},t}function L(t){return(L=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function B(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function U(t,e){return(U=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function V(i){return function(){var t,e,n,r=G(i);if(function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return;if(Reflect.construct.sham)return;if(\"function\"==typeof Proxy)return 1;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),1}catch(t){return}}()){var o=G(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return e=this,!(n=t)||\"object\"!==L(n)&&\"function\"!=typeof n?q(e):n}}function q(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}function G(t){return(G=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function $(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var H=function(){!function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&U(t,e)}(s,X[\"default\"]);var t,e,n,u=V(s);function s(t,e,n){var r;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,s),$(q(r=u.call(this,e._interaction)),\"target\",void 0),$(q(r),\"dropzone\",void 0),$(q(r),\"dragEvent\",void 0),$(q(r),\"relatedTarget\",void 0),$(q(r),\"draggable\",void 0),$(q(r),\"timeStamp\",void 0),$(q(r),\"propagationStopped\",!1),$(q(r),\"immediatePropagationStopped\",!1);var o=\"dragleave\"===n?t.prev:t.cur,i=o.element,a=o.dropzone;return r.type=n,r.target=i,r.currentTarget=i,r.dropzone=a,r.dragEvent=e,r.relatedTarget=e.target,r.draggable=e.interactable,r.timeStamp=e.timeStamp,r}return t=s,(e=[{key:\"reject\",value:function(){var r=this,t=this._interaction.dropState;if(\"dropactivate\"===this.type||this.dropzone&&t.cur.dropzone===this.dropzone&&t.cur.element===this.target)if(t.prev.dropzone=this.dropzone,t.prev.element=this.target,t.rejected=!0,t.events.enter=null,this.stopImmediatePropagation(),\"dropactivate\"===this.type){var e=t.activeDrops,n=Y.findIndex(e,function(t){var e=t.dropzone,n=t.element;return e===r.dropzone&&n===r.target});t.activeDrops.splice(n,1);var o=new s(t,this.dragEvent,\"dropdeactivate\");o.dropzone=this.dropzone,o.target=this.target,this.dropzone.fire(o)}else this.dropzone.fire(new s(t,this.dragEvent,\"dragleave\"))}},{key:\"preventDefault\",value:function(){}},{key:\"stopPropagation\",value:function(){this.propagationStopped=!0}},{key:\"stopImmediatePropagation\",value:function(){this.immediatePropagationStopped=this.propagationStopped=!0}}])&&B(t.prototype,e),n&&B(t,n),s}();W.default=H;var K={};Object.defineProperty(K,\"__esModule\",{value:!0}),K.default=function(t,e){for(var n in e)t[n]=e[n];return t};var Z={};function J(t){return(J=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(Z,\"__esModule\",{value:!0}),Z.default=function n(e,r,o){o=o||{};et.string(e)&&-1!==e.search(\" \")&&(e=rt(e));if(et.array(e))return e.reduce(function(t,e){return(0,tt.default)(t,n(e,r,o))},o);et.object(e)&&(r=e,e=\"\");if(et.func(r))o[e]=o[e]||[],o[e].push(r);else if(et.array(r))for(var t=0;t<r.length;t++){var i=r[t];n(e,i,o)}else if(et.object(r))for(var a in r){var u=rt(a).map(function(t){return\"\".concat(e).concat(t)});n(u,r[a],o)}return o};var Q,tt=(Q=K)&&Q.__esModule?Q:{default:Q},et=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==J(t)&&\"function\"!=typeof t)return{default:t};var e=nt();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}(w);function nt(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return nt=function(){return t},t}function rt(t){return t.trim().split(/ +/)}var ot={};function it(t){return(it=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(ot,\"__esModule\",{value:!0}),ot.default=void 0;var at=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==it(t)&&\"function\"!=typeof t)return{default:t};var e=lt();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}(z),ut=ct(K),st=ct(Z);function ct(t){return t&&t.__esModule?t:{default:t}}function lt(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return lt=function(){return t},t}function ft(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function pt(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function dt(t,e){for(var n=0;n<e.length;n++){var r=e[n];if(t.immediatePropagationStopped)break;r(t)}}var vt=function(){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,e),pt(this,\"options\",void 0),pt(this,\"types\",{}),pt(this,\"propagationStopped\",!1),pt(this,\"immediatePropagationStopped\",!1),pt(this,\"global\",void 0),this.options=(0,ut.default)({},t||{})}var t,n,r;return t=e,(n=[{key:\"fire\",value:function(t){var e,n=this.global;(e=this.types[t.type])&&dt(t,e),!t.propagationStopped&&n&&(e=n[t.type])&&dt(t,e)}},{key:\"on\",value:function(t,e){var n=(0,st.default)(t,e);for(t in n)this.types[t]=at.merge(this.types[t]||[],n[t])}},{key:\"off\",value:function(t,e){var n=(0,st.default)(t,e);for(t in n){var r=this.types[t];if(r&&r.length)for(var o=0;o<n[t].length;o++){var i=n[t][o],a=r.indexOf(i);-1!==a&&r.splice(a,1)}}}},{key:\"getRect\",value:function(){return null}}])&&ft(t.prototype,n),r&&ft(t,r),e}();ot.default=vt;var yt={};Object.defineProperty(yt,\"__esModule\",{value:!0}),yt.default=yt.defaults=void 0;var ht={base:{preventDefault:\"auto\",deltaSource:\"page\"},perAction:{enabled:!1,origin:{x:0,y:0}},actions:{}},gt=yt.defaults=ht;yt.default=gt;var bt={};Object.defineProperty(bt,\"__esModule\",{value:!0}),bt.default=void 0;var mt={init:function(t){var e=t;mt.document=e.document,mt.DocumentFragment=e.DocumentFragment||Ot,mt.SVGElement=e.SVGElement||Ot,mt.SVGSVGElement=e.SVGSVGElement||Ot,mt.SVGElementInstance=e.SVGElementInstance||Ot,mt.Element=e.Element||Ot,mt.HTMLElement=e.HTMLElement||mt.Element,mt.Event=e.Event,mt.Touch=e.Touch||Ot,mt.PointerEvent=e.PointerEvent||e.MSPointerEvent},document:null,DocumentFragment:null,SVGElement:null,SVGSVGElement:null,SVGElementInstance:null,Element:null,HTMLElement:null,Event:null,Touch:null,PointerEvent:null};function Ot(){}var wt=mt;bt.default=wt;var _t={};function Pt(t){return(Pt=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(_t,\"__esModule\",{value:!0}),_t.default=void 0;var xt=kt(bt),St=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==Pt(t)&&\"function\"!=typeof t)return{default:t};var e=Mt();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}(w),jt=kt(O);function Mt(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return Mt=function(){return t},t}function kt(t){return t&&t.__esModule?t:{default:t}}var Et={init:function(t){var e=xt.default.Element,n=jt.default.window.navigator;Et.supportsTouch=\"ontouchstart\"in t||St.func(t.DocumentTouch)&&xt.default.document instanceof t.DocumentTouch,Et.supportsPointerEvent=!1!==n.pointerEnabled&&!!xt.default.PointerEvent,Et.isIOS=/iP(hone|od|ad)/.test(n.platform),Et.isIOS7=/iP(hone|od|ad)/.test(n.platform)&&/OS 7[^\\d]/.test(n.appVersion),Et.isIe9=/MSIE 9/.test(n.userAgent),Et.isOperaMobile=\"Opera\"===n.appName&&Et.supportsTouch&&/Presto/.test(n.userAgent),Et.prefixedMatchesSelector=\"matches\"in e.prototype?\"matches\":\"webkitMatchesSelector\"in e.prototype?\"webkitMatchesSelector\":\"mozMatchesSelector\"in e.prototype?\"mozMatchesSelector\":\"oMatchesSelector\"in e.prototype?\"oMatchesSelector\":\"msMatchesSelector\",Et.pEventTypes=Et.supportsPointerEvent?xt.default.PointerEvent===t.MSPointerEvent?{up:\"MSPointerUp\",down:\"MSPointerDown\",over:\"mouseover\",out:\"mouseout\",move:\"MSPointerMove\",cancel:\"MSPointerCancel\"}:{up:\"pointerup\",down:\"pointerdown\",over:\"pointerover\",out:\"pointerout\",move:\"pointermove\",cancel:\"pointercancel\"}:null,Et.wheelEvent=\"onmousewheel\"in xt.default.document?\"mousewheel\":\"wheel\"},supportsTouch:null,supportsPointerEvent:null,isIOS7:null,isIOS:null,isIe9:null,isOperaMobile:null,prefixedMatchesSelector:null,pEventTypes:null,wheelEvent:null};var Tt=Et;_t.default=Tt;var Dt={};function It(t){return(It=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(Dt,\"__esModule\",{value:!0}),Dt.nodeContains=function(t,e){for(;e;){if(e===t)return!0;e=e.parentNode}return!1},Dt.closest=function(t,e){for(;Rt.element(t);){if(Nt(t,e))return t;t=Yt(t)}return null},Dt.parentNode=Yt,Dt.matchesSelector=Nt,Dt.indexOfDeepestElement=function(t){var e,n,r=[],o=t[0],i=o?0:-1;for(e=1;e<t.length;e++){var a=t[e];if(a&&a!==o)if(o){if(a.parentNode!==a.ownerDocument)if(o.parentNode!==a.ownerDocument)if(a.parentNode!==o.parentNode){if(!r.length)for(var u=o,s=void 0;(s=Lt(u))&&s!==u.ownerDocument;)r.unshift(u),u=s;var c=void 0;if(o instanceof zt.default.HTMLElement&&a instanceof zt.default.SVGElement&&!(a instanceof zt.default.SVGSVGElement)){if(a===o.parentNode)continue;c=a.ownerSVGElement}else c=a;for(var l=[];c.parentNode!==c.ownerDocument;)l.unshift(c),c=Lt(c);for(n=0;l[n]&&l[n]===r[n];)n++;for(var f=[l[n-1],l[n],r[n]],p=f[0].lastChild;p;){if(p===f[1]){o=a,i=e,r=l;break}if(p===f[2])break;p=p.previousSibling}}else{var d=parseInt((0,Ct.getWindow)(o).getComputedStyle(o).zIndex,10)||0,v=parseInt((0,Ct.getWindow)(a).getComputedStyle(a).zIndex,10)||0;d<=v&&(o=a,i=e)}else o=a,i=e}else o=a,i=e}return i},Dt.matchesUpTo=function(t,e,n){for(;Rt.element(t);){if(Nt(t,e))return!0;if((t=Yt(t))===n)return Nt(t,e)}return!1},Dt.getActualElement=function(t){return t instanceof zt.default.SVGElementInstance?t.correspondingUseElement:t},Dt.getScrollXY=Bt,Dt.getElementClientRect=Ut,Dt.getElementRect=function(t){var e=Ut(t);if(!At.default.isIOS7&&e){var n=Bt(Ct.default.getWindow(t));e.left+=n.x,e.right+=n.x,e.top+=n.y,e.bottom+=n.y}return e},Dt.getPath=function(t){var e=[];for(;t;)e.push(t),t=Yt(t);return e},Dt.trySelector=function(t){return!!Rt.string(t)&&(zt.default.document.querySelector(t),!0)};var At=Xt(_t),zt=Xt(bt),Rt=Ft(w),Ct=Ft(O);function Wt(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return Wt=function(){return t},t}function Ft(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==It(t)&&\"function\"!=typeof t)return{default:t};var e=Wt();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}return n.default=t,e&&e.set(t,n),n}function Xt(t){return t&&t.__esModule?t:{default:t}}function Yt(t){var e=t.parentNode;if(Rt.docFrag(e)){for(;(e=e.host)&&Rt.docFrag(e););return e}return e}function Nt(t,e){return Ct.default.window!==Ct.default.realWindow&&(e=e.replace(/\\/deep\\//g,\" \")),t[At.default.prefixedMatchesSelector](e)}var Lt=function(t){return t.parentNode?t.parentNode:t.host};function Bt(t){return{x:(t=t||Ct.default.window).scrollX||t.document.documentElement.scrollLeft,y:t.scrollY||t.document.documentElement.scrollTop}}function Ut(t){var e=t instanceof zt.default.SVGElement?t.getBoundingClientRect():t.getClientRects()[0];return e&&{left:e.left,right:e.right,top:e.top,bottom:e.bottom,width:e.width||e.right-e.left,height:e.height||e.bottom-e.top}}var Vt={};function qt(t){return(qt=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(Vt,\"__esModule\",{value:!0}),Vt.getStringOptionResult=Jt,Vt.resolveRectLike=function(t,e,n,r){var o=t;Ht.string(o)?o=Jt(o,e,n):Ht.func(o)&&(o=o.apply(void 0,function(t){return function(t){if(Array.isArray(t))return Zt(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(!t)return;if(\"string\"==typeof t)return Zt(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Zt(t,e)}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}(r)));Ht.element(o)&&(o=(0,Dt.getElementRect)(o));return o},Vt.rectToXY=function(t){return t&&{x:\"x\"in t?t.x:t.left,y:\"y\"in t?t.y:t.top}},Vt.xywhToTlbr=function(t){!t||\"left\"in t&&\"top\"in t||((t=(0,$t.default)({},t)).left=t.x||0,t.top=t.y||0,t.right=t.right||t.left+t.width,t.bottom=t.bottom||t.top+t.height);return t},Vt.tlbrToXywh=function(t){!t||\"x\"in t&&\"y\"in t||((t=(0,$t.default)({},t)).x=t.left||0,t.y=t.top||0,t.width=t.width||t.right||0-t.x,t.height=t.height||t.bottom||0-t.y);return t},Vt.addEdges=function(t,e,n){t.left&&(e.left+=n.x);t.right&&(e.right+=n.x);t.top&&(e.top+=n.y);t.bottom&&(e.bottom+=n.y);e.width=e.right-e.left,e.height=e.bottom-e.top};var Gt,$t=(Gt=K)&&Gt.__esModule?Gt:{default:Gt},Ht=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==qt(t)&&\"function\"!=typeof t)return{default:t};var e=Kt();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}(w);function Kt(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return Kt=function(){return t},t}function Zt(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function Jt(t,e,n){return\"parent\"===t?(0,Dt.parentNode)(n):\"self\"===t?e.getRect(n):(0,Dt.closest)(n,t)}var Qt={};Object.defineProperty(Qt,\"__esModule\",{value:!0}),Qt.default=function(t,e,n){var r=t.options[n],o=r&&r.origin||t.options.origin,i=(0,Vt.resolveRectLike)(o,t,e,[t&&e]);return(0,Vt.rectToXY)(i)||{x:0,y:0}};var te={};Object.defineProperty(te,\"__esModule\",{value:!0}),te.default=void 0;te.default=function(t,e){return Math.sqrt(t*t+e*e)};var ee={};Object.defineProperty(ee,\"__esModule\",{value:!0}),ee.default=ee.InteractEvent=void 0;var ne=ue(S),re=ue(yt),oe=ue(K),ie=ue(Qt),ae=ue(te);function ue(t){return t&&t.__esModule?t:{default:t}}function se(t){return(se=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function ce(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function le(t,e){return(le=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function fe(i){return function(){var t,e,n,r=de(i);if(function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return;if(Reflect.construct.sham)return;if(\"function\"==typeof Proxy)return 1;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),1}catch(t){return}}()){var o=de(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return e=this,!(n=t)||\"object\"!==se(n)&&\"function\"!=typeof n?pe(e):n}}function pe(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}function de(t){return(de=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function ve(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var ye=function(){!function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&le(t,e)}(h,ne[\"default\"]);var t,e,n,y=fe(h);function h(t,e,n,r,o,i,a){var u;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,h),ve(pe(u=y.call(this,t)),\"target\",void 0),ve(pe(u),\"currentTarget\",void 0),ve(pe(u),\"relatedTarget\",null),ve(pe(u),\"screenX\",void 0),ve(pe(u),\"screenY\",void 0),ve(pe(u),\"button\",void 0),ve(pe(u),\"buttons\",void 0),ve(pe(u),\"ctrlKey\",void 0),ve(pe(u),\"shiftKey\",void 0),ve(pe(u),\"altKey\",void 0),ve(pe(u),\"metaKey\",void 0),ve(pe(u),\"page\",void 0),ve(pe(u),\"client\",void 0),ve(pe(u),\"delta\",void 0),ve(pe(u),\"rect\",void 0),ve(pe(u),\"x0\",void 0),ve(pe(u),\"y0\",void 0),ve(pe(u),\"t0\",void 0),ve(pe(u),\"dt\",void 0),ve(pe(u),\"duration\",void 0),ve(pe(u),\"clientX0\",void 0),ve(pe(u),\"clientY0\",void 0),ve(pe(u),\"velocity\",void 0),ve(pe(u),\"speed\",void 0),ve(pe(u),\"swipe\",void 0),ve(pe(u),\"timeStamp\",void 0),ve(pe(u),\"dragEnter\",void 0),ve(pe(u),\"dragLeave\",void 0),ve(pe(u),\"axes\",void 0),ve(pe(u),\"preEnd\",void 0),o=o||t.element;var s=t.interactable,c=(s&&s.options||re.default).deltaSource,l=(0,ie.default)(s,o,n),f=\"start\"===r,p=\"end\"===r,d=f?pe(u):t.prevEvent,v=f?t.coords.start:p?{page:d.page,client:d.client,timeStamp:t.coords.cur.timeStamp}:t.coords.cur;return u.page=(0,oe.default)({},v.page),u.client=(0,oe.default)({},v.client),u.rect=(0,oe.default)({},t.rect),u.timeStamp=v.timeStamp,p||(u.page.x-=l.x,u.page.y-=l.y,u.client.x-=l.x,u.client.y-=l.y),u.ctrlKey=e.ctrlKey,u.altKey=e.altKey,u.shiftKey=e.shiftKey,u.metaKey=e.metaKey,u.button=e.button,u.buttons=e.buttons,u.target=o,u.currentTarget=o,u.preEnd=i,u.type=a||n+(r||\"\"),u.interactable=s,u.t0=f?t.pointers[t.pointers.length-1].downTime:d.t0,u.x0=t.coords.start.page.x-l.x,u.y0=t.coords.start.page.y-l.y,u.clientX0=t.coords.start.client.x-l.x,u.clientY0=t.coords.start.client.y-l.y,u.delta=f||p?{x:0,y:0}:{x:u[c].x-d[c].x,y:u[c].y-d[c].y},u.dt=t.coords.delta.timeStamp,u.duration=u.timeStamp-u.t0,u.velocity=(0,oe.default)({},t.coords.velocity[c]),u.speed=(0,ae.default)(u.velocity.x,u.velocity.y),u.swipe=p||\"inertiastart\"===r?u.getSwipe():null,u}return t=h,(e=[{key:\"getSwipe\",value:function(){var t=this._interaction;if(t.prevEvent.speed<600||150<this.timeStamp-t.prevEvent.timeStamp)return null;var e=180*Math.atan2(t.prevEvent.velocityY,t.prevEvent.velocityX)/Math.PI;e<0&&(e+=360);var n=112.5<=e&&e<247.5,r=202.5<=e&&e<337.5;return{up:r,down:!r&&22.5<=e&&e<157.5,left:n,right:!n&&(292.5<=e||e<67.5),angle:e,speed:t.prevEvent.speed,velocity:{x:t.prevEvent.velocityX,y:t.prevEvent.velocityY}}}},{key:\"preventDefault\",value:function(){}},{key:\"stopImmediatePropagation\",value:function(){this.immediatePropagationStopped=this.propagationStopped=!0}},{key:\"stopPropagation\",value:function(){this.propagationStopped=!0}},{key:\"pageX\",get:function(){return this.page.x},set:function(t){this.page.x=t}},{key:\"pageY\",get:function(){return this.page.y},set:function(t){this.page.y=t}},{key:\"clientX\",get:function(){return this.client.x},set:function(t){this.client.x=t}},{key:\"clientY\",get:function(){return this.client.y},set:function(t){this.client.y=t}},{key:\"dx\",get:function(){return this.delta.x},set:function(t){this.delta.x=t}},{key:\"dy\",get:function(){return this.delta.y},set:function(t){this.delta.y=t}},{key:\"velocityX\",get:function(){return this.velocity.x},set:function(t){this.velocity.x=t}},{key:\"velocityY\",get:function(){return this.velocity.y},set:function(t){this.velocity.y=t}}])&&ce(t.prototype,e),n&&ce(t,n),h}(),he=ee.InteractEvent=ye;ee.default=he;var ge={};function be(t,e){for(var n in e){var r=be.prefixedPropREs,o=!1;for(var i in r)if(0===n.indexOf(i)&&r[i].test(n)){o=!0;break}o||\"function\"==typeof e[n]||(t[n]=e[n])}return t}Object.defineProperty(ge,\"__esModule\",{value:!0}),ge.default=void 0,be.prefixedPropREs={webkit:/(Movement[XY]|Radius[XY]|RotationAngle|Force)$/,moz:/(Pressure)$/};var me=be;ge.default=me;var Oe={};function we(t){return(we=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(Oe,\"__esModule\",{value:!0}),Oe.copyCoords=function(t,e){t.page=t.page||{},t.page.x=e.page.x,t.page.y=e.page.y,t.client=t.client||{},t.client.x=e.client.x,t.client.y=e.client.y,t.timeStamp=e.timeStamp},Oe.setCoordDeltas=function(t,e,n){t.page.x=n.page.x-e.page.x,t.page.y=n.page.y-e.page.y,t.client.x=n.client.x-e.client.x,t.client.y=n.client.y-e.client.y,t.timeStamp=n.timeStamp-e.timeStamp},Oe.setCoordVelocity=function(t,e){var n=Math.max(e.timeStamp/1e3,.001);t.page.x=e.page.x/n,t.page.y=e.page.y/n,t.client.x=e.client.x/n,t.client.y=e.client.y/n,t.timeStamp=n},Oe.setZeroCoords=function(t){t.page.x=0,t.page.y=0,t.client.x=0,t.client.y=0},Oe.isNativePointer=De,Oe.getXY=Ie,Oe.getPageXY=Ae,Oe.getClientXY=ze,Oe.getPointerId=function(t){return je.number(t.pointerId)?t.pointerId:t.identifier},Oe.setCoords=function(t,e,n){var r=1<e.length?Ce(e):e[0],o={};Ae(r,o),t.page.x=o.x,t.page.y=o.y,ze(r,o),t.client.x=o.x,t.client.y=o.y,t.timeStamp=n},Oe.getTouchPair=Re,Oe.pointerAverage=Ce,Oe.touchBBox=function(t){if(!(t.length||t.touches&&1<t.touches.length))return null;var e=Re(t),n=Math.min(e[0].pageX,e[1].pageX),r=Math.min(e[0].pageY,e[1].pageY),o=Math.max(e[0].pageX,e[1].pageX),i=Math.max(e[0].pageY,e[1].pageY);return{x:n,y:r,left:n,top:r,right:o,bottom:i,width:o-n,height:i-r}},Oe.touchDistance=function(t,e){var n=e+\"X\",r=e+\"Y\",o=Re(t),i=o[0][n]-o[1][n],a=o[0][r]-o[1][r];return(0,Se.default)(i,a)},Oe.touchAngle=function(t,e){var n=e+\"X\",r=e+\"Y\",o=Re(t),i=o[1][n]-o[0][n],a=o[1][r]-o[0][r];return 180*Math.atan2(a,i)/Math.PI},Oe.getPointerType=function(t){return je.string(t.pointerType)?t.pointerType:je.number(t.pointerType)?[void 0,void 0,\"touch\",\"pen\",\"mouse\"][t.pointerType]:/touch/.test(t.type)||t instanceof Pe.default.Touch?\"touch\":\"mouse\"},Oe.getEventTargets=function(t){var e=je.func(t.composedPath)?t.composedPath():t.path;return[xe.getActualElement(e?e[0]:t.target),xe.getActualElement(t.currentTarget)]},Oe.newCoords=function(){return{page:{x:0,y:0},client:{x:0,y:0},timeStamp:0}},Oe.coordsToEvent=function(t){return{coords:t,get page(){return this.coords.page},get client(){return this.coords.client},get timeStamp(){return this.coords.timeStamp},get pageX(){return this.coords.page.x},get pageY(){return this.coords.page.y},get clientX(){return this.coords.client.x},get clientY(){return this.coords.client.y},get pointerId(){return this.coords.pointerId},get target(){return this.coords.target},get type(){return this.coords.type},get pointerType(){return this.coords.pointerType},get buttons(){return this.coords.buttons},preventDefault:function(){}}},Object.defineProperty(Oe,\"pointerExtend\",{enumerable:!0,get:function(){return Me.default}});var _e=Te(_t),Pe=Te(bt),xe=Ee(Dt),Se=Te(te),je=Ee(w),Me=Te(ge);function ke(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return ke=function(){return t},t}function Ee(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==we(t)&&\"function\"!=typeof t)return{default:t};var e=ke();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}return n.default=t,e&&e.set(t,n),n}function Te(t){return t&&t.__esModule?t:{default:t}}function De(t){return t instanceof Pe.default.Event||t instanceof Pe.default.Touch}function Ie(t,e,n){return(n=n||{}).x=e[(t=t||\"page\")+\"X\"],n.y=e[t+\"Y\"],n}function Ae(t,e){return e=e||{x:0,y:0},_e.default.isOperaMobile&&De(t)?(Ie(\"screen\",t,e),e.x+=window.scrollX,e.y+=window.scrollY):Ie(\"page\",t,e),e}function ze(t,e){return e=e||{},_e.default.isOperaMobile&&De(t)?Ie(\"screen\",t,e):Ie(\"client\",t,e),e}function Re(t){var e=[];return je.array(t)?(e[0]=t[0],e[1]=t[1]):\"touchend\"===t.type?1===t.touches.length?(e[0]=t.touches[0],e[1]=t.changedTouches[0]):0===t.touches.length&&(e[0]=t.changedTouches[0],e[1]=t.changedTouches[1]):(e[0]=t.touches[0],e[1]=t.touches[1]),e}function Ce(t){for(var e={pageX:0,pageY:0,clientX:0,clientY:0,screenX:0,screenY:0},n=0;n<t.length;n++){var r=t[n];for(var o in e)e[o]+=r[o]}for(var i in e)e[i]/=t.length;return e}var We={};function Fe(t){return(Fe=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(We,\"__esModule\",{value:!0}),We.default=function t(e){var n={};for(var r in e){var o=e[r];Ye.plainObject(o)?n[r]=t(o):Ye.array(o)?n[r]=Xe.from(o):n[r]=o}return n};var Xe=Le(z),Ye=Le(w);function Ne(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return Ne=function(){return t},t}function Le(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==Fe(t)&&\"function\"!=typeof t)return{default:t};var e=Ne();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}return n.default=t,e&&e.set(t,n),n}var Be={};Object.defineProperty(Be,\"__esModule\",{value:!0}),Be.default=void 0;var Ue,Ve,qe=0;var Ge={request:function(t){return Ue(t)},cancel:function(t){return Ve(t)},init:function(t){if(Ue=t.requestAnimationFrame,Ve=t.cancelAnimationFrame,!Ue)for(var e=[\"ms\",\"moz\",\"webkit\",\"o\"],n=0;n<e.length;n++){var r=e[n];Ue=t[\"\".concat(r,\"RequestAnimationFrame\")],Ve=t[\"\".concat(r,\"CancelAnimationFrame\")]||t[\"\".concat(r,\"CancelRequestAnimationFrame\")]}Ue||(Ue=function(t){var e=Date.now(),n=Math.max(0,16-(e-qe)),r=setTimeout(function(){t(e+n)},n);return qe=e+n,r},Ve=function(t){return clearTimeout(t)})}};Be.default=Ge;var $e={};function He(t){return(He=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty($e,\"__esModule\",{value:!0}),$e.warnOnce=function(t,e){var n=!1;return function(){return n||(en.default.window.console.warn(e),n=!0),t.apply(this,arguments)}},$e.copyAction=function(t,e){return t.name=e.name,t.axis=e.axis,t.edges=e.edges,t},Object.defineProperty($e,\"win\",{enumerable:!0,get:function(){return en.default}}),Object.defineProperty($e,\"browser\",{enumerable:!0,get:function(){return nn.default}}),Object.defineProperty($e,\"clone\",{enumerable:!0,get:function(){return rn.default}}),Object.defineProperty($e,\"extend\",{enumerable:!0,get:function(){return on.default}}),Object.defineProperty($e,\"getOriginXY\",{enumerable:!0,get:function(){return an.default}}),Object.defineProperty($e,\"hypot\",{enumerable:!0,get:function(){return un.default}}),Object.defineProperty($e,\"normalizeListeners\",{enumerable:!0,get:function(){return sn.default}}),Object.defineProperty($e,\"raf\",{enumerable:!0,get:function(){return cn.default}}),$e.rect=$e.pointer=$e.is=$e.dom=$e.arr=void 0;var Ke=pn(z);$e.arr=Ke;var Ze=pn(Dt);$e.dom=Ze;var Je=pn(w);$e.is=Je;var Qe=pn(Oe);$e.pointer=Qe;var tn=pn(Vt);$e.rect=tn;var en=ln(O),nn=ln(_t),rn=ln(We),on=ln(K),an=ln(Qt),un=ln(te),sn=ln(Z),cn=ln(Be);function ln(t){return t&&t.__esModule?t:{default:t}}function fn(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return fn=function(){return t},t}function pn(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==He(t)&&\"function\"!=typeof t)return{default:t};var e=fn();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}return n.default=t,e&&e.set(t,n),n}var dn={};function vn(t){return(vn=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(dn,\"__esModule\",{value:!0}),dn.default=void 0;var yn,hn=wn(z),gn=wn(Dt),bn=(yn=K)&&yn.__esModule?yn:{default:yn},mn=wn(w);function On(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return On=function(){return t},t}function wn(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==vn(t)&&\"function\"!=typeof t)return{default:t};var e=On();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}return n.default=t,e&&e.set(t,n),n}function _n(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Pn(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var xn=function(){function e(t){var a=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,e),Pn(this,\"list\",[]),Pn(this,\"selectorMap\",{}),Pn(this,\"scope\",void 0),(this.scope=t).addListeners({\"interactable:unset\":function(t){var e=t.interactable,n=e.target,r=e._context,o=mn.string(n)?a.selectorMap[n]:n[a.scope.id],i=o.findIndex(function(t){return t.context===r});o[i]&&(o[i].context=null,o[i].interactable=null),o.splice(i,1)}})}var t,n,r;return t=e,(n=[{key:\"new\",value:function(t,e){e=(0,bn.default)(e||{},{actions:this.scope.actions});var n=new this.scope.Interactable(t,e,this.scope.document,this.scope.events),r={context:n._context,interactable:n};return this.scope.addDocument(n._doc),this.list.push(n),mn.string(t)?(this.selectorMap[t]||(this.selectorMap[t]=[]),this.selectorMap[t].push(r)):(n.target[this.scope.id]||Object.defineProperty(t,this.scope.id,{value:[],configurable:!0}),t[this.scope.id].push(r)),this.scope.fire(\"interactable:new\",{target:t,options:e,interactable:n,win:this.scope._win}),n}},{key:\"get\",value:function(e,t){var n=t&&t.context||this.scope.document,r=mn.string(e),o=r?this.selectorMap[e]:e[this.scope.id];if(!o)return null;var i=hn.find(o,function(t){return t.context===n&&(r||t.interactable.inContext(e))});return i&&i.interactable}},{key:\"forEachMatch\",value:function(t,e){for(var n=0;n<this.list.length;n++){var r=this.list[n],o=void 0;if((mn.string(r.target)?mn.element(t)&&gn.matchesSelector(t,r.target):t===r.target)&&r.inContext(t)&&(o=e(r)),void 0!==o)return o}}}])&&_n(t.prototype,n),r&&_n(t,r),e}();dn.default=xn;var Sn={};function jn(t){return(jn=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(Sn,\"__esModule\",{value:!0}),Sn.default=Sn.FakeEvent=void 0;var Mn=Rn(z),kn=Rn(Dt),En=An(K),Tn=Rn(w),Dn=An(ge),In=Rn(Oe);function An(t){return t&&t.__esModule?t:{default:t}}function zn(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return zn=function(){return t},t}function Rn(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==jn(t)&&\"function\"!=typeof t)return{default:t};var e=zn();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}return n.default=t,e&&e.set(t,n),n}function Cn(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Wn(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Fn(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(\"undefined\"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,u=t[Symbol.iterator]();!(r=(a=u.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==u.return||u.return()}finally{if(o)throw i}}return n}(t,e)||function(t,e){if(!t)return;if(\"string\"==typeof t)return Xn(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Xn(t,e)}(t,e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function Xn(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var Yn=function(){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,e),Wn(this,\"currentTarget\",void 0),Wn(this,\"originalEvent\",void 0),this.originalEvent=t,(0,Dn.default)(this,t)}var t,n,r;return t=e,(n=[{key:\"preventOriginalDefault\",value:function(){this.originalEvent.preventDefault()}},{key:\"stopPropagation\",value:function(){this.originalEvent.stopPropagation()}},{key:\"stopImmediatePropagation\",value:function(){this.originalEvent.stopImmediatePropagation()}}])&&Cn(t.prototype,n),r&&Cn(t,r),e}();function Nn(t){if(!Tn.object(t))return{capture:!!t,passive:!1};var e=(0,En.default)({},t);return e.capture=!!t.capture,e.passive=!!t.passive,e}Sn.FakeEvent=Yn;var Ln={id:\"events\",install:function(t){var f=[],b={},l=[],p={add:d,remove:g,addDelegate:function(e,n,t,r,o){var i=Nn(o);if(!b[t]){b[t]=[];for(var a=0;a<l.length;a++){var u=l[a];d(u,t,m),d(u,t,O,!0)}}var s=b[t],c=Mn.find(s,function(t){return t.selector===e&&t.context===n});c||(c={selector:e,context:n,listeners:[]},s.push(c));c.listeners.push([r,i])},removeDelegate:function(t,e,n,r,o){var i,a=Nn(o),u=b[n],s=!1;if(!u)return;for(i=u.length-1;0<=i;i--){var c=u[i];if(c.selector===t&&c.context===e){for(var l=c.listeners,f=l.length-1;0<=f;f--){var p=Fn(l[f],2),d=p[0],v=p[1],y=v.capture,h=v.passive;if(d===r&&y===a.capture&&h===a.passive){l.splice(f,1),l.length||(u.splice(i,1),g(e,n,m),g(e,n,O,!0)),s=!0;break}}if(s)break}}},delegateListener:m,delegateUseCapture:O,delegatedEvents:b,documents:l,targets:f,supportsOptions:!1,supportsPassive:!1};function d(e,t,n,r){var o=Nn(r),i=Mn.find(f,function(t){return t.eventTarget===e});i||(i={eventTarget:e,events:{}},f.push(i)),i.events[t]||(i.events[t]=[]),e.addEventListener&&!Mn.contains(i.events[t],n)&&(e.addEventListener(t,n,p.supportsOptions?o:o.capture),i.events[t].push(n))}function g(e,t,n,r){var o=Nn(r),i=Mn.findIndex(f,function(t){return t.eventTarget===e}),a=f[i];if(a&&a.events)if(\"all\"!==t){var u=!1,s=a.events[t];if(s){if(\"all\"===n){for(var c=s.length-1;0<=c;c--)g(e,t,s[c],o);return}for(var l=0;l<s.length;l++)if(s[l]===n){e.removeEventListener(t,n,p.supportsOptions?o:o.capture),s.splice(l,1),0===s.length&&(delete a.events[t],u=!0);break}}u&&!Object.keys(a.events).length&&f.splice(i,1)}else for(t in a.events)a.events.hasOwnProperty(t)&&g(e,t,\"all\")}function m(t,e){for(var n=Nn(e),r=new Yn(t),o=b[t.type],i=Fn(In.getEventTargets(t),1)[0],a=i;Tn.element(a);){for(var u=0;u<o.length;u++){var s=o[u],c=s.selector,l=s.context;if(kn.matchesSelector(a,c)&&kn.nodeContains(l,i)&&kn.nodeContains(l,a)){var f=s.listeners;r.currentTarget=a;for(var p=0;p<f.length;p++){var d=Fn(f[p],2),v=d[0],y=d[1],h=y.capture,g=y.passive;h===n.capture&&g===n.passive&&v(r)}}}a=kn.parentNode(a)}}function O(t){return m.call(this,t,!0)}return t.document.createElement(\"div\").addEventListener(\"test\",null,{get capture(){return p.supportsOptions=!0},get passive(){return p.supportsPassive=!0}}),t.events=p}};Sn.default=Ln;var Bn={};function Un(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}Object.defineProperty(Bn,\"__esModule\",{value:!0}),Bn.default=Bn.PointerInfo=void 0;function Vn(t,e,n,r,o){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,Vn),Un(this,\"id\",void 0),Un(this,\"pointer\",void 0),Un(this,\"event\",void 0),Un(this,\"downTime\",void 0),Un(this,\"downTarget\",void 0),this.id=t,this.pointer=e,this.event=n,this.downTime=r,this.downTarget=o}var qn=Bn.PointerInfo=Vn;Bn.default=qn;var Gn={};function $n(t){return($n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(Gn,\"__esModule\",{value:!0}),Object.defineProperty(Gn,\"PointerInfo\",{enumerable:!0,get:function(){return tr.default}}),Gn.default=Gn.Interaction=Gn._ProxyMethods=Gn._ProxyValues=void 0;var Hn,Kn,Zn,Jn,Qn=rr(ee),tr=rr(Bn),er=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==$n(t)&&\"function\"!=typeof t)return{default:t};var e=nr();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}($e);function nr(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return nr=function(){return t},t}function rr(t){return t&&t.__esModule?t:{default:t}}function or(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function ir(t,e,n){return e&&or(t.prototype,e),n&&or(t,n),t}function ar(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}Gn._ProxyValues=Hn,(Kn=Hn||(Gn._ProxyValues=Hn={})).interactable=\"\",Kn.element=\"\",Kn.prepared=\"\",Kn.pointerIsDown=\"\",Kn.pointerWasMoved=\"\",Kn._proxy=\"\",Gn._ProxyMethods=Zn,(Jn=Zn||(Gn._ProxyMethods=Zn={})).start=\"\",Jn.move=\"\",Jn.end=\"\",Jn.stop=\"\",Jn.interacting=\"\";var ur=0,sr=function(){function c(t){var e=this,n=t.pointerType,r=t.scopeFire;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,c),ar(this,\"interactable\",null),ar(this,\"element\",null),ar(this,\"rect\",void 0),ar(this,\"_rects\",void 0),ar(this,\"edges\",void 0),ar(this,\"_scopeFire\",void 0),ar(this,\"prepared\",{name:null,axis:null,edges:null}),ar(this,\"pointerType\",void 0),ar(this,\"pointers\",[]),ar(this,\"downEvent\",null),ar(this,\"downPointer\",{}),ar(this,\"_latestPointer\",{pointer:null,event:null,eventTarget:null}),ar(this,\"prevEvent\",null),ar(this,\"pointerIsDown\",!1),ar(this,\"pointerWasMoved\",!1),ar(this,\"_interacting\",!1),ar(this,\"_ending\",!1),ar(this,\"_stopped\",!0),ar(this,\"_proxy\",null),ar(this,\"simulation\",null),ar(this,\"doMove\",er.warnOnce(function(t){this.move(t)},\"The interaction.doMove() method has been renamed to interaction.move()\")),ar(this,\"coords\",{start:er.pointer.newCoords(),prev:er.pointer.newCoords(),cur:er.pointer.newCoords(),delta:er.pointer.newCoords(),velocity:er.pointer.newCoords()}),ar(this,\"_id\",ur++),this._scopeFire=r,this.pointerType=n;var o=this;this._proxy={};function i(t){Object.defineProperty(e._proxy,t,{get:function(){return o[t]}})}for(var a in Hn)i(a);function u(t){Object.defineProperty(e._proxy,t,{value:function(){return o[t].apply(o,arguments)}})}for(var s in Zn)u(s);this._scopeFire(\"interactions:new\",{interaction:this})}return ir(c,[{key:\"pointerMoveTolerance\",get:function(){return 1}}]),ir(c,[{key:\"pointerDown\",value:function(t,e,n){var r=this.updatePointer(t,e,n,!0),o=this.pointers[r];this._scopeFire(\"interactions:down\",{pointer:t,event:e,eventTarget:n,pointerIndex:r,pointerInfo:o,type:\"down\",interaction:this})}},{key:\"start\",value:function(t,e,n){return!(this.interacting()||!this.pointerIsDown||this.pointers.length<(\"gesture\"===t.name?2:1)||!e.options[t.name].enabled)&&(er.copyAction(this.prepared,t),this.interactable=e,this.element=n,this.rect=e.getRect(n),this.edges=this.prepared.edges?er.extend({},this.prepared.edges):{left:!0,right:!0,top:!0,bottom:!0},this._stopped=!1,this._interacting=this._doPhase({interaction:this,event:this.downEvent,phase:\"start\"})&&!this._stopped,this._interacting)}},{key:\"pointerMove\",value:function(t,e,n){this.simulation||this.modification&&this.modification.endResult||this.updatePointer(t,e,n,!1);var r,o,i=this.coords.cur.page.x===this.coords.prev.page.x&&this.coords.cur.page.y===this.coords.prev.page.y&&this.coords.cur.client.x===this.coords.prev.client.x&&this.coords.cur.client.y===this.coords.prev.client.y;this.pointerIsDown&&!this.pointerWasMoved&&(r=this.coords.cur.client.x-this.coords.start.client.x,o=this.coords.cur.client.y-this.coords.start.client.y,this.pointerWasMoved=er.hypot(r,o)>this.pointerMoveTolerance);var a=this.getPointerIndex(t),u={pointer:t,pointerIndex:a,pointerInfo:this.pointers[a],event:e,type:\"move\",eventTarget:n,dx:r,dy:o,duplicate:i,interaction:this};i||er.pointer.setCoordVelocity(this.coords.velocity,this.coords.delta),this._scopeFire(\"interactions:move\",u),i||this.simulation||(this.interacting()&&(u.type=null,this.move(u)),this.pointerWasMoved&&er.pointer.copyCoords(this.coords.prev,this.coords.cur))}},{key:\"move\",value:function(t){t&&t.event||er.pointer.setZeroCoords(this.coords.delta),(t=er.extend({pointer:this._latestPointer.pointer,event:this._latestPointer.event,eventTarget:this._latestPointer.eventTarget,interaction:this},t||{})).phase=\"move\",this._doPhase(t)}},{key:\"pointerUp\",value:function(t,e,n,r){var o=this.getPointerIndex(t);-1===o&&(o=this.updatePointer(t,e,n,!1));var i=/cancel$/i.test(e.type)?\"cancel\":\"up\";this._scopeFire(\"interactions:\".concat(i),{pointer:t,pointerIndex:o,pointerInfo:this.pointers[o],event:e,eventTarget:n,type:i,curEventTarget:r,interaction:this}),this.simulation||this.end(e),this.pointerIsDown=!1,this.removePointer(t,e)}},{key:\"documentBlur\",value:function(t){this.end(t),this._scopeFire(\"interactions:blur\",{event:t,type:\"blur\",interaction:this})}},{key:\"end\",value:function(t){var e;this._ending=!0,t=t||this._latestPointer.event,this.interacting()&&(e=this._doPhase({event:t,interaction:this,phase:\"end\"})),!(this._ending=!1)===e&&this.stop()}},{key:\"currentAction\",value:function(){return this._interacting?this.prepared.name:null}},{key:\"interacting\",value:function(){return this._interacting}},{key:\"stop\",value:function(){this._scopeFire(\"interactions:stop\",{interaction:this}),this.interactable=this.element=null,this._interacting=!1,this._stopped=!0,this.prepared.name=this.prevEvent=null}},{key:\"getPointerIndex\",value:function(t){var e=er.pointer.getPointerId(t);return\"mouse\"===this.pointerType||\"pen\"===this.pointerType?this.pointers.length-1:er.arr.findIndex(this.pointers,function(t){return t.id===e})}},{key:\"getPointerInfo\",value:function(t){return this.pointers[this.getPointerIndex(t)]}},{key:\"updatePointer\",value:function(t,e,n,r){var o=er.pointer.getPointerId(t),i=this.getPointerIndex(t),a=this.pointers[i];return r=!1!==r&&(r||/(down|start)$/i.test(e.type)),a?a.pointer=t:(a=new tr.default(o,t,e,null,null),i=this.pointers.length,this.pointers.push(a)),er.pointer.setCoords(this.coords.cur,this.pointers.map(function(t){return t.pointer}),this._now()),er.pointer.setCoordDeltas(this.coords.delta,this.coords.prev,this.coords.cur),r&&(this.pointerIsDown=!0,a.downTime=this.coords.cur.timeStamp,a.downTarget=n,er.pointer.pointerExtend(this.downPointer,t),this.interacting()||(er.pointer.copyCoords(this.coords.start,this.coords.cur),er.pointer.copyCoords(this.coords.prev,this.coords.cur),this.downEvent=e,this.pointerWasMoved=!1)),this._updateLatestPointer(t,e,n),this._scopeFire(\"interactions:update-pointer\",{pointer:t,event:e,eventTarget:n,down:r,pointerInfo:a,pointerIndex:i,interaction:this}),i}},{key:\"removePointer\",value:function(t,e){var n=this.getPointerIndex(t);if(-1!==n){var r=this.pointers[n];this._scopeFire(\"interactions:remove-pointer\",{pointer:t,event:e,eventTarget:null,pointerIndex:n,pointerInfo:r,interaction:this}),this.pointers.splice(n,1)}}},{key:\"_updateLatestPointer\",value:function(t,e,n){this._latestPointer.pointer=t,this._latestPointer.event=e,this._latestPointer.eventTarget=n}},{key:\"destroy\",value:function(){this._latestPointer.pointer=null,this._latestPointer.event=null,this._latestPointer.eventTarget=null}},{key:\"_createPreparedEvent\",value:function(t,e,n,r){return new Qn.default(this,t,this.prepared.name,e,this.element,n,r)}},{key:\"_fireEvent\",value:function(t){this.interactable.fire(t),(!this.prevEvent||t.timeStamp>=this.prevEvent.timeStamp)&&(this.prevEvent=t)}},{key:\"_doPhase\",value:function(t){var e=t.event,n=t.phase,r=t.preEnd,o=t.type,i=this.rect;if(i&&\"move\"===n&&(er.rect.addEdges(this.edges,i,this.coords.delta[this.interactable.options.deltaSource]),i.width=i.right-i.left,i.height=i.bottom-i.top),!1===this._scopeFire(\"interactions:before-action-\".concat(n),t))return!1;var a=t.iEvent=this._createPreparedEvent(e,n,r,o);return this._scopeFire(\"interactions:action-\".concat(n),t),\"start\"===n&&(this.prevEvent=a),this._fireEvent(a),this._scopeFire(\"interactions:after-action-\".concat(n),t),!0}},{key:\"_now\",value:function(){return Date.now()}}]),c}(),cr=Gn.Interaction=sr;Gn.default=cr;var lr={};function fr(t){return(fr=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(lr,\"__esModule\",{value:!0}),lr.install=hr,lr.default=void 0;var pr=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==fr(t)&&\"function\"!=typeof t)return{default:t};var e=dr();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}(w);function dr(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return dr=function(){return t},t}function vr(t){return/^(always|never|auto)$/.test(t)?(this.options.preventDefault=t,this):pr.bool(t)?(this.options.preventDefault=t?\"always\":\"never\",this):this.options.preventDefault}function yr(t){var e=t.interaction,n=t.event;e.interactable&&e.interactable.checkAndPreventDefault(n)}function hr(r){var t=r.Interactable;t.prototype.preventDefault=vr,t.prototype.checkAndPreventDefault=function(t){return function(t,e,n){var r=t.options.preventDefault;if(\"never\"!==r)if(\"always\"!==r){if(e.events.supportsPassive&&/^touch(start|move)$/.test(n.type)){var o=(0,O.getWindow)(n.target).document,i=e.getDocOptions(o);if(!i||!i.events||!1!==i.events.passive)return}/^(mouse|pointer|touch)*(down|start)/i.test(n.type)||pr.element(n.target)&&(0,Dt.matchesSelector)(n.target,\"input,select,textarea,[contenteditable=true],[contenteditable=true] *\")||n.preventDefault()}else n.preventDefault()}(this,r,t)},r.interactions.docEvents.push({type:\"dragstart\",listener:function(t){for(var e=0;e<r.interactions.list.length;e++){var n=r.interactions.list[e];if(n.element&&(n.element===t.target||(0,Dt.nodeContains)(n.element,t.target)))return void n.interactable.checkAndPreventDefault(t)}}})}var gr={id:\"core/interactablePreventDefault\",install:hr,listeners:[\"down\",\"move\",\"up\",\"cancel\"].reduce(function(t,e){return t[\"interactions:\".concat(e)]=yr,t},{})};lr.default=gr;var br={};function mr(t){return(mr=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(br,\"__esModule\",{value:!0}),br.default=void 0;var Or=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==mr(t)&&\"function\"!=typeof t)return{default:t};var e=wr();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}(Dt);function wr(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return wr=function(){return t},t}var _r={methodOrder:[\"simulationResume\",\"mouseOrPen\",\"hasPointer\",\"idle\"],search:function(t){for(var e=0;e<_r.methodOrder.length;e++){var n;n=_r.methodOrder[e];var r=_r[n](t);if(r)return r}return null},simulationResume:function(t){var e=t.pointerType,n=t.eventType,r=t.eventTarget,o=t.scope;if(!/down|start/i.test(n))return null;for(var i=0;i<o.interactions.list.length;i++){var a=o.interactions.list[i],u=r;if(a.simulation&&a.simulation.allowResume&&a.pointerType===e)for(;u;){if(u===a.element)return a;u=Or.parentNode(u)}}return null},mouseOrPen:function(t){var e,n=t.pointerId,r=t.pointerType,o=t.eventType,i=t.scope;if(\"mouse\"!==r&&\"pen\"!==r)return null;for(var a=0;a<i.interactions.list.length;a++){var u=i.interactions.list[a];if(u.pointerType===r){if(u.simulation&&!Pr(u,n))continue;if(u.interacting())return u;e=e||u}}if(e)return e;for(var s=0;s<i.interactions.list.length;s++){var c=i.interactions.list[s];if(!(c.pointerType!==r||/down/i.test(o)&&c.simulation))return c}return null},hasPointer:function(t){for(var e=t.pointerId,n=t.scope,r=0;r<n.interactions.list.length;r++){var o=n.interactions.list[r];if(Pr(o,e))return o}return null},idle:function(t){for(var e=t.pointerType,n=t.scope,r=0;r<n.interactions.list.length;r++){var o=n.interactions.list[r];if(1===o.pointers.length){var i=o.interactable;if(i&&(!i.options.gesture||!i.options.gesture.enabled))continue}else if(2<=o.pointers.length)continue;if(!o.interacting()&&e===o.pointerType)return o}return null}};function Pr(t,e){return t.pointers.some(function(t){return t.id===e})}var xr=_r;br.default=xr;var Sr={};function jr(t){return(jr=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(Sr,\"__esModule\",{value:!0}),Sr.default=void 0;var Mr=Dr(v),kr=Dr(W),Er=(Dr(k({})),Dr(m({})),function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==jr(t)&&\"function\"!=typeof t)return{default:t};var e=Tr();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}($e));function Tr(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return Tr=function(){return t},t}function Dr(t){return t&&t.__esModule?t:{default:t}}function Ir(t,e){for(var n=0;n<t.slice().length;n++){r=t.slice()[n];var r,o=r.dropzone,i=r.element;e.dropzone=o,e.target=i,o.fire(e),e.propagationStopped=e.immediatePropagationStopped=!1}}function Ar(t,e){for(var n=function(t,e){for(var n=t.interactables,r=[],o=0;o<n.list.length;o++){var i=n.list[o];if(i.options.drop.enabled){var a=i.options.drop.accept;if(!(Er.is.element(a)&&a!==e||Er.is.string(a)&&!Er.dom.matchesSelector(e,a)||Er.is.func(a)&&!a({dropzone:i,draggableElement:e})))for(var u=Er.is.string(i.target)?i._context.querySelectorAll(i.target):Er.is.array(i.target)?i.target:[i.target],s=0;s<u.length;s++){var c;c=u[s];c!==e&&r.push({dropzone:i,element:c})}}}return r}(t,e),r=0;r<n.length;r++){var o;o=n[r];o.rect=o.dropzone.getRect(o.element)}return n}function zr(t,e,n){for(var r=t.dropState,o=t.interactable,i=t.element,a=[],u=0;u<r.activeDrops.length;u++){s=r.activeDrops[u];var s,c=s.dropzone,l=s.element,f=s.rect;a.push(c.dropCheck(e,n,o,i,l,f)?l:null)}var p=Er.dom.indexOfDeepestElement(a);return r.activeDrops[p]||null}function Rr(t,e,n){var r=t.dropState,o={enter:null,leave:null,activate:null,deactivate:null,move:null,drop:null};return\"dragstart\"===n.type&&(o.activate=new kr.default(r,n,\"dropactivate\"),o.activate.target=null,o.activate.dropzone=null),\"dragend\"===n.type&&(o.deactivate=new kr.default(r,n,\"dropdeactivate\"),o.deactivate.target=null,o.deactivate.dropzone=null),r.rejected||(r.cur.element!==r.prev.element&&(r.prev.dropzone&&(o.leave=new kr.default(r,n,\"dragleave\"),n.dragLeave=o.leave.target=r.prev.element,n.prevDropzone=o.leave.dropzone=r.prev.dropzone),r.cur.dropzone&&(o.enter=new kr.default(r,n,\"dragenter\"),n.dragEnter=r.cur.element,n.dropzone=r.cur.dropzone)),\"dragend\"===n.type&&r.cur.dropzone&&(o.drop=new kr.default(r,n,\"drop\"),n.dropzone=r.cur.dropzone,n.relatedTarget=r.cur.element),\"dragmove\"===n.type&&r.cur.dropzone&&(o.move=new kr.default(r,n,\"dropmove\"),(o.move.dragmove=n).dropzone=r.cur.dropzone)),o}function Cr(t,e){var n=t.dropState,r=n.activeDrops,o=n.cur,i=n.prev;e.leave&&i.dropzone.fire(e.leave),e.move&&o.dropzone.fire(e.move),e.enter&&o.dropzone.fire(e.enter),e.drop&&o.dropzone.fire(e.drop),e.deactivate&&Ir(r,e.deactivate),n.prev.dropzone=o.dropzone,n.prev.element=o.element}function Wr(t,e){var n=t.interaction,r=t.iEvent,o=t.event;if(\"dragmove\"===r.type||\"dragend\"===r.type){var i=n.dropState;e.dynamicDrop&&(i.activeDrops=Ar(e,n.element));var a=r,u=zr(n,a,o);i.rejected=i.rejected&&!!u&&u.dropzone===i.cur.dropzone&&u.element===i.cur.element,i.cur.dropzone=u&&u.dropzone,i.cur.element=u&&u.element,i.events=Rr(n,0,a)}}var Fr={id:\"actions/drop\",install:function(e){var t=e.actions,n=e.interactStatic,r=e.Interactable,o=e.defaults;e.usePlugin(Mr.default),r.prototype.dropzone=function(t){return function(t,e){if(Er.is.object(e)){if(t.options.drop.enabled=!1!==e.enabled,e.listeners){var n=Er.normalizeListeners(e.listeners),r=Object.keys(n).reduce(function(t,e){return t[/^(enter|leave)/.test(e)?\"drag\".concat(e):/^(activate|deactivate|move)/.test(e)?\"drop\".concat(e):e]=n[e],t},{});t.off(t.options.drop.listeners),t.on(r),t.options.drop.listeners=r}return Er.is.func(e.ondrop)&&t.on(\"drop\",e.ondrop),Er.is.func(e.ondropactivate)&&t.on(\"dropactivate\",e.ondropactivate),Er.is.func(e.ondropdeactivate)&&t.on(\"dropdeactivate\",e.ondropdeactivate),Er.is.func(e.ondragenter)&&t.on(\"dragenter\",e.ondragenter),Er.is.func(e.ondragleave)&&t.on(\"dragleave\",e.ondragleave),Er.is.func(e.ondropmove)&&t.on(\"dropmove\",e.ondropmove),/^(pointer|center)$/.test(e.overlap)?t.options.drop.overlap=e.overlap:Er.is.number(e.overlap)&&(t.options.drop.overlap=Math.max(Math.min(1,e.overlap),0)),\"accept\"in e&&(t.options.drop.accept=e.accept),\"checker\"in e&&(t.options.drop.checker=e.checker),t}if(Er.is.bool(e))return t.options.drop.enabled=e,t;return t.options.drop}(this,t)},r.prototype.dropCheck=function(t,e,n,r,o,i){return function(t,e,n,r,o,i,a){var u=!1;if(!(a=a||t.getRect(i)))return!!t.options.drop.checker&&t.options.drop.checker(e,n,u,t,i,r,o);var s=t.options.drop.overlap;if(\"pointer\"===s){var c=Er.getOriginXY(r,o,\"drag\"),l=Er.pointer.getPageXY(e);l.x+=c.x,l.y+=c.y;var f=l.x>a.left&&l.x<a.right,p=l.y>a.top&&l.y<a.bottom;u=f&&p}var d=r.getRect(o);if(d&&\"center\"===s){var v=d.left+d.width/2,y=d.top+d.height/2;u=v>=a.left&&v<=a.right&&y>=a.top&&y<=a.bottom}if(d&&Er.is.number(s)){var h=Math.max(0,Math.min(a.right,d.right)-Math.max(a.left,d.left))*Math.max(0,Math.min(a.bottom,d.bottom)-Math.max(a.top,d.top))/(d.width*d.height);u=s<=h}t.options.drop.checker&&(u=t.options.drop.checker(e,n,u,t,i,r,o));return u}(this,t,e,n,r,o,i)},n.dynamicDrop=function(t){return Er.is.bool(t)?(e.dynamicDrop=t,n):e.dynamicDrop},Er.extend(t.phaselessTypes,{dragenter:!0,dragleave:!0,dropactivate:!0,dropdeactivate:!0,dropmove:!0,drop:!0}),t.methodDict.drop=\"dropzone\",e.dynamicDrop=!1,o.actions.drop=Fr.defaults},listeners:{\"interactions:before-action-start\":function(t){var e=t.interaction;\"drag\"===e.prepared.name&&(e.dropState={cur:{dropzone:null,element:null},prev:{dropzone:null,element:null},rejected:null,events:null,activeDrops:[]})},\"interactions:after-action-start\":function(t,e){var n=t.interaction,r=(t.event,t.iEvent);if(\"drag\"===n.prepared.name){var o=n.dropState;o.activeDrops=null,o.events=null,o.activeDrops=Ar(e,n.element),o.events=Rr(n,0,r),o.events.activate&&(Ir(o.activeDrops,o.events.activate),e.fire(\"actions/drop:start\",{interaction:n,dragEvent:r}))}},\"interactions:action-move\":Wr,\"interactions:action-end\":Wr,\"interactions:after-action-move\":function(t,e){var n=t.interaction,r=t.iEvent;\"drag\"===n.prepared.name&&(Cr(n,n.dropState.events),e.fire(\"actions/drop:move\",{interaction:n,dragEvent:r}),n.dropState.events={})},\"interactions:after-action-end\":function(t,e){var n=t.interaction,r=t.iEvent;\"drag\"===n.prepared.name&&(Cr(n,n.dropState.events),e.fire(\"actions/drop:end\",{interaction:n,dragEvent:r}))},\"interactions:stop\":function(t){var e=t.interaction;if(\"drag\"===e.prepared.name){var n=e.dropState;n&&(n.activeDrops=null,n.events=null,n.cur.dropzone=null,n.cur.element=null,n.prev.dropzone=null,n.prev.element=null,n.rejected=!1)}}},getActiveDrops:Ar,getDrop:zr,getDropEvents:Rr,fireDropEvents:Cr,defaults:{enabled:!1,accept:null,overlap:\"pointer\"}},Xr=Fr;Sr.default=Xr;var Yr={};function Nr(t){return(Nr=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(Yr,\"__esModule\",{value:!0}),Yr.default=void 0;var Lr=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==Nr(t)&&\"function\"!=typeof t)return{default:t};var e=Br();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}($e);function Br(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return Br=function(){return t},t}function Ur(t){var e=t.interaction,n=t.iEvent,r=t.phase;if(\"gesture\"===e.prepared.name){var o=e.pointers.map(function(t){return t.pointer}),i=\"start\"===r,a=\"end\"===r,u=e.interactable.options.deltaSource;if(n.touches=[o[0],o[1]],i)n.distance=Lr.pointer.touchDistance(o,u),n.box=Lr.pointer.touchBBox(o),n.scale=1,n.ds=0,n.angle=Lr.pointer.touchAngle(o,u),n.da=0,e.gesture.startDistance=n.distance,e.gesture.startAngle=n.angle;else if(a){var s=e.prevEvent;n.distance=s.distance,n.box=s.box,n.scale=s.scale,n.ds=0,n.angle=s.angle,n.da=0}else n.distance=Lr.pointer.touchDistance(o,u),n.box=Lr.pointer.touchBBox(o),n.scale=n.distance/e.gesture.startDistance,n.angle=Lr.pointer.touchAngle(o,u),n.ds=n.scale-e.gesture.scale,n.da=n.angle-e.gesture.angle;e.gesture.distance=n.distance,e.gesture.angle=n.angle,Lr.is.number(n.scale)&&n.scale!==1/0&&!isNaN(n.scale)&&(e.gesture.scale=n.scale)}}var Vr={id:\"actions/gesture\",before:[\"actions/drag\",\"actions/resize\"],install:function(t){var e=t.actions,n=t.Interactable,r=t.defaults;n.prototype.gesturable=function(t){return Lr.is.object(t)?(this.options.gesture.enabled=!1!==t.enabled,this.setPerAction(\"gesture\",t),this.setOnEvents(\"gesture\",t),this):Lr.is.bool(t)?(this.options.gesture.enabled=t,this):this.options.gesture},e.map.gesture=Vr,e.methodDict.gesture=\"gesturable\",r.actions.gesture=Vr.defaults},listeners:{\"interactions:action-start\":Ur,\"interactions:action-move\":Ur,\"interactions:action-end\":Ur,\"interactions:new\":function(t){t.interaction.gesture={angle:0,distance:0,scale:1,startAngle:0,startDistance:0}},\"auto-start:check\":function(t){if(!(t.interaction.pointers.length<2)){var e=t.interactable.options.gesture;if(e&&e.enabled)return!(t.action={name:\"gesture\"})}}},defaults:{},getCursor:function(){return\"\"}},qr=Vr;Yr.default=qr;var Gr={};function $r(t){return($r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(Gr,\"__esModule\",{value:!0}),Gr.default=void 0;var Hr,Kr=to(Dt),Zr=(Hr=K)&&Hr.__esModule?Hr:{default:Hr},Jr=to(w);function Qr(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return Qr=function(){return t},t}function to(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==$r(t)&&\"function\"!=typeof t)return{default:t};var e=Qr();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}return n.default=t,e&&e.set(t,n),n}function eo(t,e,n,r,o,i,a){if(!e)return!1;if(!0===e){var u=Jr.number(i.width)?i.width:i.right-i.left,s=Jr.number(i.height)?i.height:i.bottom-i.top;if(a=Math.min(a,(\"left\"===t||\"right\"===t?u:s)/2),u<0&&(\"left\"===t?t=\"right\":\"right\"===t&&(t=\"left\")),s<0&&(\"top\"===t?t=\"bottom\":\"bottom\"===t&&(t=\"top\")),\"left\"===t)return n.x<(0<=u?i.left:i.right)+a;if(\"top\"===t)return n.y<(0<=s?i.top:i.bottom)+a;if(\"right\"===t)return n.x>(0<=u?i.right:i.left)-a;if(\"bottom\"===t)return n.y>(0<=s?i.bottom:i.top)-a}return!!Jr.element(r)&&(Jr.element(e)?e===r:Kr.matchesUpTo(r,e,o))}function no(t){var e=t.iEvent,n=t.interaction;if(\"resize\"===n.prepared.name&&n.resizeAxes){var r=e;n.interactable.options.resize.square?(\"y\"===n.resizeAxes?r.delta.x=r.delta.y:r.delta.y=r.delta.x,r.axes=\"xy\"):(r.axes=n.resizeAxes,\"x\"===n.resizeAxes?r.delta.y=0:\"y\"===n.resizeAxes&&(r.delta.x=0))}}var ro={id:\"actions/resize\",before:[\"actions/drag\"],install:function(e){var t=e.actions,n=e.browser,r=e.Interactable,o=e.defaults;ro.cursors=n.isIe9?{x:\"e-resize\",y:\"s-resize\",xy:\"se-resize\",top:\"n-resize\",left:\"w-resize\",bottom:\"s-resize\",right:\"e-resize\",topleft:\"se-resize\",bottomright:\"se-resize\",topright:\"ne-resize\",bottomleft:\"ne-resize\"}:{x:\"ew-resize\",y:\"ns-resize\",xy:\"nwse-resize\",top:\"ns-resize\",left:\"ew-resize\",bottom:\"ns-resize\",right:\"ew-resize\",topleft:\"nwse-resize\",bottomright:\"nwse-resize\",topright:\"nesw-resize\",bottomleft:\"nesw-resize\"},ro.defaultMargin=n.supportsTouch||n.supportsPointerEvent?20:10,r.prototype.resizable=function(t){return function(t,e,n){if(Jr.object(e))return t.options.resize.enabled=!1!==e.enabled,t.setPerAction(\"resize\",e),t.setOnEvents(\"resize\",e),Jr.string(e.axis)&&/^x$|^y$|^xy$/.test(e.axis)?t.options.resize.axis=e.axis:null===e.axis&&(t.options.resize.axis=n.defaults.actions.resize.axis),Jr.bool(e.preserveAspectRatio)?t.options.resize.preserveAspectRatio=e.preserveAspectRatio:Jr.bool(e.square)&&(t.options.resize.square=e.square),t;if(Jr.bool(e))return t.options.resize.enabled=e,t;return t.options.resize}(this,t,e)},t.map.resize=ro,t.methodDict.resize=\"resizable\",o.actions.resize=ro.defaults},listeners:{\"interactions:new\":function(t){t.interaction.resizeAxes=\"xy\"},\"interactions:action-start\":function(t){!function(t){var e=t.iEvent,n=t.interaction;if(\"resize\"===n.prepared.name&&n.prepared.edges){var r=e,o=n.rect;n._rects={start:(0,Zr.default)({},o),corrected:(0,Zr.default)({},o),previous:(0,Zr.default)({},o),delta:{left:0,right:0,width:0,top:0,bottom:0,height:0}},r.edges=n.prepared.edges,r.rect=n._rects.corrected,r.deltaRect=n._rects.delta}}(t),no(t)},\"interactions:action-move\":function(t){!function(t){var e=t.iEvent,n=t.interaction;if(\"resize\"===n.prepared.name&&n.prepared.edges){var r=e,o=n.interactable.options.resize.invert,i=\"reposition\"===o||\"negate\"===o,a=n.rect,u=n._rects,s=u.start,c=u.corrected,l=u.delta,f=u.previous;if((0,Zr.default)(f,c),i){if((0,Zr.default)(c,a),\"reposition\"===o){if(c.top>c.bottom){var p=c.top;c.top=c.bottom,c.bottom=p}if(c.left>c.right){var d=c.left;c.left=c.right,c.right=d}}}else c.top=Math.min(a.top,s.bottom),c.bottom=Math.max(a.bottom,s.top),c.left=Math.min(a.left,s.right),c.right=Math.max(a.right,s.left);for(var v in c.width=c.right-c.left,c.height=c.bottom-c.top,c)l[v]=c[v]-f[v];r.edges=n.prepared.edges,r.rect=c,r.deltaRect=l}}(t),no(t)},\"interactions:action-end\":function(t){var e=t.iEvent,n=t.interaction;if(\"resize\"===n.prepared.name&&n.prepared.edges){var r=e;r.edges=n.prepared.edges,r.rect=n._rects.corrected,r.deltaRect=n._rects.delta}},\"auto-start:check\":function(t){var e=t.interaction,n=t.interactable,r=t.element,o=t.rect,i=t.buttons;if(o){var a=(0,Zr.default)({},e.coords.cur.page),u=n.options.resize;if(u&&u.enabled&&(!e.pointerIsDown||!/mouse|pointer/.test(e.pointerType)||0!=(i&u.mouseButtons))){if(Jr.object(u.edges)){var s={left:!1,right:!1,top:!1,bottom:!1};for(var c in s)s[c]=eo(c,u.edges[c],a,e._latestPointer.eventTarget,r,o,u.margin||ro.defaultMargin);s.left=s.left&&!s.right,s.top=s.top&&!s.bottom,(s.left||s.right||s.top||s.bottom)&&(t.action={name:\"resize\",edges:s})}else{var l=\"y\"!==u.axis&&a.x>o.right-ro.defaultMargin,f=\"x\"!==u.axis&&a.y>o.bottom-ro.defaultMargin;(l||f)&&(t.action={name:\"resize\",axes:(l?\"x\":\"\")+(f?\"y\":\"\")})}return!t.action&&void 0}}}},defaults:{square:!1,preserveAspectRatio:!1,axis:\"xy\",margin:NaN,edges:null,invert:\"none\"},cursors:null,getCursor:function(t){var e=t.edges,n=t.axis,r=t.name,o=ro.cursors,i=null;if(n)i=o[r+n];else if(e){for(var a=\"\",u=[\"top\",\"bottom\",\"left\",\"right\"],s=0;s<u.length;s++){var c=u[s];e[c]&&(a+=c)}i=o[a]}return i},defaultMargin:null},oo=ro;Gr.default=oo;var io={};Object.defineProperty(io,\"__esModule\",{value:!0}),Object.defineProperty(io,\"drag\",{enumerable:!0,get:function(){return ao.default}}),Object.defineProperty(io,\"drop\",{enumerable:!0,get:function(){return uo.default}}),Object.defineProperty(io,\"gesture\",{enumerable:!0,get:function(){return so.default}}),Object.defineProperty(io,\"resize\",{enumerable:!0,get:function(){return co.default}}),io.default=void 0;var ao=lo(v),uo=lo(Sr),so=lo(Yr),co=lo(Gr);function lo(t){return t&&t.__esModule?t:{default:t}}var fo={id:\"actions\",install:function(t){t.usePlugin(so.default),t.usePlugin(co.default),t.usePlugin(ao.default),t.usePlugin(uo.default)}};io.default=fo;var po={};Object.defineProperty(po,\"__esModule\",{value:!0}),po.default=void 0;po.default={};var vo={};function yo(t){return(yo=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(vo,\"__esModule\",{value:!0}),vo.getContainer=Po,vo.getScroll=xo,vo.getScrollSize=function(t){bo.window(t)&&(t=window.document.body);return{x:t.scrollWidth,y:t.scrollHeight}},vo.getScrollSizeDelta=function(t,e){var n=t.interaction,r=t.element,o=n&&n.interactable.options[n.prepared.name].autoScroll;if(!o||!o.enabled)return e(),{x:0,y:0};var i=Po(o.container,n.interactable,r),a=xo(i);e();var u=xo(i);return{x:u.x-a.x,y:u.y-a.y}},vo.default=void 0;var ho,go=wo(Dt),bo=wo(w),mo=(ho=Be)&&ho.__esModule?ho:{default:ho};function Oo(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return Oo=function(){return t},t}function wo(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==yo(t)&&\"function\"!=typeof t)return{default:t};var e=Oo();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}return n.default=t,e&&e.set(t,n),n}var _o={defaults:{enabled:!1,margin:60,container:null,speed:300},now:Date.now,interaction:null,i:0,x:0,y:0,isScrolling:!1,prevTime:0,margin:0,speed:0,start:function(t){_o.isScrolling=!0,mo.default.cancel(_o.i),(t.autoScroll=_o).interaction=t,_o.prevTime=_o.now(),_o.i=mo.default.request(_o.scroll)},stop:function(){_o.isScrolling=!1,_o.interaction&&(_o.interaction.autoScroll=null),mo.default.cancel(_o.i)},scroll:function(){var t=_o.interaction,e=t.interactable,n=t.element,r=t.prepared.name,o=e.options[r].autoScroll,i=Po(o.container,e,n),a=_o.now(),u=(a-_o.prevTime)/1e3,s=o.speed*u;if(1<=s){var c={x:_o.x*s,y:_o.y*s};if(c.x||c.y){var l=xo(i);bo.window(i)?i.scrollBy(c.x,c.y):i&&(i.scrollLeft+=c.x,i.scrollTop+=c.y);var f=xo(i),p={x:f.x-l.x,y:f.y-l.y};(p.x||p.y)&&e.fire({type:\"autoscroll\",target:n,interactable:e,delta:p,interaction:t,container:i})}_o.prevTime=a}_o.isScrolling&&(mo.default.cancel(_o.i),_o.i=mo.default.request(_o.scroll))},check:function(t,e){var n=t.options;return n[e].autoScroll&&n[e].autoScroll.enabled},onInteractionMove:function(t){var e=t.interaction,n=t.pointer;if(e.interacting()&&_o.check(e.interactable,e.prepared.name))if(e.simulation)_o.x=_o.y=0;else{var r,o,i,a,u=e.interactable,s=e.element,c=e.prepared.name,l=u.options[c].autoScroll,f=Po(l.container,u,s);if(bo.window(f))a=n.clientX<_o.margin,r=n.clientY<_o.margin,o=n.clientX>f.innerWidth-_o.margin,i=n.clientY>f.innerHeight-_o.margin;else{var p=go.getElementClientRect(f);a=n.clientX<p.left+_o.margin,r=n.clientY<p.top+_o.margin,o=n.clientX>p.right-_o.margin,i=n.clientY>p.bottom-_o.margin}_o.x=o?1:a?-1:0,_o.y=i?1:r?-1:0,_o.isScrolling||(_o.margin=l.margin,_o.speed=l.speed,_o.start(e))}}};function Po(t,e,n){return(bo.string(t)?(0,Vt.getStringOptionResult)(t,e,n):t)||(0,O.getWindow)(n)}function xo(t){return bo.window(t)&&(t=window.document.body),{x:t.scrollLeft,y:t.scrollTop}}var So={id:\"auto-scroll\",install:function(t){var e=t.defaults,n=t.actions;(t.autoScroll=_o).now=function(){return t.now()},n.phaselessTypes.autoscroll=!0,e.perAction.autoScroll=_o.defaults},listeners:{\"interactions:new\":function(t){t.interaction.autoScroll=null},\"interactions:destroy\":function(t){t.interaction.autoScroll=null,_o.stop(),_o.interaction&&(_o.interaction=null)},\"interactions:stop\":_o.stop,\"interactions:action-move\":function(t){return _o.onInteractionMove(t)}}};vo.default=So;var jo={};function Mo(t){return(Mo=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(jo,\"__esModule\",{value:!0}),jo.default=void 0;var ko=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==Mo(t)&&\"function\"!=typeof t)return{default:t};var e=Eo();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}(w);function Eo(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return Eo=function(){return t},t}function To(t){return ko.bool(t)?(this.options.styleCursor=t,this):null===t?(delete this.options.styleCursor,this):this.options.styleCursor}function Do(t){return ko.func(t)?(this.options.actionChecker=t,this):null===t?(delete this.options.actionChecker,this):this.options.actionChecker}var Io={id:\"auto-start/interactableMethods\",install:function(d){var t=d.Interactable;t.prototype.getAction=function(t,e,n,r){var o,i,a,u,s,c,l,f,p=(i=e,a=n,u=r,s=d,c=(o=this).getRect(u),l=i.buttons||{0:1,1:4,3:8,4:16}[i.button],f={action:null,interactable:o,interaction:a,element:u,rect:c,buttons:l},s.fire(\"auto-start:check\",f),f.action);return this.options.actionChecker?this.options.actionChecker(t,e,p,this,r,n):p},t.prototype.ignoreFrom=(0,$e.warnOnce)(function(t){return this._backCompatOption(\"ignoreFrom\",t)},\"Interactable.ignoreFrom() has been deprecated. Use Interactble.draggable({ignoreFrom: newValue}).\"),t.prototype.allowFrom=(0,$e.warnOnce)(function(t){return this._backCompatOption(\"allowFrom\",t)},\"Interactable.allowFrom() has been deprecated. Use Interactble.draggable({allowFrom: newValue}).\"),t.prototype.actionChecker=Do,t.prototype.styleCursor=To}};jo.default=Io;var Ao={};function zo(t){return(zo=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(Ao,\"__esModule\",{value:!0}),Ao.default=void 0;var Ro,Co=(Ro=jo)&&Ro.__esModule?Ro:{default:Ro},Wo=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==zo(t)&&\"function\"!=typeof t)return{default:t};var e=Fo();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}($e);function Fo(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return Fo=function(){return t},t}function Xo(t,e,n,r,o){return e.testIgnoreAllow(e.options[t.name],n,r)&&e.options[t.name].enabled&&Bo(e,n,t,o)?t:null}function Yo(t,e,n,r,o,i,a){for(var u=0,s=r.length;u<s;u++){var c=r[u],l=o[u],f=c.getAction(e,n,t,l);if(f){var p=Xo(f,c,l,i,a);if(p)return{action:p,interactable:c,element:l}}}return{action:null,interactable:null,element:null}}function No(t,e,n,r,o){var i=[],a=[],u=r;function s(t){i.push(t),a.push(u)}for(;Wo.is.element(u);){i=[],a=[],o.interactables.forEachMatch(u,s);var c=Yo(t,e,n,i,a,r,o);if(c.action&&!c.interactable.options[c.action.name].manualStart)return c;u=Wo.dom.parentNode(u)}return{action:null,interactable:null,element:null}}function Lo(t,e,n){var r=e.action,o=e.interactable,i=e.element;r=r||{name:null},t.interactable=o,t.element=i,Wo.copyAction(t.prepared,r),t.rect=o&&r.name?o.getRect(i):null,qo(t,n),n.fire(\"autoStart:prepared\",{interaction:t})}function Bo(t,e,n,r){var o=t.options,i=o[n.name].max,a=o[n.name].maxPerElement,u=r.autoStart.maxInteractions,s=0,c=0,l=0;if(!(i&&a&&u))return!1;for(var f=0;f<r.interactions.list.length;f++){var p=r.interactions.list[f],d=p.prepared.name;if(p.interacting()){if(u<=++s)return!1;if(p.interactable===t){if(i<=(c+=d===n.name?1:0))return!1;if(p.element===e&&(l++,d===n.name&&a<=l))return!1}}}return 0<u}function Uo(t,e){return Wo.is.number(t)?(e.autoStart.maxInteractions=t,this):e.autoStart.maxInteractions}function Vo(t,e,n){var r=n.autoStart.cursorElement;r&&r!==t&&(r.style.cursor=\"\"),t.ownerDocument.documentElement.style.cursor=e,t.style.cursor=e,n.autoStart.cursorElement=e?t:null}function qo(t,e){var n=t.interactable,r=t.element,o=t.prepared;if(\"mouse\"===t.pointerType&&n&&n.options.styleCursor){var i=\"\";if(o.name){var a=n.options[o.name].cursorChecker;i=Wo.is.func(a)?a(o,n,r,t._interacting):e.actions.map[o.name].getCursor(o)}Vo(t.element,i||\"\",e)}else e.autoStart.cursorElement&&Vo(e.autoStart.cursorElement,\"\",e)}var Go={id:\"auto-start/base\",before:[\"actions\",\"actions/drag\",\"actions/resize\",\"actions/gesture\"],install:function(e){var t=e.interactStatic,n=e.defaults;e.usePlugin(Co.default),n.base.actionChecker=null,n.base.styleCursor=!0,Wo.extend(n.perAction,{manualStart:!1,max:1/0,maxPerElement:1,allowFrom:null,ignoreFrom:null,mouseButtons:1}),t.maxInteractions=function(t){return Uo(t,e)},e.autoStart={maxInteractions:1/0,withinInteractionLimit:Bo,cursorElement:null}},listeners:{\"interactions:down\":function(t,e){var n=t.interaction,r=t.pointer,o=t.event,i=t.eventTarget;n.interacting()||Lo(n,No(n,r,o,i,e),e)},\"interactions:move\":function(t,e){var n,r,o,i,a,u;r=e,o=(n=t).interaction,i=n.pointer,a=n.event,u=n.eventTarget,\"mouse\"!==o.pointerType||o.pointerIsDown||o.interacting()||Lo(o,No(o,i,a,u,r),r),function(t,e){var n=t.interaction;if(n.pointerIsDown&&!n.interacting()&&n.pointerWasMoved&&n.prepared.name){e.fire(\"autoStart:before-start\",t);var r=n.interactable,o=n.prepared.name;o&&r&&(r.options[o].manualStart||!Bo(r,n.element,n.prepared,e)?n.stop():(n.start(n.prepared,r,n.element),qo(n,e)))}}(t,e)},\"interactions:stop\":function(t,e){var n=t.interaction,r=n.interactable;r&&r.options.styleCursor&&Vo(n.element,\"\",e)}},maxInteractions:Uo,withinInteractionLimit:Bo,validateAction:Xo};Ao.default=Go;var $o={};function Ho(t){return(Ho=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty($o,\"__esModule\",{value:!0}),$o.default=void 0;var Ko,Zo=(Ko=Ao)&&Ko.__esModule?Ko:{default:Ko},Jo=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==Ho(t)&&\"function\"!=typeof t)return{default:t};var e=Qo();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}(w);function Qo(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return Qo=function(){return t},t}var ti={id:\"auto-start/dragAxis\",listeners:{\"autoStart:before-start\":function(t,r){var o=t.interaction,i=t.eventTarget,e=t.dx,n=t.dy;if(\"drag\"===o.prepared.name){var a=Math.abs(e),u=Math.abs(n),s=o.interactable.options.drag,c=s.startAxis,l=u<a?\"x\":a<u?\"y\":\"xy\";if(o.prepared.axis=\"start\"===s.lockAxis?l[0]:s.lockAxis,\"xy\"!=l&&\"xy\"!==c&&c!==l){o.prepared.name=null;function f(t){if(t!==o.interactable){var e=o.interactable.options.drag;if(!e.manualStart&&t.testIgnoreAllow(e,p,i)){var n=t.getAction(o.downPointer,o.downEvent,o,p);if(n&&\"drag\"===n.name&&function(t,e){if(!e)return;var n=e.options.drag.startAxis;return\"xy\"===t||\"xy\"===n||n===t}(l,t)&&Zo.default.validateAction(n,t,p,i,r))return t}}}for(var p=i;Jo.element(p);){var d=r.interactables.forEachMatch(p,f);if(d){o.prepared.name=\"drag\",o.interactable=d,o.element=p;break}p=(0,Dt.parentNode)(p)}}}}}};$o.default=ti;var ei={};Object.defineProperty(ei,\"__esModule\",{value:!0}),ei.default=void 0;var ni,ri=(ni=Ao)&&ni.__esModule?ni:{default:ni};function oi(t){var e=t.prepared&&t.prepared.name;if(!e)return null;var n=t.interactable.options;return n[e].hold||n[e].delay}var ii={id:\"auto-start/hold\",install:function(t){var e=t.defaults;t.usePlugin(ri.default),e.perAction.hold=0,e.perAction.delay=0},listeners:{\"interactions:new\":function(t){t.interaction.autoStartHoldTimer=null},\"autoStart:prepared\":function(t){var e=t.interaction,n=oi(e);0<n&&(e.autoStartHoldTimer=setTimeout(function(){e.start(e.prepared,e.interactable,e.element)},n))},\"interactions:move\":function(t){var e=t.interaction,n=t.duplicate;e.pointerWasMoved&&!n&&clearTimeout(e.autoStartHoldTimer)},\"autoStart:before-start\":function(t){var e=t.interaction;0<oi(e)&&(e.prepared.name=null)}},getHoldDuration:oi};ei.default=ii;var ai={};Object.defineProperty(ai,\"__esModule\",{value:!0}),Object.defineProperty(ai,\"autoStart\",{enumerable:!0,get:function(){return ui.default}}),Object.defineProperty(ai,\"dragAxis\",{enumerable:!0,get:function(){return si.default}}),Object.defineProperty(ai,\"hold\",{enumerable:!0,get:function(){return ci.default}}),ai.default=void 0;var ui=li(Ao),si=li($o),ci=li(ei);function li(t){return t&&t.__esModule?t:{default:t}}var fi={id:\"auto-start\",install:function(t){t.usePlugin(ui.default),t.usePlugin(ci.default),t.usePlugin(si.default)}};ai.default=fi;var pi={};Object.defineProperty(pi,\"__esModule\",{value:!0}),pi.default=void 0;pi.default={};var di={};Object.defineProperty(di,\"__esModule\",{value:!0}),di.default=void 0;di.default={};var vi={};function yi(t){return(yi=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(vi,\"__esModule\",{value:!0}),vi.default=void 0;var hi,gi,bi=_i(bt),mi=(_i(K),function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==yi(t)&&\"function\"!=typeof t)return{default:t};var e=wi();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}(w)),Oi=_i(O);function wi(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return wi=function(){return t},t}function _i(t){return t&&t.__esModule?t:{default:t}}(gi=hi=hi||{}).touchAction=\"touchAction\",gi.boxSizing=\"boxSizing\",gi.noListeners=\"noListeners\";var Pi={touchAction:\"https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action\",boxSizing:\"https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing\"};hi.touchAction,hi.boxSizing,hi.noListeners;function xi(t,e,n){return n.test(t.style[e]||Oi.default.window.getComputedStyle(t)[e])}var Si=\"dev-tools\",ji={id:Si,install:function(){}};vi.default=ji;var Mi={};Object.defineProperty(Mi,\"__esModule\",{value:!0}),Mi.default=void 0;Mi.default={};var ki={};function Ei(t){return(Ei=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(ki,\"__esModule\",{value:!0}),ki.getRectOffset=Ni,ki.default=void 0;var Ti=zi(We),Di=zi(K),Ii=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==Ei(t)&&\"function\"!=typeof t)return{default:t};var e=Ai();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}(Vt);function Ai(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return Ai=function(){return t},t}function zi(t){return t&&t.__esModule?t:{default:t}}function Ri(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(\"undefined\"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,u=t[Symbol.iterator]();!(r=(a=u.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==u.return||u.return()}finally{if(o)throw i}}return n}(t,e)||function(t,e){if(!t)return;if(\"string\"==typeof t)return Ci(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Ci(t,e)}(t,e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function Ci(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function Wi(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Fi(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var Xi=function(){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,e),Fi(this,\"states\",[]),Fi(this,\"startOffset\",{left:0,right:0,top:0,bottom:0}),Fi(this,\"startDelta\",null),Fi(this,\"result\",null),Fi(this,\"endResult\",null),Fi(this,\"edges\",void 0),Fi(this,\"interaction\",void 0),this.interaction=t,this.result=Yi()}var t,n,r;return t=e,(n=[{key:\"start\",value:function(t,e){var n=t.phase,r=this.interaction,o=function(t){var n=t.interactable.options[t.prepared.name],e=n.modifiers;if(e&&e.length)return e.filter(function(t){return!t.options||!1!==t.options.enabled});return[\"snap\",\"snapSize\",\"snapEdges\",\"restrict\",\"restrictEdges\",\"restrictSize\"].map(function(t){var e=n[t];return e&&e.enabled&&{options:e,methods:e._methods}}).filter(function(t){return!!t})}(r);this.prepareStates(o),this.edges=(0,Di.default)({},r.edges),this.startOffset=Ni(r.rect,e);var i={phase:n,pageCoords:e,preEnd:!(this.startDelta={x:0,y:0})};return this.result=Yi(),this.startAll(i),this.result=this.setAll(i)}},{key:\"fillArg\",value:function(t){var e=this.interaction;t.interaction=e,t.interactable=e.interactable,t.element=e.element,t.rect=t.rect||e.rect,t.edges=this.edges,t.startOffset=this.startOffset}},{key:\"startAll\",value:function(t){this.fillArg(t);for(var e=0;e<this.states.length;e++){var n=this.states[e];n.methods.start&&(t.state=n).methods.start(t)}}},{key:\"setAll\",value:function(t){this.fillArg(t);var e=t.phase,n=t.preEnd,r=t.skipModifiers,o=t.rect;t.coords=(0,Di.default)({},t.pageCoords),t.rect=(0,Di.default)({},o);for(var i=r?this.states.slice(r):this.states,a=Yi(t.coords,t.rect),u=0;u<i.length;u++){var s=i[u],c=s.options,l=(0,Di.default)({},t.coords),f=null;s.methods.set&&this.shouldDo(c,n,e)&&(f=(t.state=s).methods.set(t),Ii.addEdges(this.interaction.edges,t.rect,{x:t.coords.x-l.x,y:t.coords.y-l.y})),a.eventProps.push(f)}a.delta.x=t.coords.x-t.pageCoords.x,a.delta.y=t.coords.y-t.pageCoords.y,a.rectDelta.left=t.rect.left-o.left,a.rectDelta.right=t.rect.right-o.right,a.rectDelta.top=t.rect.top-o.top,a.rectDelta.bottom=t.rect.bottom-o.bottom;var p=this.result.coords,d=this.result.rect;if(p&&d){var v=a.rect.left!==d.left||a.rect.right!==d.right||a.rect.top!==d.top||a.rect.bottom!==d.bottom;a.changed=v||p.x!==a.coords.x||p.y!==a.coords.y}return a}},{key:\"applyToInteraction\",value:function(t){var e=this.interaction,n=t.phase,r=e.coords.cur,o=e.coords.start,i=this.result,a=this.startDelta,u=i.delta;\"start\"===n&&(0,Di.default)(this.startDelta,i.delta);for(var s=0;s<[[o,a],[r,u]].length;s++){var c=Ri([[o,a],[r,u]][s],2),l=c[0],f=c[1];l.page.x+=f.x,l.page.y+=f.y,l.client.x+=f.x,l.client.y+=f.y}var p=this.result.rectDelta,d=t.rect||e.rect;d.left+=p.left,d.right+=p.right,d.top+=p.top,d.bottom+=p.bottom,d.width=d.right-d.left,d.height=d.bottom-d.top}},{key:\"setAndApply\",value:function(t){var e=this.interaction,n=t.phase,r=t.preEnd,o=t.skipModifiers,i=this.setAll({preEnd:r,phase:n,pageCoords:t.modifiedCoords||e.coords.cur.page});if(!(this.result=i).changed&&(!o||o<this.states.length)&&e.interacting())return!1;if(t.modifiedCoords){var a=e.coords.cur.page,u=t.modifiedCoords.x-a.x,s=t.modifiedCoords.y-a.y;i.coords.x+=u,i.coords.y+=s,i.delta.x+=u,i.delta.y+=s}this.applyToInteraction(t)}},{key:\"beforeEnd\",value:function(t){var e=t.interaction,n=t.event,r=this.states;if(r&&r.length){for(var o=!1,i=0;i<r.length;i++){var a=r[i],u=(t.state=a).options,s=a.methods,c=s.beforeEnd&&s.beforeEnd(t);if(c)return this.endResult=c,!1;o=o||!o&&this.shouldDo(u,!0,t.phase,!0)}o&&e.move({event:n,preEnd:!0})}}},{key:\"stop\",value:function(t){var e=t.interaction;if(this.states&&this.states.length){var n=(0,Di.default)({states:this.states,interactable:e.interactable,element:e.element,rect:null},t);this.fillArg(n);for(var r=0;r<this.states.length;r++){var o=this.states[r];(n.state=o).methods.stop&&o.methods.stop(n)}this.states=null,this.endResult=null}}},{key:\"prepareStates\",value:function(t){this.states=[];for(var e=0;e<t.length;e++){var n=t[e],r=n.options,o=n.methods,i=n.name;r&&!1===r.enabled||this.states.push({options:r,methods:o,index:e,name:i})}return this.states}},{key:\"restoreInteractionCoords\",value:function(t){var e=t.interaction,n=e.coords,r=e.rect,o=e.modification;if(o.result){for(var i=o.startDelta,a=o.result,u=a.delta,s=a.rectDelta,c=[[n.start,i],[n.cur,u]],l=0;l<c.length;l++){var f=Ri(c[l],2),p=f[0],d=f[1];p.page.x-=d.x,p.page.y-=d.y,p.client.x-=d.x,p.client.y-=d.y}r.left-=s.left,r.right-=s.right,r.top-=s.top,r.bottom-=s.bottom}}},{key:\"shouldDo\",value:function(t,e,n,r){return!(!t||!1===t.enabled||r&&!t.endOnly||t.endOnly&&!e||\"start\"===n&&!t.setStart)}},{key:\"copyFrom\",value:function(t){this.startOffset=t.startOffset,this.startDelta=t.startDelta,this.edges=t.edges,this.states=t.states.map(function(t){return(0,Ti.default)(t)}),this.result=Yi((0,Di.default)({},t.result.coords),(0,Di.default)({},t.result.rect))}},{key:\"destroy\",value:function(){for(var t in this)this[t]=null}}])&&Wi(t.prototype,n),r&&Wi(t,r),e}();function Yi(t,e){return{rect:e,coords:t,delta:{x:0,y:0},rectDelta:{left:0,right:0,top:0,bottom:0},eventProps:[],changed:!0}}function Ni(t,e){return t?{left:e.x-t.left,top:e.y-t.top,right:t.right-e.x,bottom:t.bottom-e.y}:{left:0,top:0,right:0,bottom:0}}ki.default=Xi;var Li={};Object.defineProperty(Li,\"__esModule\",{value:!0}),Li.makeModifier=function(t,r){function e(t){var e=t||{};for(var n in e.enabled=!1!==e.enabled,o)n in e||(e[n]=o[n]);return{options:e,methods:i,name:r}}var o=t.defaults,i={start:t.start,set:t.set,beforeEnd:t.beforeEnd,stop:t.stop};r&&\"string\"==typeof r&&(e._defaults=o,e._methods=i);return e},Li.addEventModifiers=Vi,Li.default=void 0;var Bi,Ui=(Bi=ki)&&Bi.__esModule?Bi:{default:Bi};function Vi(t){var e=t.iEvent,n=t.interaction.modification.result;n&&(e.modifiers=n.eventProps)}var qi={id:\"modifiers/base\",install:function(t){t.defaults.perAction.modifiers=[]},listeners:{\"interactions:new\":function(t){var e=t.interaction;e.modification=new Ui.default(e)},\"interactions:before-action-start\":function(t){var e=t.interaction.modification;e.start(t,t.interaction.coords.start.page),t.interaction.edges=e.edges,e.applyToInteraction(t)},\"interactions:before-action-move\":function(t){return t.interaction.modification.setAndApply(t)},\"interactions:before-action-end\":function(t){return t.interaction.modification.beforeEnd(t)},\"interactions:action-start\":Vi,\"interactions:action-move\":Vi,\"interactions:action-end\":Vi,\"interactions:after-action-start\":function(t){return t.interaction.modification.restoreInteractionCoords(t)},\"interactions:after-action-move\":function(t){return t.interaction.modification.restoreInteractionCoords(t)},\"interactions:stop\":function(t){return t.interaction.modification.stop(t)}},before:[\"actions\",\"action/drag\",\"actions/resize\",\"actions/gesture\"]};Li.default=qi;var Gi={};function $i(t){return($i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(Gi,\"__esModule\",{value:!0}),Gi.addTotal=Zi,Gi.applyPending=Qi,Gi.default=void 0;var Hi=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==$i(t)&&\"function\"!=typeof t)return{default:t};var e=Ki();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}(Vt);function Ki(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return Ki=function(){return t},t}function Zi(t){t.pointerIsDown&&(ea(t.coords.cur,t.offset.total),t.offset.pending.x=0,t.offset.pending.y=0)}function Ji(t){Qi(t.interaction)}function Qi(t){if(!(e=t).offset.pending.x&&!e.offset.pending.y)return!1;var e,n=t.offset.pending;return ea(t.coords.cur,n),ea(t.coords.delta,n),Hi.addEdges(t.edges,t.rect,n),n.x=0,!(n.y=0)}function ta(t){var e=t.x,n=t.y;this.offset.pending.x+=e,this.offset.pending.y+=n,this.offset.total.x+=e,this.offset.total.y+=n}function ea(t,e){var n=t.page,r=t.client,o=e.x,i=e.y;n.x+=o,n.y+=i,r.x+=o,r.y+=i}Gn._ProxyMethods.offsetBy=\"\";var na={id:\"offset\",install:function(t){t.Interaction.prototype.offsetBy=ta},listeners:{\"interactions:new\":function(t){t.interaction.offset={total:{x:0,y:0},pending:{x:0,y:0}}},\"interactions:update-pointer\":function(t){return Zi(t.interaction)},\"interactions:before-action-start\":Ji,\"interactions:before-action-move\":Ji,\"interactions:before-action-end\":function(t){var e=t.interaction;if(Qi(e))return e.move({offset:!0}),e.end(),!1},\"interactions:stop\":function(t){var e=t.interaction;e.offset.total.x=0,e.offset.total.y=0,e.offset.pending.x=0,e.offset.pending.y=0}}};Gi.default=na;var ra={};function oa(t){return(oa=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(ra,\"__esModule\",{value:!0}),ra.default=ra.InertiaState=void 0;var ia=va(ki),aa=da(Li),ua=va(Gi),sa=da(Dt),ca=va(te),la=da(w),fa=va(Be);function pa(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return pa=function(){return t},t}function da(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==oa(t)&&\"function\"!=typeof t)return{default:t};var e=pa();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}return n.default=t,e&&e.set(t,n),n}function va(t){return t&&t.__esModule?t:{default:t}}function ya(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function ha(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var ga=function(){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,e),ha(this,\"active\",!1),ha(this,\"isModified\",!1),ha(this,\"smoothEnd\",!1),ha(this,\"allowResume\",!1),ha(this,\"modification\",null),ha(this,\"modifierCount\",0),ha(this,\"modifierArg\",null),ha(this,\"startCoords\",null),ha(this,\"t0\",0),ha(this,\"v0\",0),ha(this,\"te\",0),ha(this,\"targetOffset\",null),ha(this,\"modifiedOffset\",null),ha(this,\"currentOffset\",null),ha(this,\"lambda_v0\",0),ha(this,\"one_ve_v0\",0),ha(this,\"timeout\",null),ha(this,\"interaction\",void 0),this.interaction=t}var t,n,r;return t=e,(n=[{key:\"start\",value:function(t){var e=this.interaction,n=ba(e);if(!n||!n.enabled)return!1;var r=e.coords.velocity.client,o=(0,ca.default)(r.x,r.y),i=this.modification||(this.modification=new ia.default(e));if(i.copyFrom(e.modification),this.t0=e._now(),this.allowResume=n.allowResume,this.v0=o,this.currentOffset={x:0,y:0},this.startCoords=e.coords.cur.page,this.modifierArg={interaction:e,interactable:e.interactable,element:e.element,rect:e.rect,edges:e.edges,pageCoords:this.startCoords,preEnd:!0,phase:\"inertiastart\"},this.t0-e.coords.cur.timeStamp<50&&o>n.minSpeed&&o>n.endSpeed)this.startInertia();else{if(i.result=i.setAll(this.modifierArg),!i.result.changed)return!1;this.startSmoothEnd()}return e.modification.result.rect=null,e.offsetBy(this.targetOffset),e._doPhase({interaction:e,event:t,phase:\"inertiastart\"}),e.offsetBy({x:-this.targetOffset.x,y:-this.targetOffset.y}),e.modification.result.rect=null,this.active=!0,e.simulation=this,!0}},{key:\"startInertia\",value:function(){var t=this,e=this.interaction.coords.velocity.client,n=ba(this.interaction),r=n.resistance,o=-Math.log(n.endSpeed/this.v0)/r;this.targetOffset={x:(e.x-o)/r,y:(e.y-o)/r},this.te=o,this.lambda_v0=r/this.v0,this.one_ve_v0=1-n.endSpeed/this.v0;var i=this.modification,a=this.modifierArg;a.pageCoords={x:this.startCoords.x+this.targetOffset.x,y:this.startCoords.y+this.targetOffset.y},i.result=i.setAll(a),i.result.changed&&(this.isModified=!0,this.modifiedOffset={x:this.targetOffset.x+i.result.delta.x,y:this.targetOffset.y+i.result.delta.y}),this.timeout=fa.default.request(function(){return t.inertiaTick()})}},{key:\"startSmoothEnd\",value:function(){var t=this;this.smoothEnd=!0,this.isModified=!0,this.targetOffset={x:this.modification.result.delta.x,y:this.modification.result.delta.y},this.timeout=fa.default.request(function(){return t.smoothEndTick()})}},{key:\"inertiaTick\",value:function(){var t,e,n,r,o,i,a,u=this,s=this.interaction,c=ba(s).resistance,l=(s._now()-this.t0)/1e3;if(l<this.te){var f,p=1-(Math.exp(-c*l)-this.lambda_v0)/this.one_ve_v0,d={x:(f=this.isModified?(e=t=0,n=this.targetOffset.x,r=this.targetOffset.y,o=this.modifiedOffset.x,i=this.modifiedOffset.y,{x:ma(a=p,t,n,o),y:ma(a,e,r,i)}):{x:this.targetOffset.x*p,y:this.targetOffset.y*p}).x-this.currentOffset.x,y:f.y-this.currentOffset.y};this.currentOffset.x+=d.x,this.currentOffset.y+=d.y,s.offsetBy(d),s.move(),this.timeout=fa.default.request(function(){return u.inertiaTick()})}else s.offsetBy({x:this.modifiedOffset.x-this.currentOffset.x,y:this.modifiedOffset.y-this.currentOffset.y}),this.end()}},{key:\"smoothEndTick\",value:function(){var t=this,e=this.interaction,n=e._now()-this.t0,r=ba(e).smoothEndDuration;if(n<r){var o=Oa(n,0,this.targetOffset.x,r),i=Oa(n,0,this.targetOffset.y,r),a={x:o-this.currentOffset.x,y:i-this.currentOffset.y};this.currentOffset.x+=a.x,this.currentOffset.y+=a.y,e.offsetBy(a),e.move({skipModifiers:this.modifierCount}),this.timeout=fa.default.request(function(){return t.smoothEndTick()})}else e.offsetBy({x:this.targetOffset.x-this.currentOffset.x,y:this.targetOffset.y-this.currentOffset.y}),this.end()}},{key:\"resume\",value:function(t){var e=t.pointer,n=t.event,r=t.eventTarget,o=this.interaction;o.offsetBy({x:-this.currentOffset.x,y:-this.currentOffset.y}),o.updatePointer(e,n,r,!0),o._doPhase({interaction:o,event:n,phase:\"resume\"}),(0,Oe.copyCoords)(o.coords.prev,o.coords.cur),this.stop()}},{key:\"end\",value:function(){this.interaction.move(),this.interaction.end(),this.stop()}},{key:\"stop\",value:function(){this.active=this.smoothEnd=!1,this.interaction.simulation=null,fa.default.cancel(this.timeout)}}])&&ya(t.prototype,n),r&&ya(t,r),e}();function ba(t){var e=t.interactable,n=t.prepared;return e&&e.options&&n.name&&e.options[n.name].inertia}function ma(t,e,n,r){var o=1-t;return o*o*e+2*o*t*n+t*t*r}function Oa(t,e,n,r){return-n*(t/=r)*(t-2)+e}ra.InertiaState=ga;var wa={id:\"inertia\",before:[\"modifiers/base\"],install:function(t){var e=t.defaults;t.usePlugin(ua.default),t.usePlugin(aa.default),t.actions.phases.inertiastart=!0,t.actions.phases.resume=!0,e.perAction.inertia={enabled:!1,resistance:10,minSpeed:100,endSpeed:10,allowResume:!0,smoothEndDuration:300}},listeners:{\"interactions:new\":function(t){var e=t.interaction;e.inertia=new ga(e)},\"interactions:before-action-end\":function(t){var e=t.interaction,n=t.event;return(!e._interacting||e.simulation||!e.inertia.start(n))&&null},\"interactions:down\":function(t){var e=t.interaction,n=t.eventTarget,r=e.inertia;if(r.active)for(var o=n;la.element(o);){if(o===e.element){r.resume(t);break}o=sa.parentNode(o)}},\"interactions:stop\":function(t){var e=t.interaction.inertia;e.active&&e.stop()},\"interactions:before-action-resume\":function(t){var e=t.interaction.modification;e.stop(t),e.start(t,t.interaction.coords.cur.page),e.applyToInteraction(t)},\"interactions:before-action-inertiastart\":function(t){return t.interaction.modification.setAndApply(t)},\"interactions:action-resume\":aa.addEventModifiers,\"interactions:action-inertiastart\":aa.addEventModifiers,\"interactions:after-action-inertiastart\":function(t){return t.interaction.modification.restoreInteractionCoords(t)},\"interactions:after-action-resume\":function(t){return t.interaction.modification.restoreInteractionCoords(t)}}};ra.default=wa;var _a,Pa={};function xa(t){return(xa=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(Pa,\"__esModule\",{value:!0}),Pa.init=Pa.default=void 0;var Sa=new(((_a=m({}))&&_a.__esModule?_a:{default:_a}).default),ja=Sa.interactStatic;Pa.default=ja;function Ma(t){return Sa.init(t)}Pa.init=Ma,\"object\"===(\"undefined\"==typeof window?\"undefined\":xa(window))&&window&&Ma(window);var ka={};Object.defineProperty(ka,\"__esModule\",{value:!0}),ka.aspectRatio=ka.default=void 0;var Ea=Da(K),Ta=Da(ki);function Da(t){return t&&t.__esModule?t:{default:t}}function Ia(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function Aa(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Ia(Object(n),!0).forEach(function(t){za(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Ia(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function za(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var Ra={start:function(t){var e=t.state,n=t.rect,r=t.edges,o=t.pageCoords,i=e.options.ratio,a=e.options,u=a.equalDelta,s=a.modifiers;\"preserve\"===i&&(i=n.width/n.height),e.startCoords=(0,Ea.default)({},o),e.startRect=(0,Ea.default)({},n),e.ratio=i,e.equalDelta=u;var c=e.linkedEdges={top:r.top||r.left&&!r.bottom,left:r.left||r.top&&!r.right,bottom:r.bottom||r.right&&!r.top,right:r.right||r.bottom&&!r.left};if(e.xIsPrimaryAxis=!(!r.left&&!r.right),e.equalDelta)e.edgeSign=(c.left?1:-1)*(c.top?1:-1);else{var l=e.xIsPrimaryAxis?c.top:c.left;e.edgeSign=l?-1:1}if((0,Ea.default)(t.edges,c),s&&s.length){var f=new Ta.default(t.interaction);f.copyFrom(t.interaction.modification),f.prepareStates(s),(e.subModification=f).startAll(Aa({},t))}},set:function(t){var e=t.state,n=t.rect,r=t.coords,o=(0,Ea.default)({},r),i=e.equalDelta?Ca:Wa;if(i(e,e.xIsPrimaryAxis,r,n),!e.subModification)return null;var a=(0,Ea.default)({},n);(0,Vt.addEdges)(e.linkedEdges,a,{x:r.x-o.x,y:r.y-o.y});var u=e.subModification.setAll(Aa({},t,{rect:a,edges:e.linkedEdges,pageCoords:r,prevCoords:r,prevRect:a})),s=u.delta;u.changed&&(i(e,Math.abs(s.x)>Math.abs(s.y),u.coords,u.rect),(0,Ea.default)(r,u.coords));return u.eventProps},defaults:{ratio:\"preserve\",equalDelta:!1,modifiers:[],enabled:!1}};function Ca(t,e,n){var r=t.startCoords,o=t.edgeSign;e?n.y=r.y+(n.x-r.x)*o:n.x=r.x+(n.y-r.y)*o}function Wa(t,e,n,r){var o=t.startRect,i=t.startCoords,a=t.ratio,u=t.edgeSign;if(e){var s=r.width/a;n.y=i.y+(s-o.height)*u}else{var c=r.height*a;n.x=i.x+(c-o.width)*u}}ka.aspectRatio=Ra;var Fa=(0,Li.makeModifier)(Ra,\"aspectRatio\");ka.default=Fa;var Xa={};Object.defineProperty(Xa,\"__esModule\",{value:!0}),Xa.default=void 0;function Ya(){}Ya._defaults={};var Na=Ya;Xa.default=Na;var La={};function Ba(t){return(Ba=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(La,\"__esModule\",{value:!0}),La.getRestrictionRect=Ka,La.restrict=La.default=void 0;var Ua,Va=(Ua=K)&&Ua.__esModule?Ua:{default:Ua},qa=Ha(w),Ga=Ha(Vt);function $a(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return $a=function(){return t},t}function Ha(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==Ba(t)&&\"function\"!=typeof t)return{default:t};var e=$a();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}return n.default=t,e&&e.set(t,n),n}function Ka(t,e,n){return qa.func(t)?Ga.resolveRectLike(t,e.interactable,e.element,[n.x,n.y,e]):Ga.resolveRectLike(t,e.interactable,e.element)}var Za={start:function(t){var e=t.rect,n=t.startOffset,r=t.state,o=t.interaction,i=t.pageCoords,a=r.options,u=a.elementRect,s=(0,Va.default)({left:0,top:0,right:0,bottom:0},a.offset||{});if(e&&u){var c=Ka(a.restriction,o,i);if(c){var l=c.right-c.left-e.width,f=c.bottom-c.top-e.height;l<0&&(s.left+=l,s.right+=l),f<0&&(s.top+=f,s.bottom+=f)}s.left+=n.left-e.width*u.left,s.top+=n.top-e.height*u.top,s.right+=n.right-e.width*(1-u.right),s.bottom+=n.bottom-e.height*(1-u.bottom)}r.offset=s},set:function(t){var e=t.coords,n=t.interaction,r=t.state,o=r.options,i=r.offset,a=Ka(o.restriction,n,e);if(a){var u=Ga.xywhToTlbr(a);e.x=Math.max(Math.min(u.right-i.right,e.x),u.left+i.left),e.y=Math.max(Math.min(u.bottom-i.bottom,e.y),u.top+i.top)}},defaults:{restriction:null,elementRect:null,offset:null,endOnly:!1,enabled:!1}};La.restrict=Za;var Ja=(0,Li.makeModifier)(Za,\"restrict\");La.default=Ja;var Qa={};function tu(t){return(tu=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(Qa,\"__esModule\",{value:!0}),Qa.restrictEdges=Qa.default=void 0;var eu,nu=(eu=K)&&eu.__esModule?eu:{default:eu},ru=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==tu(t)&&\"function\"!=typeof t)return{default:t};var e=ou();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}(Vt);function ou(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return ou=function(){return t},t}var iu={top:1/0,left:1/0,bottom:-1/0,right:-1/0},au={top:-1/0,left:-1/0,bottom:1/0,right:1/0};function uu(t,e){for(var n=[\"top\",\"left\",\"bottom\",\"right\"],r=0;r<n.length;r++){var o=n[r];o in t||(t[o]=e[o])}return t}var su={noInner:iu,noOuter:au,start:function(t){var e,n=t.interaction,r=t.startOffset,o=t.state,i=o.options;if(i){var a=(0,La.getRestrictionRect)(i.offset,n,n.coords.start.page);e=ru.rectToXY(a)}e=e||{x:0,y:0},o.offset={top:e.y+r.top,left:e.x+r.left,bottom:e.y-r.bottom,right:e.x-r.right}},set:function(t){var e=t.coords,n=t.edges,r=t.interaction,o=t.state,i=o.offset,a=o.options;if(n){var u=(0,nu.default)({},e),s=(0,La.getRestrictionRect)(a.inner,r,u)||{},c=(0,La.getRestrictionRect)(a.outer,r,u)||{};uu(s,iu),uu(c,au),n.top?e.y=Math.min(Math.max(c.top+i.top,u.y),s.top+i.top):n.bottom&&(e.y=Math.max(Math.min(c.bottom+i.bottom,u.y),s.bottom+i.bottom)),n.left?e.x=Math.min(Math.max(c.left+i.left,u.x),s.left+i.left):n.right&&(e.x=Math.max(Math.min(c.right+i.right,u.x),s.right+i.right))}},defaults:{inner:null,outer:null,offset:null,endOnly:!1,enabled:!1}};Qa.restrictEdges=su;var cu=(0,Li.makeModifier)(su,\"restrictEdges\");Qa.default=cu;var lu,fu={};Object.defineProperty(fu,\"__esModule\",{value:!0}),fu.restrictRect=fu.default=void 0;var pu=(0,((lu=K)&&lu.__esModule?lu:{default:lu}).default)({get elementRect(){return{top:0,left:0,bottom:1,right:1}},set elementRect(t){}},La.restrict.defaults),du={start:La.restrict.start,set:La.restrict.set,defaults:pu};fu.restrictRect=du;var vu=(0,Li.makeModifier)(du,\"restrictRect\");fu.default=vu;var yu={};function hu(t){return(hu=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(yu,\"__esModule\",{value:!0}),yu.restrictSize=yu.default=void 0;var gu,bu=(gu=K)&&gu.__esModule?gu:{default:gu},mu=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==hu(t)&&\"function\"!=typeof t)return{default:t};var e=Ou();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}(Vt);function Ou(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return Ou=function(){return t},t}var wu={width:-1/0,height:-1/0},_u={width:1/0,height:1/0};var Pu={start:function(t){return Qa.restrictEdges.start(t)},set:function(t){var e=t.interaction,n=t.state,r=t.rect,o=t.edges,i=n.options;if(o){var a=mu.tlbrToXywh((0,La.getRestrictionRect)(i.min,e,t.coords))||wu,u=mu.tlbrToXywh((0,La.getRestrictionRect)(i.max,e,t.coords))||_u;n.options={endOnly:i.endOnly,inner:(0,bu.default)({},Qa.restrictEdges.noInner),outer:(0,bu.default)({},Qa.restrictEdges.noOuter)},o.top?(n.options.inner.top=r.bottom-a.height,n.options.outer.top=r.bottom-u.height):o.bottom&&(n.options.inner.bottom=r.top+a.height,n.options.outer.bottom=r.top+u.height),o.left?(n.options.inner.left=r.right-a.width,n.options.outer.left=r.right-u.width):o.right&&(n.options.inner.right=r.left+a.width,n.options.outer.right=r.left+u.width),Qa.restrictEdges.set(t),n.options=i}},defaults:{min:null,max:null,endOnly:!1,enabled:!1}};yu.restrictSize=Pu;var xu=(0,Li.makeModifier)(Pu,\"restrictSize\");yu.default=xu;var Su={};Object.defineProperty(Su,\"__esModule\",{value:!0}),Su.default=void 0;function ju(){}ju._defaults={};var Mu=ju;Su.default=Mu;var ku={};function Eu(t){return(Eu=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(ku,\"__esModule\",{value:!0}),ku.snap=ku.default=void 0;var Tu=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==Eu(t)&&\"function\"!=typeof t)return{default:t};var e=Du();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}($e);function Du(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return Du=function(){return t},t}var Iu={start:function(t){var e,n,r,o=t.interaction,i=t.interactable,a=t.element,u=t.rect,s=t.state,c=t.startOffset,l=s.options,f=l.offsetWithOrigin?(n=(e=t).interaction.element,Tu.rect.rectToXY(Tu.rect.resolveRectLike(e.state.options.origin,null,null,[n]))||Tu.getOriginXY(e.interactable,n,e.interaction.prepared.name)):{x:0,y:0};if(\"startCoords\"===l.offset)r={x:o.coords.start.page.x,y:o.coords.start.page.y};else{var p=Tu.rect.resolveRectLike(l.offset,i,a,[o]);(r=Tu.rect.rectToXY(p)||{x:0,y:0}).x+=f.x,r.y+=f.y}var d=l.relativePoints;s.offsets=u&&d&&d.length?d.map(function(t,e){return{index:e,relativePoint:t,x:c.left-u.width*t.x+r.x,y:c.top-u.height*t.y+r.y}}):[Tu.extend({index:0,relativePoint:null},r)]},set:function(t){var e=t.interaction,n=t.coords,r=t.state,o=r.options,i=r.offsets,a=Tu.getOriginXY(e.interactable,e.element,e.prepared.name),u=Tu.extend({},n),s=[];o.offsetWithOrigin||(u.x-=a.x,u.y-=a.y);for(var c=0;c<i.length;c++)for(var l=i[c],f=u.x-l.x,p=u.y-l.y,d=0,v=o.targets.length;d<v;d++){var y=o.targets[d],h=void 0;(h=Tu.is.func(y)?y(f,p,e,l,d):y)&&s.push({x:(Tu.is.number(h.x)?h.x:f)+l.x,y:(Tu.is.number(h.y)?h.y:p)+l.y,range:Tu.is.number(h.range)?h.range:o.range,source:y,index:d,offset:l})}for(var g={target:null,inRange:!1,distance:0,range:0,delta:{x:0,y:0}},b=0;b<s.length;b++){var m=s[b],O=m.range,w=m.x-u.x,_=m.y-u.y,P=Tu.hypot(w,_),x=P<=O;O===1/0&&g.inRange&&g.range!==1/0&&(x=!1),g.target&&!(x?g.inRange&&O!==1/0?P/O<g.distance/g.range:O===1/0&&g.range!==1/0||P<g.distance:!g.inRange&&P<g.distance)||(g.target=m,g.distance=P,g.range=O,g.inRange=x,g.delta.x=w,g.delta.y=_)}return g.inRange&&(n.x=g.target.x,n.y=g.target.y),r.closest=g},defaults:{range:1/0,targets:null,offset:null,offsetWithOrigin:!0,origin:null,relativePoints:null,endOnly:!1,enabled:!1}};ku.snap=Iu;var Au=(0,Li.makeModifier)(Iu,\"snap\");ku.default=Au;var zu={};function Ru(t){return(Ru=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(zu,\"__esModule\",{value:!0}),zu.snapSize=zu.default=void 0;var Cu,Wu=(Cu=K)&&Cu.__esModule?Cu:{default:Cu},Fu=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==Ru(t)&&\"function\"!=typeof t)return{default:t};var e=Xu();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}(w);function Xu(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return Xu=function(){return t},t}function Yu(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(\"undefined\"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,u=t[Symbol.iterator]();!(r=(a=u.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==u.return||u.return()}finally{if(o)throw i}}return n}(t,e)||function(t,e){if(!t)return;if(\"string\"==typeof t)return Nu(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Nu(t,e)}(t,e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function Nu(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var Lu={start:function(t){var e=t.state,n=t.edges,r=e.options;if(!n)return null;t.state={options:{targets:null,relativePoints:[{x:n.left?0:1,y:n.top?0:1}],offset:r.offset||\"self\",origin:{x:0,y:0},range:r.range}},e.targetFields=e.targetFields||[[\"width\",\"height\"],[\"x\",\"y\"]],ku.snap.start(t),e.offsets=t.state.offsets,t.state=e},set:function(t){var e=t.interaction,n=t.state,r=t.coords,o=n.options,i=n.offsets,a={x:r.x-i[0].x,y:r.y-i[0].y};n.options=(0,Wu.default)({},o),n.options.targets=[];for(var u=0;u<(o.targets||[]).length;u++){var s=(o.targets||[])[u],c=void 0;if(c=Fu.func(s)?s(a.x,a.y,e):s){for(var l=0;l<n.targetFields.length;l++){var f=Yu(n.targetFields[l],2),p=f[0],d=f[1];if(p in c||d in c){c.x=c[p],c.y=c[d];break}}n.options.targets.push(c)}}var v=ku.snap.set(t);return n.options=o,v},defaults:{range:1/0,targets:null,offset:null,endOnly:!1,enabled:!1}};zu.snapSize=Lu;var Bu=(0,Li.makeModifier)(Lu,\"snapSize\");zu.default=Bu;var Uu={};Object.defineProperty(Uu,\"__esModule\",{value:!0}),Uu.snapEdges=Uu.default=void 0;var Vu=Gu(We),qu=Gu(K);function Gu(t){return t&&t.__esModule?t:{default:t}}var $u={start:function(t){var e=t.edges;return e?(t.state.targetFields=t.state.targetFields||[[e.left?\"left\":\"right\",e.top?\"top\":\"bottom\"]],zu.snapSize.start(t)):null},set:zu.snapSize.set,defaults:(0,qu.default)((0,Vu.default)(zu.snapSize.defaults),{targets:null,range:null,offset:{x:0,y:0}})};Uu.snapEdges=$u;var Hu=(0,Li.makeModifier)($u,\"snapEdges\");Uu.default=Hu;var Ku={};Object.defineProperty(Ku,\"__esModule\",{value:!0}),Ku.default=void 0;function Zu(){}Zu._defaults={};var Ju=Zu;Ku.default=Ju;var Qu={};Object.defineProperty(Qu,\"__esModule\",{value:!0}),Qu.default=void 0;function ts(){}ts._defaults={};var es=ts;Qu.default=es;var ns={};Object.defineProperty(ns,\"__esModule\",{value:!0}),ns.default=void 0;var rs=ys(ka),os=ys(Xa),is=ys(Qa),as=ys(La),us=ys(fu),ss=ys(yu),cs=ys(Su),ls=ys(Uu),fs=ys(ku),ps=ys(zu),ds=ys(Ku),vs=ys(Qu);function ys(t){return t&&t.__esModule?t:{default:t}}var hs={aspectRatio:rs.default,restrictEdges:is.default,restrict:as.default,restrictRect:us.default,restrictSize:ss.default,snapEdges:ls.default,snap:fs.default,snapSize:ps.default,spring:ds.default,avoid:os.default,transform:vs.default,rubberband:cs.default};ns.default=hs;var gs={};Object.defineProperty(gs,\"__esModule\",{value:!0}),gs.default=void 0;gs.default={};var bs={};Object.defineProperty(bs,\"__esModule\",{value:!0}),bs.default=void 0;bs.default={};var ms={};function Os(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(\"undefined\"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,u=t[Symbol.iterator]();!(r=(a=u.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==u.return||u.return()}finally{if(o)throw i}}return n}(t,e)||function(t,e){if(!t)return;if(\"string\"==typeof t)return ws(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return ws(t,e)}(t,e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function ws(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}Object.defineProperty(ms,\"__esModule\",{value:!0}),ms.default=void 0;ms.default=function(v){function t(t,e){for(var n=v.range,r=v.limits,o=void 0===r?{left:-1/0,right:1/0,top:-1/0,bottom:1/0}:r,i=v.offset,a=void 0===i?{x:0,y:0}:i,u={range:n,grid:v,x:null,y:null},s=0;s<y.length;s++){var c=Os(y[s],2),l=c[0],f=c[1],p=Math.round((t-a.x)/v[l]),d=Math.round((e-a.y)/v[f]);u[l]=Math.max(o.left,Math.min(o.right,p*v[l]+a.x)),u[f]=Math.max(o.top,Math.min(o.bottom,d*v[f]+a.y))}return u}var y=[[\"x\",\"y\"],[\"left\",\"top\"],[\"right\",\"bottom\"],[\"width\",\"height\"]].filter(function(t){var e=Os(t,2),n=e[0],r=e[1];return n in v||r in v});return t.grid=v,t.coordFields=y,t};var _s={};Object.defineProperty(_s,\"__esModule\",{value:!0}),Object.defineProperty(_s,\"edgeTarget\",{enumerable:!0,get:function(){return Ps.default}}),Object.defineProperty(_s,\"elements\",{enumerable:!0,get:function(){return xs.default}}),Object.defineProperty(_s,\"grid\",{enumerable:!0,get:function(){return Ss.default}});var Ps=js(gs),xs=js(bs),Ss=js(ms);function js(t){return t&&t.__esModule?t:{default:t}}var Ms={};function ks(t){return(ks=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(Ms,\"__esModule\",{value:!0}),Ms.default=void 0;var Es,Ts=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==ks(t)&&\"function\"!=typeof t)return{default:t};var e=Is();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}(_s),Ds=(Es=K)&&Es.__esModule?Es:{default:Es};function Is(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return Is=function(){return t},t}var As={id:\"snappers\",install:function(t){var e=t.interactStatic;e.snappers=(0,Ds.default)(e.snappers||{},Ts),e.createSnapGrid=e.snappers.grid}};Ms.default=As;var zs={};Object.defineProperty(zs,\"__esModule\",{value:!0}),zs.default=void 0;var Rs=Fs(ns),Cs=Fs(Li),Ws=Fs(Ms);function Fs(t){return t&&t.__esModule?t:{default:t}}var Xs={id:\"modifiers\",install:function(t){var e=t.interactStatic;for(var n in t.usePlugin(Cs.default),t.usePlugin(Ws.default),e.modifiers=Rs.default,Rs.default){var r=Rs.default[n],o=r._defaults,i=r._methods;o._methods=i,t.defaults.perAction[n]=o}}};zs.default=Xs;var Ys={};Object.defineProperty(Ys,\"__esModule\",{value:!0}),Ys.default=void 0;Ys.default={};var Ns={};Object.defineProperty(Ns,\"__esModule\",{value:!0}),Ns.PointerEvent=Ns.default=void 0;var Ls,Bs=(Ls=S)&&Ls.__esModule?Ls:{default:Ls},Us=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==qs(t)&&\"function\"!=typeof t)return{default:t};var e=Vs();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}(Oe);function Vs(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return Vs=function(){return t},t}function qs(t){return(qs=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function Gs(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function $s(t,e){return($s=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Hs(i){return function(){var t,e,n,r=Zs(i);if(function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return;if(Reflect.construct.sham)return;if(\"function\"==typeof Proxy)return 1;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),1}catch(t){return}}()){var o=Zs(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return e=this,!(n=t)||\"object\"!==qs(n)&&\"function\"!=typeof n?Ks(e):n}}function Ks(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}function Zs(t){return(Zs=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Js(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var Qs=function(){!function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&$s(t,e)}(l,Bs[\"default\"]);var t,e,n,c=Hs(l);function l(t,e,n,r,o,i){var a;if(!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,l),Js(Ks(a=c.call(this,o)),\"type\",void 0),Js(Ks(a),\"originalEvent\",void 0),Js(Ks(a),\"pointerId\",void 0),Js(Ks(a),\"pointerType\",void 0),Js(Ks(a),\"double\",void 0),Js(Ks(a),\"pageX\",void 0),Js(Ks(a),\"pageY\",void 0),Js(Ks(a),\"clientX\",void 0),Js(Ks(a),\"clientY\",void 0),Js(Ks(a),\"dt\",void 0),Js(Ks(a),\"eventable\",void 0),Us.pointerExtend(Ks(a),n),n!==e&&Us.pointerExtend(Ks(a),e),a.timeStamp=i,a.originalEvent=n,a.type=t,a.pointerId=Us.getPointerId(e),a.pointerType=Us.getPointerType(e),a.target=r,a.currentTarget=null,\"tap\"===t){var u=o.getPointerIndex(e);a.dt=a.timeStamp-o.pointers[u].downTime;var s=a.timeStamp-o.tapTime;a.double=!!(o.prevTap&&\"doubletap\"!==o.prevTap.type&&o.prevTap.target===a.target&&s<500)}else\"doubletap\"===t&&(a.dt=e.timeStamp-o.tapTime);return a}return t=l,(e=[{key:\"_subtractOrigin\",value:function(t){var e=t.x,n=t.y;return this.pageX-=e,this.pageY-=n,this.clientX-=e,this.clientY-=n,this}},{key:\"_addOrigin\",value:function(t){var e=t.x,n=t.y;return this.pageX+=e,this.pageY+=n,this.clientX+=e,this.clientY+=n,this}},{key:\"preventDefault\",value:function(){this.originalEvent.preventDefault()}}])&&Gs(t.prototype,e),n&&Gs(t,n),l}();Ns.PointerEvent=Ns.default=Qs;var tc={};function ec(t){return(ec=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(tc,\"__esModule\",{value:!0}),tc.default=void 0;var nc=ic(Ns),rc=(ic(Gn),ic(m({})),function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==ec(t)&&\"function\"!=typeof t)return{default:t};var e=oc();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}($e));function oc(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return oc=function(){return t},t}function ic(t){return t&&t.__esModule?t:{default:t}}var ac={id:\"pointer-events/base\",install:function(t){t.pointerEvents=ac,t.defaults.actions.pointerEvents=ac.defaults,rc.extend(t.actions.phaselessTypes,ac.types)},listeners:{\"interactions:new\":function(t){var e=t.interaction;e.prevTap=null,e.tapTime=0},\"interactions:update-pointer\":function(t){var e=t.down,n=t.pointerInfo;if(!e&&n.hold)return;n.hold={duration:1/0,timeout:null}},\"interactions:move\":function(t,e){var n=t.interaction,r=t.pointer,o=t.event,i=t.eventTarget,a=t.duplicate,u=n.getPointerIndex(r);a||n.pointerIsDown&&!n.pointerWasMoved||(n.pointerIsDown&&clearTimeout(n.pointers[u].hold.timeout),uc({interaction:n,pointer:r,event:o,eventTarget:i,type:\"move\"},e))},\"interactions:down\":function(t,e){!function(t,e){for(var n=t.interaction,r=t.pointer,o=t.event,i=t.eventTarget,a=t.pointerIndex,u=n.pointers[a].hold,s=rc.dom.getPath(i),c={interaction:n,pointer:r,event:o,eventTarget:i,type:\"hold\",targets:[],path:s,node:null},l=0;l<s.length;l++){var f=s[l];c.node=f,e.fire(\"pointerEvents:collect-targets\",c)}if(!c.targets.length)return;for(var p=1/0,d=0;d<c.targets.length;d++){var v=c.targets[d].eventable.options.holdDuration;v<p&&(p=v)}u.duration=p,u.timeout=setTimeout(function(){uc({interaction:n,eventTarget:i,pointer:r,event:o,type:\"hold\"},e)},p)}(t,e),uc(t,e)},\"interactions:up\":function(t,e){var n,r,o,i,a,u;cc(t),uc(t,e),r=e,o=(n=t).interaction,i=n.pointer,a=n.event,u=n.eventTarget,o.pointerWasMoved||uc({interaction:o,eventTarget:u,pointer:i,event:a,type:\"tap\"},r)},\"interactions:cancel\":function(t,e){cc(t),uc(t,e)}},PointerEvent:nc.default,fire:uc,collectEventTargets:sc,defaults:{holdDuration:600,ignoreFrom:null,allowFrom:null,origin:{x:0,y:0}},types:{down:!0,move:!0,up:!0,cancel:!0,tap:!0,doubletap:!0,hold:!0}};function uc(t,e){var n=t.interaction,r=t.pointer,o=t.event,i=t.eventTarget,a=t.type,u=t.targets,s=void 0===u?sc(t,e):u,c=new nc.default(a,r,o,i,n,e.now());e.fire(\"pointerEvents:new\",{pointerEvent:c});for(var l={interaction:n,pointer:r,event:o,eventTarget:i,targets:s,type:a,pointerEvent:c},f=0;f<s.length;f++){var p=s[f];for(var d in p.props||{})c[d]=p.props[d];var v=rc.getOriginXY(p.eventable,p.node);if(c._subtractOrigin(v),c.eventable=p.eventable,c.currentTarget=p.node,p.eventable.fire(c),c._addOrigin(v),c.immediatePropagationStopped||c.propagationStopped&&f+1<s.length&&s[f+1].node!==c.currentTarget)break}if(e.fire(\"pointerEvents:fired\",l),\"tap\"===a){var y=c.double?uc({interaction:n,pointer:r,event:o,eventTarget:i,type:\"doubletap\"},e):c;n.prevTap=y,n.tapTime=y.timeStamp}return c}function sc(t,e){var n=t.interaction,r=t.pointer,o=t.event,i=t.eventTarget,a=t.type,u=n.getPointerIndex(r),s=n.pointers[u];if(\"tap\"===a&&(n.pointerWasMoved||!s||s.downTarget!==i))return[];for(var c=rc.dom.getPath(i),l={interaction:n,pointer:r,event:o,eventTarget:i,type:a,path:c,targets:[],node:null},f=0;f<c.length;f++){var p=c[f];l.node=p,e.fire(\"pointerEvents:collect-targets\",l)}return\"hold\"===a&&(l.targets=l.targets.filter(function(t){return t.eventable.options.holdDuration===n.pointers[u].hold.duration})),l.targets}function cc(t){var e=t.interaction,n=t.pointerIndex;e.pointers[n].hold&&clearTimeout(e.pointers[n].hold.timeout)}var lc=ac;tc.default=lc;var fc={};Object.defineProperty(fc,\"__esModule\",{value:!0}),fc.default=void 0;dc(Ns);var pc=dc(tc);function dc(t){return t&&t.__esModule?t:{default:t}}function vc(t){var e=t.interaction;e.holdIntervalHandle&&(clearInterval(e.holdIntervalHandle),e.holdIntervalHandle=null)}var yc={id:\"pointer-events/holdRepeat\",install:function(t){t.usePlugin(pc.default);var e=t.pointerEvents;e.defaults.holdRepeatInterval=0,e.types.holdrepeat=t.actions.phaselessTypes.holdrepeat=!0},listeners:[\"move\",\"up\",\"cancel\",\"endall\"].reduce(function(t,e){return t[\"pointerEvents:\".concat(e)]=vc,t},{\"pointerEvents:new\":function(t){var e=t.pointerEvent;\"hold\"===e.type&&(e.count=(e.count||0)+1)},\"pointerEvents:fired\":function(t,e){var n=t.interaction,r=t.pointerEvent,o=t.eventTarget,i=t.targets;if(\"hold\"===r.type&&i.length){var a=i[0].eventable.options.holdRepeatInterval;a<=0||(n.holdIntervalHandle=setTimeout(function(){e.pointerEvents.fire({interaction:n,eventTarget:o,type:\"hold\",pointer:r,event:r},e)},a))}}})};fc.default=yc;var hc={};Object.defineProperty(hc,\"__esModule\",{value:!0}),hc.default=void 0;var gc,bc=(gc=K)&&gc.__esModule?gc:{default:gc};function mc(t){return(0,bc.default)(this.events.options,t),this}var Oc={id:\"pointer-events/interactableTargets\",install:function(t){var e=t.Interactable;e.prototype.pointerEvents=mc;var r=e.prototype._backCompatOption;e.prototype._backCompatOption=function(t,e){var n=r.call(this,t,e);return n===this&&(this.events.options[t]=e),n}},listeners:{\"pointerEvents:collect-targets\":function(t,e){var r=t.targets,o=t.node,i=t.type,a=t.eventTarget;e.interactables.forEachMatch(o,function(t){var e=t.events,n=e.options;e.types[i]&&e.types[i].length&&t.testIgnoreAllow(n,o,a)&&r.push({node:o,eventable:e,props:{interactable:t}})})},\"interactable:new\":function(t){var e=t.interactable;e.events.getRect=function(t){return e.getRect(t)}},\"interactable:set\":function(t,e){var n=t.interactable,r=t.options;(0,bc.default)(n.events.options,e.pointerEvents.defaults),(0,bc.default)(n.events.options,r.pointerEvents||{})}}};hc.default=Oc;var wc={};function _c(t){return(_c=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(wc,\"__esModule\",{value:!0}),Object.defineProperty(wc,\"holdRepeat\",{enumerable:!0,get:function(){return xc.default}}),Object.defineProperty(wc,\"interactableTargets\",{enumerable:!0,get:function(){return Sc.default}}),wc.pointerEvents=wc.default=void 0;var Pc=function(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==_c(t)&&\"function\"!=typeof t)return{default:t};var e=Mc();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}n.default=t,e&&e.set(t,n);return n}(tc);wc.pointerEvents=Pc;var xc=jc(fc),Sc=jc(hc);function jc(t){return t&&t.__esModule?t:{default:t}}function Mc(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return Mc=function(){return t},t}var kc={id:\"pointer-events\",install:function(t){t.usePlugin(Pc),t.usePlugin(xc.default),t.usePlugin(Sc.default)}};wc.default=kc;var Ec={};Object.defineProperty(Ec,\"__esModule\",{value:!0}),Ec.install=Dc,Ec.default=void 0;var Tc;(Tc=k({}))&&Tc.__esModule;function Dc(e){var t=e.Interactable;e.actions.phases.reflow=!0,t.prototype.reflow=function(t){return function(u,s,c){function t(){var e=l[d],t=u.getRect(e);if(!t)return\"break\";var n=$e.arr.find(c.interactions.list,function(t){return t.interacting()&&t.interactable===u&&t.element===e&&t.prepared.name===s.name}),r=void 0;if(n)n.move(),p&&(r=n._reflowPromise||new f(function(t){n._reflowResolve=t}));else{var o=$e.rect.tlbrToXywh(t),i={page:{x:o.x,y:o.y},client:{x:o.x,y:o.y},timeStamp:c.now()},a=$e.pointer.coordsToEvent(i);r=function(t,e,n,r,o){var i=t.interactions.new({pointerType:\"reflow\"}),a={interaction:i,event:o,pointer:o,eventTarget:n,phase:\"reflow\"};i.interactable=e,i.element=n,i.prepared=(0,$e.extend)({},r),i.prevEvent=o,i.updatePointer(o,o,n,!0),i._doPhase(a);var u=$e.win.window.Promise?new $e.win.window.Promise(function(t){i._reflowResolve=t}):null;i._reflowPromise=u,i.start(r,e,n),i._interacting?(i.move(a),i.end(o)):i.stop();return i.removePointer(o,o),i.pointerIsDown=!1,u}(c,u,e,s,a)}p&&p.push(r)}for(var l=$e.is.string(u.target)?$e.arr.from(u._context.querySelectorAll(u.target)):[u.target],f=$e.win.window.Promise,p=f?[]:null,d=0;d<l.length;d++){if(\"break\"===t())break}return p&&f.all(p).then(function(){return u})}(this,t,e)}}var Ic={id:\"reflow\",install:Dc,listeners:{\"interactions:stop\":function(t,e){var n=t.interaction;\"reflow\"===n.pointerType&&(n._reflowResolve&&n._reflowResolve(),$e.arr.remove(e.interactions.list,n))}}};Ec.default=Ic;var Ac={};Object.defineProperty(Ac,\"__esModule\",{value:!0}),Ac.default=void 0;Ac.default={};var zc={};Object.defineProperty(zc,\"__esModule\",{value:!0}),zc.exchange=void 0;zc.exchange={};var Rc={};Object.defineProperty(Rc,\"__esModule\",{value:!0}),Rc.default=void 0;Rc.default={};var Cc={};function Wc(t){return(Wc=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(Cc,\"__esModule\",{value:!0}),Cc.default=void 0;var Fc=ol(io),Xc=ol(po),Yc=ol(vo),Nc=ol(ai),Lc=ol(pi),Bc=ol(di),Uc=ol(lr),Vc=(ol(vi),ol(Mi)),qc=ol(ra),Gc=ol(Pa),$c=ol(zs),Hc=ol(Ys),Kc=ol(Gi),Zc=ol(wc),Jc=ol(Ec),Qc=rl(Ac),tl=rl(Oe),el=rl(Rc);function nl(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return nl=function(){return t},t}function rl(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!==Wc(t)&&\"function\"!=typeof t)return{default:t};var e=nl();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=r?Object.getOwnPropertyDescriptor(t,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=t[o]}return n.default=t,e&&e.set(t,n),n}function ol(t){return t&&t.__esModule?t:{default:t}}Gc.default.use(Hc.default),Gc.default.use(Uc.default),Gc.default.use(Kc.default),Gc.default.use(Lc.default),Gc.default.use(Xc.default),Gc.default.use(Zc.default),Gc.default.use(qc.default),Gc.default.use($c.default),Gc.default.use(Nc.default),Gc.default.use(Fc.default),Gc.default.use(Yc.default),Gc.default.use(Jc.default),Gc.default.use(Vc.default),Gc.default.use(Bc.default),Gc.default.vue={components:el},Gc.default.__utils={exchange:zc.exchange,displace:Qc,pointer:tl};var il=Gc.default;Cc.default=il;var al={exports:{}};Object.defineProperty(al.exports,\"__esModule\",{value:!0}),al.exports.default=void 0;var ul,sl=(ul=Cc)&&ul.__esModule?ul:{default:ul};function cl(t){return(cl=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}if(\"object\"===cl(al)&&al)try{al.exports=sl.default}catch(t){}sl.default.default=sl.default;var ll=sl.default;return al.exports.default=ll,al=al.exports});\n\n//# sourceMappingURL=interact.min.js.map\n","var encodeWav = require('./encodeWav');\nvar encodeMp3 = require('./encodeMp3');\n\nvar VALID_MP3_BITRATES = [32, 40, 48, 56, 64, 96, 128, 192, 256, 320];\n\nmodule.exports = function encode (audioBuffer, encoding, onProgress, onComplete) {\n\tif (!encoding || encoding === 'WAV') {\n\t\treturn encodeWav(audioBuffer, onComplete);\n\t}\n\n\tencoding = ~~encoding;\n\tif (VALID_MP3_BITRATES.indexOf(encoding) === -1) {\n\t\tthrow new Error('Invalid encoding');\n\t}\n\n\treturn encodeMp3(audioBuffer, { bitrate: encoding }, onProgress, onComplete);\n};\n","// a string of all valid unicode whitespaces\n// eslint-disable-next-line max-len\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","/*\n *      bit reservoir source file\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Reservoir.java,v 1.9 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n/**\n * ResvFrameBegin:<BR>\n * Called (repeatedly) at the beginning of a frame. Updates the maximum size of\n * the reservoir, and checks to make sure main_data_begin was set properly by\n * the formatter<BR>\n * Background information:\n * \n * This is the original text from the ISO standard. Because of sooo many bugs\n * and irritations correcting comments are added in brackets []. A '^W' means\n * you should remove the last word.\n * \n * <PRE>\n *  1. The following rule can be used to calculate the maximum\n *     number of bits used for one granule [^W frame]:<BR>\n *     At the highest possible bitrate of Layer III (320 kbps\n *     per stereo signal [^W^W^W], 48 kHz) the frames must be of\n *     [^W^W^W are designed to have] constant length, i.e.\n *     one buffer [^W^W the frame] length is:<BR>\n * \n *         320 kbps * 1152/48 kHz = 7680 bit = 960 byte\n * \n *     This value is used as the maximum buffer per channel [^W^W] at\n *     lower bitrates [than 320 kbps]. At 64 kbps mono or 128 kbps\n *     stereo the main granule length is 64 kbps * 576/48 kHz = 768 bit\n *     [per granule and channel] at 48 kHz sampling frequency.\n *     This means that there is a maximum deviation (short time buffer\n *     [= reservoir]) of 7680 - 2*2*768 = 4608 bits is allowed at 64 kbps.\n *     The actual deviation is equal to the number of bytes [with the\n *     meaning of octets] denoted by the main_data_end offset pointer.\n *     The actual maximum deviation is (2^9-1)*8 bit = 4088 bits\n *     [for MPEG-1 and (2^8-1)*8 bit for MPEG-2, both are hard limits].\n *     ... The xchange of buffer bits between the left and right channel\n *     is allowed without restrictions [exception: dual channel].\n *     Because of the [constructed] constraint on the buffer size\n *     main_data_end is always set to 0 in the case of bit_rate_index==14,\n *     i.e. data rate 320 kbps per stereo signal [^W^W^W]. In this case\n *     all data are allocated between adjacent header [^W sync] words\n *     [, i.e. there is no buffering at all].\n * </PRE>\n */\n\nvar common = require('./common.js');\nvar assert = common.assert;\n\nfunction Reservoir() {\n\tvar bs;\n\n\tthis.setModules  = function(_bs) {\n\t\tbs = _bs;\n\t}\n\n\tthis.ResvFrameBegin = function(gfp, mean_bits) {\n\t\tvar gfc = gfp.internal_flags;\n\t\tvar maxmp3buf;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tvar frameLength = bs.getframebits(gfp);\n\t\tmean_bits.bits = (frameLength - gfc.sideinfo_len * 8) / gfc.mode_gr;\n\n\t\t/**\n\t\t * <PRE>\n\t\t *  Meaning of the variables:\n\t\t *      resvLimit: (0, 8, ..., 8*255 (MPEG-2), 8*511 (MPEG-1))\n\t\t *          Number of bits can be stored in previous frame(s) due to\n\t\t *          counter size constaints\n\t\t *      maxmp3buf: ( ??? ... 8*1951 (MPEG-1 and 2), 8*2047 (MPEG-2.5))\n\t\t *          Number of bits allowed to encode one frame (you can take 8*511 bit\n\t\t *          from the bit reservoir and at most 8*1440 bit from the current\n\t\t *          frame (320 kbps, 32 kHz), so 8*1951 bit is the largest possible\n\t\t *          value for MPEG-1 and -2)\n\t\t * \n\t\t *          maximum allowed granule/channel size times 4 = 8*2047 bits.,\n\t\t *          so this is the absolute maximum supported by the format.\n\t\t * \n\t\t * \n\t\t *      fullFrameBits:  maximum number of bits available for encoding\n\t\t *                      the current frame.\n\t\t * \n\t\t *      mean_bits:      target number of bits per granule.\n\t\t * \n\t\t *      frameLength:\n\t\t * \n\t\t *      gfc.ResvMax:   maximum allowed reservoir\n\t\t * \n\t\t *      gfc.ResvSize:  current reservoir size\n\t\t * \n\t\t *      l3_side.resvDrain_pre:\n\t\t *         ancillary data to be added to previous frame:\n\t\t *         (only usefull in VBR modes if it is possible to have\n\t\t *         maxmp3buf < fullFrameBits)).  Currently disabled,\n\t\t *         see #define NEW_DRAIN\n\t\t *         2010-02-13: RH now enabled, it seems to be needed for CBR too,\n\t\t *                     as there exists one example, where the FhG decoder\n\t\t *                     can't decode a -b320 CBR file anymore.\n\t\t * \n\t\t *      l3_side.resvDrain_post:\n\t\t *         ancillary data to be added to this frame:\n\t\t * \n\t\t * </PRE>\n\t\t */\n\n\t\t/* main_data_begin has 9 bits in MPEG-1, 8 bits MPEG-2 */\n\t\tvar resvLimit = (8 * 256) * gfc.mode_gr - 8;\n\n\t\t/*\n\t\t * maximum allowed frame size. dont use more than this number of bits,\n\t\t * even if the frame has the space for them:\n\t\t */\n\t\tif (gfp.brate > 320) {\n\t\t\t/* in freeformat the buffer is constant */\n\t\t\tmaxmp3buf = 8 * ((int) ((gfp.brate * 1000)\n\t\t\t\t\t/ (gfp.out_samplerate / 1152) / 8 + .5));\n\t\t} else {\n\t\t\t/*\n\t\t\t * all mp3 decoders should have enough buffer to handle this value:\n\t\t\t * size of a 320kbps 32kHz frame\n\t\t\t */\n\t\t\tmaxmp3buf = 8 * 1440;\n\n\t\t\t/*\n\t\t\t * Bouvigne suggests this more lax interpretation of the ISO doc\n\t\t\t * instead of using 8*960.\n\t\t\t */\n\n\t\t\tif (gfp.strict_ISO) {\n\t\t\t\tmaxmp3buf = 8 * ((int) (320000 / (gfp.out_samplerate / 1152) / 8 + .5));\n\t\t\t}\n\t\t}\n\n\t\tgfc.ResvMax = maxmp3buf - frameLength;\n\t\tif (gfc.ResvMax > resvLimit)\n\t\t\tgfc.ResvMax = resvLimit;\n\t\tif (gfc.ResvMax < 0 || gfp.disable_reservoir)\n\t\t\tgfc.ResvMax = 0;\n\n\t\tvar fullFrameBits = mean_bits.bits * gfc.mode_gr\n\t\t\t\t+ Math.min(gfc.ResvSize, gfc.ResvMax);\n\n\t\tif (fullFrameBits > maxmp3buf)\n\t\t\tfullFrameBits = maxmp3buf;\n\n\t\tassert (0 == gfc.ResvMax % 8);\n\t\tassert (gfc.ResvMax >= 0);\n\n\t\tl3_side.resvDrain_pre = 0;\n\n\t\t// frame analyzer code\n\t\tif (gfc.pinfo != null) {\n\t\t\t/*\n\t\t\t * expected bits per channel per granule [is this also right for\n\t\t\t * mono/stereo, MPEG-1/2 ?]\n\t\t\t */\n\t\t\tgfc.pinfo.mean_bits = mean_bits.bits / 2;\n\t\t\tgfc.pinfo.resvsize = gfc.ResvSize;\n\t\t}\n\n\t\treturn fullFrameBits;\n\t}\n\n\t/**\n\t * returns targ_bits: target number of bits to use for 1 granule<BR>\n\t * extra_bits: amount extra available from reservoir<BR>\n\t * Mark Taylor 4/99\n\t */\n\tthis.ResvMaxBits = function(gfp, mean_bits, targ_bits, cbr) {\n\t\tvar gfc = gfp.internal_flags;\n\t\tvar add_bits;\n        var ResvSize = gfc.ResvSize, ResvMax = gfc.ResvMax;\n\n\t\t/* compensate the saved bits used in the 1st granule */\n\t\tif (cbr != 0)\n\t\t\tResvSize += mean_bits;\n\n\t\tif ((gfc.substep_shaping & 1) != 0)\n\t\t\tResvMax *= 0.9;\n\n\t\ttarg_bits.bits = mean_bits;\n\n\t\t/* extra bits if the reservoir is almost full */\n\t\tif (ResvSize * 10 > ResvMax * 9) {\n\t\t\tadd_bits = ResvSize - (ResvMax * 9) / 10;\n\t\t\ttarg_bits.bits += add_bits;\n\t\t\tgfc.substep_shaping |= 0x80;\n\t\t} else {\n\t\t\tadd_bits = 0;\n\t\t\tgfc.substep_shaping &= 0x7f;\n\t\t\t/*\n\t\t\t * build up reservoir. this builds the reservoir a little slower\n\t\t\t * than FhG. It could simple be mean_bits/15, but this was rigged to\n\t\t\t * always produce 100 (the old value) at 128kbs\n\t\t\t */\n\t\t\tif (!gfp.disable_reservoir && 0 == (gfc.substep_shaping & 1))\n\t\t\t\ttarg_bits.bits -= .1 * mean_bits;\n\t\t}\n\n\t\t/* amount from the reservoir we are allowed to use. ISO says 6/10 */\n\t\tvar extra_bits = (ResvSize < (gfc.ResvMax * 6) / 10 ? ResvSize\n\t\t\t\t: (gfc.ResvMax * 6) / 10);\n\t\textra_bits -= add_bits;\n\n\t\tif (extra_bits < 0)\n\t\t\textra_bits = 0;\n\t\treturn extra_bits;\n\t}\n\n\t/**\n\t * Called after a granule's bit allocation. Readjusts the size of the\n\t * reservoir to reflect the granule's usage.\n\t */\n\tthis.ResvAdjust = function(gfc, gi) {\n\t\tgfc.ResvSize -= gi.part2_3_length + gi.part2_length;\n\t}\n\n\t/**\n\t * Called after all granules in a frame have been allocated. Makes sure that\n\t * the reservoir size is within limits, possibly by adding stuffing bits.\n\t */\n\tthis.ResvFrameEnd = function(gfc, mean_bits) {\n\t\tvar over_bits;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tgfc.ResvSize += mean_bits * gfc.mode_gr;\n\t\tvar stuffingBits = 0;\n\t\tl3_side.resvDrain_post = 0;\n\t\tl3_side.resvDrain_pre = 0;\n\n\t\t/* we must be byte aligned */\n\t\tif ((over_bits = gfc.ResvSize % 8) != 0)\n\t\t\tstuffingBits += over_bits;\n\n\t\tover_bits = (gfc.ResvSize - stuffingBits) - gfc.ResvMax;\n\t\tif (over_bits > 0) {\n\t\t\tassert (0 == over_bits % 8);\n\t\t\tassert (over_bits >= 0);\n\t\t\tstuffingBits += over_bits;\n\t\t}\n\n\t\t/*\n\t\t * NOTE: enabling the NEW_DRAIN code fixes some problems with FhG\n\t\t * decoder shipped with MS Windows operating systems. Using this, it is\n\t\t * even possible to use Gabriel's lax buffer consideration again, which\n\t\t * assumes, any decoder should have a buffer large enough for a 320 kbps\n\t\t * frame at 32 kHz sample rate.\n\t\t * \n\t\t * old drain code: lame -b320 BlackBird.wav --. does not play with\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\n\t\t * \n\t\t * new drain code: lame -b320 BlackBird.wav --. plays fine with\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\n\t\t * \n\t\t * Robert Hegemann, 2010-02-13.\n\t\t */\n\t\t/*\n\t\t * drain as many bits as possible into previous frame ancillary data In\n\t\t * particular, in VBR mode ResvMax may have changed, and we have to make\n\t\t * sure main_data_begin does not create a reservoir bigger than ResvMax\n\t\t * mt 4/00\n\t\t */\n\t\t{\n\t\t\tvar mdb_bytes = Math.min(l3_side.main_data_begin * 8, stuffingBits) / 8;\n\t\t\tl3_side.resvDrain_pre += 8 * mdb_bytes;\n\t\t\tstuffingBits -= 8 * mdb_bytes;\n\t\t\tgfc.ResvSize -= 8 * mdb_bytes;\n\t\t\tl3_side.main_data_begin -= mdb_bytes;\n\t\t}\n\t\t/* drain the rest into this frames ancillary data */\n\t\tl3_side.resvDrain_post += stuffingBits;\n\t\tgfc.ResvSize -= stuffingBits;\n\t}\n}\n\nmodule.exports = Reservoir;\n","function HuffCodeTab(len, max, tab, hl) {\n    this.xlen = len;\n    this.linmax = max;\n    this.table = tab;\n    this.hlen = hl;\n}\n\nvar Tables = {};\n\n\nTables.t1HB = [\n    1, 1,\n    1, 0\n];\n\nTables.t2HB = [\n    1, 2, 1,\n    3, 1, 1,\n    3, 2, 0\n];\n\nTables.t3HB = [\n    3, 2, 1,\n    1, 1, 1,\n    3, 2, 0\n];\n\nTables.t5HB = [\n    1, 2, 6, 5,\n    3, 1, 4, 4,\n    7, 5, 7, 1,\n    6, 1, 1, 0\n];\n\nTables.t6HB = [\n    7, 3, 5, 1,\n    6, 2, 3, 2,\n    5, 4, 4, 1,\n    3, 3, 2, 0\n];\n\nTables.t7HB = [\n    1, 2, 10, 19, 16, 10,\n    3, 3, 7, 10, 5, 3,\n    11, 4, 13, 17, 8, 4,\n    12, 11, 18, 15, 11, 2,\n    7, 6, 9, 14, 3, 1,\n    6, 4, 5, 3, 2, 0\n];\n\nTables.t8HB = [\n    3, 4, 6, 18, 12, 5,\n    5, 1, 2, 16, 9, 3,\n    7, 3, 5, 14, 7, 3,\n    19, 17, 15, 13, 10, 4,\n    13, 5, 8, 11, 5, 1,\n    12, 4, 4, 1, 1, 0\n];\n\nTables.t9HB = [\n    7, 5, 9, 14, 15, 7,\n    6, 4, 5, 5, 6, 7,\n    7, 6, 8, 8, 8, 5,\n    15, 6, 9, 10, 5, 1,\n    11, 7, 9, 6, 4, 1,\n    14, 4, 6, 2, 6, 0\n];\n\nTables.t10HB = [\n    1, 2, 10, 23, 35, 30, 12, 17,\n    3, 3, 8, 12, 18, 21, 12, 7,\n    11, 9, 15, 21, 32, 40, 19, 6,\n    14, 13, 22, 34, 46, 23, 18, 7,\n    20, 19, 33, 47, 27, 22, 9, 3,\n    31, 22, 41, 26, 21, 20, 5, 3,\n    14, 13, 10, 11, 16, 6, 5, 1,\n    9, 8, 7, 8, 4, 4, 2, 0\n];\n\nTables.t11HB = [\n    3, 4, 10, 24, 34, 33, 21, 15,\n    5, 3, 4, 10, 32, 17, 11, 10,\n    11, 7, 13, 18, 30, 31, 20, 5,\n    25, 11, 19, 59, 27, 18, 12, 5,\n    35, 33, 31, 58, 30, 16, 7, 5,\n    28, 26, 32, 19, 17, 15, 8, 14,\n    14, 12, 9, 13, 14, 9, 4, 1,\n    11, 4, 6, 6, 6, 3, 2, 0\n];\n\nTables.t12HB = [\n    9, 6, 16, 33, 41, 39, 38, 26,\n    7, 5, 6, 9, 23, 16, 26, 11,\n    17, 7, 11, 14, 21, 30, 10, 7,\n    17, 10, 15, 12, 18, 28, 14, 5,\n    32, 13, 22, 19, 18, 16, 9, 5,\n    40, 17, 31, 29, 17, 13, 4, 2,\n    27, 12, 11, 15, 10, 7, 4, 1,\n    27, 12, 8, 12, 6, 3, 1, 0\n];\n\nTables.t13HB = [\n    1, 5, 14, 21, 34, 51, 46, 71, 42, 52, 68, 52, 67, 44, 43, 19,\n    3, 4, 12, 19, 31, 26, 44, 33, 31, 24, 32, 24, 31, 35, 22, 14,\n    15, 13, 23, 36, 59, 49, 77, 65, 29, 40, 30, 40, 27, 33, 42, 16,\n    22, 20, 37, 61, 56, 79, 73, 64, 43, 76, 56, 37, 26, 31, 25, 14,\n    35, 16, 60, 57, 97, 75, 114, 91, 54, 73, 55, 41, 48, 53, 23, 24,\n    58, 27, 50, 96, 76, 70, 93, 84, 77, 58, 79, 29, 74, 49, 41, 17,\n    47, 45, 78, 74, 115, 94, 90, 79, 69, 83, 71, 50, 59, 38, 36, 15,\n    72, 34, 56, 95, 92, 85, 91, 90, 86, 73, 77, 65, 51, 44, 43, 42,\n    43, 20, 30, 44, 55, 78, 72, 87, 78, 61, 46, 54, 37, 30, 20, 16,\n    53, 25, 41, 37, 44, 59, 54, 81, 66, 76, 57, 54, 37, 18, 39, 11,\n    35, 33, 31, 57, 42, 82, 72, 80, 47, 58, 55, 21, 22, 26, 38, 22,\n    53, 25, 23, 38, 70, 60, 51, 36, 55, 26, 34, 23, 27, 14, 9, 7,\n    34, 32, 28, 39, 49, 75, 30, 52, 48, 40, 52, 28, 18, 17, 9, 5,\n    45, 21, 34, 64, 56, 50, 49, 45, 31, 19, 12, 15, 10, 7, 6, 3,\n    48, 23, 20, 39, 36, 35, 53, 21, 16, 23, 13, 10, 6, 1, 4, 2,\n    16, 15, 17, 27, 25, 20, 29, 11, 17, 12, 16, 8, 1, 1, 0, 1\n];\n\nTables.t15HB = [\n    7, 12, 18, 53, 47, 76, 124, 108, 89, 123, 108, 119, 107, 81, 122, 63,\n    13, 5, 16, 27, 46, 36, 61, 51, 42, 70, 52, 83, 65, 41, 59, 36,\n    19, 17, 15, 24, 41, 34, 59, 48, 40, 64, 50, 78, 62, 80, 56, 33,\n    29, 28, 25, 43, 39, 63, 55, 93, 76, 59, 93, 72, 54, 75, 50, 29,\n    52, 22, 42, 40, 67, 57, 95, 79, 72, 57, 89, 69, 49, 66, 46, 27,\n    77, 37, 35, 66, 58, 52, 91, 74, 62, 48, 79, 63, 90, 62, 40, 38,\n    125, 32, 60, 56, 50, 92, 78, 65, 55, 87, 71, 51, 73, 51, 70, 30,\n    109, 53, 49, 94, 88, 75, 66, 122, 91, 73, 56, 42, 64, 44, 21, 25,\n    90, 43, 41, 77, 73, 63, 56, 92, 77, 66, 47, 67, 48, 53, 36, 20,\n    71, 34, 67, 60, 58, 49, 88, 76, 67, 106, 71, 54, 38, 39, 23, 15,\n    109, 53, 51, 47, 90, 82, 58, 57, 48, 72, 57, 41, 23, 27, 62, 9,\n    86, 42, 40, 37, 70, 64, 52, 43, 70, 55, 42, 25, 29, 18, 11, 11,\n    118, 68, 30, 55, 50, 46, 74, 65, 49, 39, 24, 16, 22, 13, 14, 7,\n    91, 44, 39, 38, 34, 63, 52, 45, 31, 52, 28, 19, 14, 8, 9, 3,\n    123, 60, 58, 53, 47, 43, 32, 22, 37, 24, 17, 12, 15, 10, 2, 1,\n    71, 37, 34, 30, 28, 20, 17, 26, 21, 16, 10, 6, 8, 6, 2, 0\n];\n\nTables.t16HB = [\n    1, 5, 14, 44, 74, 63, 110, 93, 172, 149, 138, 242, 225, 195, 376, 17,\n    3, 4, 12, 20, 35, 62, 53, 47, 83, 75, 68, 119, 201, 107, 207, 9,\n    15, 13, 23, 38, 67, 58, 103, 90, 161, 72, 127, 117, 110, 209, 206, 16,\n    45, 21, 39, 69, 64, 114, 99, 87, 158, 140, 252, 212, 199, 387, 365, 26,\n    75, 36, 68, 65, 115, 101, 179, 164, 155, 264, 246, 226, 395, 382, 362, 9,\n    66, 30, 59, 56, 102, 185, 173, 265, 142, 253, 232, 400, 388, 378, 445, 16,\n    111, 54, 52, 100, 184, 178, 160, 133, 257, 244, 228, 217, 385, 366, 715, 10,\n    98, 48, 91, 88, 165, 157, 148, 261, 248, 407, 397, 372, 380, 889, 884, 8,\n    85, 84, 81, 159, 156, 143, 260, 249, 427, 401, 392, 383, 727, 713, 708, 7,\n    154, 76, 73, 141, 131, 256, 245, 426, 406, 394, 384, 735, 359, 710, 352, 11,\n    139, 129, 67, 125, 247, 233, 229, 219, 393, 743, 737, 720, 885, 882, 439, 4,\n    243, 120, 118, 115, 227, 223, 396, 746, 742, 736, 721, 712, 706, 223, 436, 6,\n    202, 224, 222, 218, 216, 389, 386, 381, 364, 888, 443, 707, 440, 437, 1728, 4,\n    747, 211, 210, 208, 370, 379, 734, 723, 714, 1735, 883, 877, 876, 3459, 865, 2,\n    377, 369, 102, 187, 726, 722, 358, 711, 709, 866, 1734, 871, 3458, 870, 434, 0,\n    12, 10, 7, 11, 10, 17, 11, 9, 13, 12, 10, 7, 5, 3, 1, 3\n];\n\nTables.t24HB = [\n    15, 13, 46, 80, 146, 262, 248, 434, 426, 669, 653, 649, 621, 517, 1032, 88,\n    14, 12, 21, 38, 71, 130, 122, 216, 209, 198, 327, 345, 319, 297, 279, 42,\n    47, 22, 41, 74, 68, 128, 120, 221, 207, 194, 182, 340, 315, 295, 541, 18,\n    81, 39, 75, 70, 134, 125, 116, 220, 204, 190, 178, 325, 311, 293, 271, 16,\n    147, 72, 69, 135, 127, 118, 112, 210, 200, 188, 352, 323, 306, 285, 540, 14,\n    263, 66, 129, 126, 119, 114, 214, 202, 192, 180, 341, 317, 301, 281, 262, 12,\n    249, 123, 121, 117, 113, 215, 206, 195, 185, 347, 330, 308, 291, 272, 520, 10,\n    435, 115, 111, 109, 211, 203, 196, 187, 353, 332, 313, 298, 283, 531, 381, 17,\n    427, 212, 208, 205, 201, 193, 186, 177, 169, 320, 303, 286, 268, 514, 377, 16,\n    335, 199, 197, 191, 189, 181, 174, 333, 321, 305, 289, 275, 521, 379, 371, 11,\n    668, 184, 183, 179, 175, 344, 331, 314, 304, 290, 277, 530, 383, 373, 366, 10,\n    652, 346, 171, 168, 164, 318, 309, 299, 287, 276, 263, 513, 375, 368, 362, 6,\n    648, 322, 316, 312, 307, 302, 292, 284, 269, 261, 512, 376, 370, 364, 359, 4,\n    620, 300, 296, 294, 288, 282, 273, 266, 515, 380, 374, 369, 365, 361, 357, 2,\n    1033, 280, 278, 274, 267, 264, 259, 382, 378, 372, 367, 363, 360, 358, 356, 0,\n    43, 20, 19, 17, 15, 13, 11, 9, 7, 6, 4, 7, 5, 3, 1, 3\n];\n\nTables.t32HB = [\n    1 << 0, 5 << 1, 4 << 1, 5 << 2, 6 << 1, 5 << 2, 4 << 2, 4 << 3,\n    7 << 1, 3 << 2, 6 << 2, 0 << 3, 7 << 2, 2 << 3, 3 << 3, 1 << 4\n];\n\nTables.t33HB = [\n    15 << 0, 14 << 1, 13 << 1, 12 << 2, 11 << 1, 10 << 2, 9 << 2, 8 << 3,\n    7 << 1, 6 << 2, 5 << 2, 4 << 3, 3 << 2, 2 << 3, 1 << 3, 0 << 4\n];\n\nTables.t1l = [\n    1, 4,\n    3, 5\n];\n\nTables.t2l = [\n    1, 4, 7,\n    4, 5, 7,\n    6, 7, 8\n];\n\nTables.t3l = [\n    2, 3, 7,\n    4, 4, 7,\n    6, 7, 8\n];\n\nTables.t5l = [\n    1, 4, 7, 8,\n    4, 5, 8, 9,\n    7, 8, 9, 10,\n    8, 8, 9, 10\n];\n\nTables.t6l = [\n    3, 4, 6, 8,\n    4, 4, 6, 7,\n    5, 6, 7, 8,\n    7, 7, 8, 9\n];\n\nTables.t7l = [\n    1, 4, 7, 9, 9, 10,\n    4, 6, 8, 9, 9, 10,\n    7, 7, 9, 10, 10, 11,\n    8, 9, 10, 11, 11, 11,\n    8, 9, 10, 11, 11, 12,\n    9, 10, 11, 12, 12, 12\n];\n\nTables.t8l = [\n    2, 4, 7, 9, 9, 10,\n    4, 4, 6, 10, 10, 10,\n    7, 6, 8, 10, 10, 11,\n    9, 10, 10, 11, 11, 12,\n    9, 9, 10, 11, 12, 12,\n    10, 10, 11, 11, 13, 13\n];\n\nTables.t9l = [\n    3, 4, 6, 7, 9, 10,\n    4, 5, 6, 7, 8, 10,\n    5, 6, 7, 8, 9, 10,\n    7, 7, 8, 9, 9, 10,\n    8, 8, 9, 9, 10, 11,\n    9, 9, 10, 10, 11, 11\n];\n\nTables.t10l = [\n    1, 4, 7, 9, 10, 10, 10, 11,\n    4, 6, 8, 9, 10, 11, 10, 10,\n    7, 8, 9, 10, 11, 12, 11, 11,\n    8, 9, 10, 11, 12, 12, 11, 12,\n    9, 10, 11, 12, 12, 12, 12, 12,\n    10, 11, 12, 12, 13, 13, 12, 13,\n    9, 10, 11, 12, 12, 12, 13, 13,\n    10, 10, 11, 12, 12, 13, 13, 13\n];\n\nTables.t11l = [\n    2, 4, 6, 8, 9, 10, 9, 10,\n    4, 5, 6, 8, 10, 10, 9, 10,\n    6, 7, 8, 9, 10, 11, 10, 10,\n    8, 8, 9, 11, 10, 12, 10, 11,\n    9, 10, 10, 11, 11, 12, 11, 12,\n    9, 10, 11, 12, 12, 13, 12, 13,\n    9, 9, 9, 10, 11, 12, 12, 12,\n    9, 9, 10, 11, 12, 12, 12, 12\n];\n\nTables.t12l = [\n    4, 4, 6, 8, 9, 10, 10, 10,\n    4, 5, 6, 7, 9, 9, 10, 10,\n    6, 6, 7, 8, 9, 10, 9, 10,\n    7, 7, 8, 8, 9, 10, 10, 10,\n    8, 8, 9, 9, 10, 10, 10, 11,\n    9, 9, 10, 10, 10, 11, 10, 11,\n    9, 9, 9, 10, 10, 11, 11, 12,\n    10, 10, 10, 11, 11, 11, 11, 12\n];\n\nTables.t13l = [\n    1, 5, 7, 8, 9, 10, 10, 11, 10, 11, 12, 12, 13, 13, 14, 14,\n    4, 6, 8, 9, 10, 10, 11, 11, 11, 11, 12, 12, 13, 14, 14, 14,\n    7, 8, 9, 10, 11, 11, 12, 12, 11, 12, 12, 13, 13, 14, 15, 15,\n    8, 9, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 15,\n    9, 9, 11, 11, 12, 12, 13, 13, 12, 13, 13, 14, 14, 15, 15, 16,\n    10, 10, 11, 12, 12, 12, 13, 13, 13, 13, 14, 13, 15, 15, 16, 16,\n    10, 11, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 15, 15, 16, 16,\n    11, 11, 12, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 16, 18, 18,\n    10, 10, 11, 12, 12, 13, 13, 14, 14, 14, 14, 15, 15, 16, 17, 17,\n    11, 11, 12, 12, 13, 13, 13, 15, 14, 15, 15, 16, 16, 16, 18, 17,\n    11, 12, 12, 13, 13, 14, 14, 15, 14, 15, 16, 15, 16, 17, 18, 19,\n    12, 12, 12, 13, 14, 14, 14, 14, 15, 15, 15, 16, 17, 17, 17, 18,\n    12, 13, 13, 14, 14, 15, 14, 15, 16, 16, 17, 17, 17, 18, 18, 18,\n    13, 13, 14, 15, 15, 15, 16, 16, 16, 16, 16, 17, 18, 17, 18, 18,\n    14, 14, 14, 15, 15, 15, 17, 16, 16, 19, 17, 17, 17, 19, 18, 18,\n    13, 14, 15, 16, 16, 16, 17, 16, 17, 17, 18, 18, 21, 20, 21, 18\n];\n\nTables.t15l = [\n    3, 5, 6, 8, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 14,\n    5, 5, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 13,\n    6, 7, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 13, 13, 13,\n    7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13,\n    8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13,\n    9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 13, 13, 13, 14,\n    10, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 14, 14,\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 14,\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 14, 14, 14,\n    10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14,\n    11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 14,\n    11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 15,\n    12, 12, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 15, 15,\n    12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15,\n    13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 14, 15,\n    13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15\n];\n\nTables.t16_5l = [\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 11,\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 11,\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 12,\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 13,\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 12,\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 13,\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 13,\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 13,\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 13,\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 14,\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 13,\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 14,\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 14,\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 14,\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 14,\n    11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 12\n];\n\nTables.t16l = [\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 10,\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 10,\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 11,\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 12,\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 11,\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 12,\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 12,\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 12,\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 12,\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 13,\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 12,\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 13,\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 13,\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 13,\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 13,\n    10, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10\n];\n\nTables.t24l = [\n    4, 5, 7, 8, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 13, 10,\n    5, 6, 7, 8, 9, 10, 10, 11, 11, 11, 12, 12, 12, 12, 12, 10,\n    7, 7, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 9,\n    8, 8, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 9,\n    9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 12, 12, 12, 12, 13, 9,\n    10, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 9,\n    10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 9,\n    11, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 10,\n    11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 10,\n    11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 10,\n    12, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\n    12, 12, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\n    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 10,\n    12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10,\n    13, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 10,\n    9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 6\n];\n\nTables.t32l = [\n    1 + 0, 4 + 1, 4 + 1, 5 + 2, 4 + 1, 6 + 2, 5 + 2, 6 + 3,\n    4 + 1, 5 + 2, 5 + 2, 6 + 3, 5 + 2, 6 + 3, 6 + 3, 6 + 4\n];\n\nTables.t33l = [\n    4 + 0, 4 + 1, 4 + 1, 4 + 2, 4 + 1, 4 + 2, 4 + 2, 4 + 3,\n    4 + 1, 4 + 2, 4 + 2, 4 + 3, 4 + 2, 4 + 3, 4 + 3, 4 + 4\n];\n\nTables.ht = [\n    /* xlen, linmax, table, hlen */\n    new HuffCodeTab(0, 0, null, null),\n    new HuffCodeTab(2, 0, Tables.t1HB, Tables.t1l),\n    new HuffCodeTab(3, 0, Tables.t2HB, Tables.t2l),\n    new HuffCodeTab(3, 0, Tables.t3HB, Tables.t3l),\n    new HuffCodeTab(0, 0, null, null), /* Apparently not used */\n    new HuffCodeTab(4, 0, Tables.t5HB, Tables.t5l),\n    new HuffCodeTab(4, 0, Tables.t6HB, Tables.t6l),\n    new HuffCodeTab(6, 0, Tables.t7HB, Tables.t7l),\n    new HuffCodeTab(6, 0, Tables.t8HB, Tables.t8l),\n    new HuffCodeTab(6, 0, Tables.t9HB, Tables.t9l),\n    new HuffCodeTab(8, 0, Tables.t10HB, Tables.t10l),\n    new HuffCodeTab(8, 0, Tables.t11HB, Tables.t11l),\n    new HuffCodeTab(8, 0, Tables.t12HB, Tables.t12l),\n    new HuffCodeTab(16, 0, Tables.t13HB, Tables.t13l),\n    new HuffCodeTab(0, 0, null, Tables.t16_5l), /* Apparently not used */\n    new HuffCodeTab(16, 0, Tables.t15HB, Tables.t15l),\n\n    new HuffCodeTab(1, 1, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(2, 3, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(3, 7, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(4, 15, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(6, 63, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(8, 255, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(10, 1023, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(13, 8191, Tables.t16HB, Tables.t16l),\n\n    new HuffCodeTab(4, 15, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(5, 31, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(6, 63, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(7, 127, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(8, 255, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(9, 511, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(11, 2047, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(13, 8191, Tables.t24HB, Tables.t24l),\n\n    new HuffCodeTab(0, 0, Tables.t32HB, Tables.t32l),\n    new HuffCodeTab(0, 0, Tables.t33HB, Tables.t33l),\n];\n\n/**\n * <CODE>\n *  for (i = 0; i < 16*16; i++) [\n *      largetbl[i] = ((ht[16].hlen[i]) << 16) + ht[24].hlen[i];\n *  ]\n * </CODE>\n *\n */\nTables.largetbl = [\n    0x010004, 0x050005, 0x070007, 0x090008, 0x0a0009, 0x0a000a, 0x0b000a, 0x0b000b,\n    0x0c000b, 0x0c000c, 0x0c000c, 0x0d000c, 0x0d000c, 0x0d000c, 0x0e000d, 0x0a000a,\n    0x040005, 0x060006, 0x080007, 0x090008, 0x0a0009, 0x0b000a, 0x0b000a, 0x0b000b,\n    0x0c000b, 0x0c000b, 0x0c000c, 0x0d000c, 0x0e000c, 0x0d000c, 0x0e000c, 0x0a000a,\n    0x070007, 0x080007, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000b,\n    0x0d000b, 0x0c000b, 0x0d000b, 0x0d000c, 0x0d000c, 0x0e000c, 0x0e000d, 0x0b0009,\n    0x090008, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0c000b,\n    0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0c0009,\n    0x0a0009, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000a, 0x0d000b,\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000d, 0x0b0009,\n    0x0a000a, 0x0a0009, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0e000b,\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0c0009,\n    0x0b000a, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0d000b, 0x0d000b,\n    0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000d, 0x0c0009,\n    0x0b000b, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b,\n    0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x11000d, 0x11000d, 0x0c000a,\n    0x0b000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b,\n    0x0f000b, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000d, 0x10000d, 0x0c000a,\n    0x0c000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b, 0x0f000c,\n    0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0f000d, 0x10000d, 0x0f000d, 0x0d000a,\n    0x0c000c, 0x0d000b, 0x0c000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c,\n    0x0f000c, 0x10000c, 0x10000c, 0x10000d, 0x11000d, 0x11000d, 0x10000d, 0x0c000a,\n    0x0d000c, 0x0d000c, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x10000c,\n    0x10000c, 0x10000c, 0x10000c, 0x10000d, 0x10000d, 0x0f000d, 0x10000d, 0x0d000a,\n    0x0d000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c,\n    0x0f000c, 0x11000c, 0x10000d, 0x10000d, 0x10000d, 0x10000d, 0x12000d, 0x0d000a,\n    0x0f000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000c,\n    0x10000d, 0x12000d, 0x11000d, 0x11000d, 0x11000d, 0x13000d, 0x11000d, 0x0d000a,\n    0x0e000d, 0x0f000c, 0x0d000c, 0x0e000c, 0x10000c, 0x10000c, 0x0f000c, 0x10000d,\n    0x10000d, 0x11000d, 0x12000d, 0x11000d, 0x13000d, 0x11000d, 0x10000d, 0x0d000a,\n    0x0a0009, 0x0a0009, 0x0a0009, 0x0b0009, 0x0b0009, 0x0c0009, 0x0c0009, 0x0c0009,\n    0x0d0009, 0x0d0009, 0x0d0009, 0x0d000a, 0x0d000a, 0x0d000a, 0x0d000a, 0x0a0006\n];\n/**\n * <CODE>\n *  for (i = 0; i < 3*3; i++) [\n *      table23[i] = ((ht[2].hlen[i]) << 16) + ht[3].hlen[i];\n *  ]\n * </CODE>\n *\n */\nTables.table23 = [\n    0x010002, 0x040003, 0x070007,\n    0x040004, 0x050004, 0x070007,\n    0x060006, 0x070007, 0x080008\n];\n\n/**\n * <CODE>\n *  for (i = 0; i < 4*4; i++) [\n *       table56[i] = ((ht[5].hlen[i]) << 16) + ht[6].hlen[i];\n *   ]\n * </CODE>\n *\n */\nTables.table56 = [\n    0x010003, 0x040004, 0x070006, 0x080008, 0x040004, 0x050004, 0x080006, 0x090007,\n    0x070005, 0x080006, 0x090007, 0x0a0008, 0x080007, 0x080007, 0x090008, 0x0a0009\n];\n\nTables.bitrate_table = [\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, -1], /* MPEG 2 */\n    [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1], /* MPEG 1 */\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, -1, -1, -1, -1, -1, -1, -1], /* MPEG 2.5 */\n];\n\n/**\n * MPEG 2, MPEG 1, MPEG 2.5.\n */\nTables.samplerate_table = [\n    [22050, 24000, 16000, -1],\n    [44100, 48000, 32000, -1],\n    [11025, 12000, 8000, -1],\n];\n\n/**\n * This is the scfsi_band table from 2.4.2.7 of the IS.\n */\nTables.scfsi_band = [0, 6, 11, 16, 21];\n\nmodule.exports = Tables;\n","'use strict';\n// based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\nvar regexNonASCII = /[^\\0-\\u007E]/; // non-ASCII chars\nvar regexSeparators = /[.\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\nvar OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n */\nvar ucs2decode = function (string) {\n  var output = [];\n  var counter = 0;\n  var length = string.length;\n  while (counter < length) {\n    var value = string.charCodeAt(counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // It's a high surrogate, and there is a next character.\n      var extra = string.charCodeAt(counter++);\n      if ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // It's an unmatched surrogate; only append this code unit, in case the\n        // next code unit is the high surrogate of a surrogate pair.\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n */\nvar digitToBasic = function (digit) {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n */\nvar adapt = function (delta, numPoints, firstTime) {\n  var k = 0;\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\n  delta += floor(delta / numPoints);\n  for (; delta > baseMinusTMin * tMax >> 1; k += base) {\n    delta = floor(delta / baseMinusTMin);\n  }\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n */\n// eslint-disable-next-line  max-statements\nvar encode = function (input) {\n  var output = [];\n\n  // Convert the input in UCS-2 to an array of Unicode code points.\n  input = ucs2decode(input);\n\n  // Cache the length.\n  var inputLength = input.length;\n\n  // Initialize the state.\n  var n = initialN;\n  var delta = 0;\n  var bias = initialBias;\n  var i, currentValue;\n\n  // Handle the basic code points.\n  for (i = 0; i < input.length; i++) {\n    currentValue = input[i];\n    if (currentValue < 0x80) {\n      output.push(stringFromCharCode(currentValue));\n    }\n  }\n\n  var basicLength = output.length; // number of basic code points.\n  var handledCPCount = basicLength; // number of code points that have been handled;\n\n  // Finish the basic string with a delimiter unless it's empty.\n  if (basicLength) {\n    output.push(delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n    // All non-basic code points < n have been handled already. Find the next larger one:\n    var m = maxInt;\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.\n    var handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n      throw RangeError(OVERFLOW_ERROR);\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n      if (currentValue < n && ++delta > maxInt) {\n        throw RangeError(OVERFLOW_ERROR);\n      }\n      if (currentValue == n) {\n        // Represent delta as a generalized variable-length integer.\n        var q = delta;\n        for (var k = base; /* no condition */; k += base) {\n          var t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n          if (q < t) break;\n          var qMinusT = q - t;\n          var baseMinusT = base - t;\n          output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT)));\n          q = floor(qMinusT / baseMinusT);\n        }\n\n        output.push(stringFromCharCode(digitToBasic(q)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n  }\n  return output.join('');\n};\n\nmodule.exports = function (input) {\n  var encoded = [];\n  var labels = input.toLowerCase().replace(regexSeparators, '\\u002E').split('.');\n  var i, label;\n  for (i = 0; i < labels.length; i++) {\n    label = labels[i];\n    encoded.push(regexNonASCII.test(label) ? 'xn--' + encode(label) : label);\n  }\n  return encoded.join('.');\n};\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditorView.vue?vue&type=style&index=0&id=0440d7d9&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditorView.vue?vue&type=style&index=0&id=0440d7d9&lang=scss&scoped=true&\"","//package mp3;\n\n/* MPEG modes */\nfunction MPEGMode(ordinal) {\n    var _ordinal = ordinal;\n    this.ordinal = function () {\n        return _ordinal;\n    }\n}\n\nMPEGMode.STEREO = new MPEGMode(0);\nMPEGMode.JOINT_STEREO = new MPEGMode(1);\nMPEGMode.DUAL_CHANNEL = new MPEGMode(2);\nMPEGMode.MONO = new MPEGMode(3);\nMPEGMode.NOT_SET = new MPEGMode(4);\n\nmodule.exports = MPEGMode;\n","var lamejs = require('lamejs');\n\nvar MAX_AMPLITUDE = 0x7FFF;\n\nfunction encodeMp3(audioBuffer, params, onProgress, cb) {\n\tif (audioBuffer.sampleRate !== 44100) {\n\t\t// TODO: generalize encoder for different sample rates\n\t\tthrow new Error('Expecting 44100 Hz sample rate');\n\t}\n\n\tvar nChannels = audioBuffer.numberOfChannels;\n\n\tif (nChannels !== 1 && nChannels !== 2) {\n\t\tthrow new Error('Expecting mono or stereo audioBuffer');\n\t}\n\n\tvar bitrate = params.bitrate || 128;\n\tif (bitrate < 96) {\n\t\t// lame fails to encode stereo audio if bitrate is lower than 96.\n\t\t// in which case, we force sound to be mono (use only channel 0)\n\t\tnChannels = 1;\n\t}\n\n\tvar bufferLength = audioBuffer.length;\n\n\t// convert audioBuffer to sample buffers\n\tvar buffers = [];\n\n\tfor (var channel = 0; channel < nChannels; channel++) {\n\t\tvar buffer = audioBuffer.getChannelData(channel);\n\t\tvar samples = new Int16Array(bufferLength);\n\n\t\tfor (var i = 0; i < bufferLength; ++i) {\n\t\t\tvar sample = buffer[i];\n\n\t\t\t// clamp and convert to 16bit number\n\t\t\tsample = Math.min(1, Math.max(-1, sample));\n\t\t\tsample = Math.round(sample * MAX_AMPLITUDE);\n\n\t\t\tsamples[i] = sample;\n\t\t}\n\n\t\tbuffers.push(samples);\n\t}\n\n\n\t// can be anything but make it a multiple of 576 to make encoders life easier\n\tBLOCK_SIZE = 1152;\n\tmp3encoder = new lamejs.Mp3Encoder(nChannels, 44100, bitrate);\n\tvar mp3Data = [];\n\n\tvar blockIndex = 0;\n\n\tfunction encodeChunk() {\n\t\tvar mp3buf;\n\t\tif (nChannels === 1) {\n\t\t\tvar chunk = buffers[0].subarray(blockIndex, blockIndex + BLOCK_SIZE);\n\t\t\tmp3buf = mp3encoder.encodeBuffer(chunk);\n\t\t} else {\n\t\t\tchunkL = buffers[0].subarray(blockIndex, blockIndex + BLOCK_SIZE);\n\t\t\tchunkR = buffers[1].subarray(blockIndex, blockIndex + BLOCK_SIZE);\n\t\t\tvar mp3buf = mp3encoder.encodeBuffer(chunkL, chunkR);\n\t\t}\n\n\t\tif (mp3buf.length > 0) {\n\t\t\tmp3Data.push(mp3buf);\n\t\t}\n\n\t\tblockIndex += BLOCK_SIZE;\n\t}\n\n\tfunction update() {\n\t\tif (blockIndex >= bufferLength) {\n\t\t\t// finish writing mp3\n\t\t\tvar mp3buf = mp3encoder.flush();\n\n\t\t\tif (mp3buf.length > 0) {\n\t\t\t\tmp3Data.push(mp3buf);\n\t\t\t}\n\n\t\t\treturn cb(new Blob(mp3Data, { type: 'audio/mp3' }));\n\t\t}\n\n\t\tvar start = performance.now();\n\n\t\twhile (blockIndex < bufferLength && performance.now() - start < 15) {\n\t\t\tencodeChunk();\n\t\t}\n\n\t\tonProgress && onProgress(blockIndex / bufferLength);\n\t\tsetTimeout(update, 16.7);\n\t}\n\n\tupdate();\n}\n\nmodule.exports = encodeMp3;\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Takehiro = require('./Takehiro.js');\nvar Tables = require('./Tables.js');\nvar Encoder = require('./Encoder.js');\nvar LameInternalFlags = require('./LameInternalFlags.js');\n\nBitStream.EQ = function (a, b) {\n    return (Math.abs(a) > Math.abs(b)) ? (Math.abs((a) - (b)) <= (Math\n        .abs(a) * 1e-6))\n        : (Math.abs((a) - (b)) <= (Math.abs(b) * 1e-6));\n};\n\nBitStream.NEQ = function (a, b) {\n    return !BitStream.EQ(a, b);\n};\n\nfunction BitStream() {\n    var self = this;\n    var CRC16_POLYNOMIAL = 0x8005;\n\n    /*\n     * we work with ints, so when doing bit manipulation, we limit ourselves to\n     * MAX_LENGTH-2 just to be on the safe side\n     */\n    var MAX_LENGTH = 32;\n\n    //GainAnalysis ga;\n    //MPGLib mpg;\n    //Version ver;\n    //VBRTag vbr;\n    var ga = null;\n    var mpg = null;\n    var ver = null;\n    var vbr = null;\n\n    //public final void setModules(GainAnalysis ga, MPGLib mpg, Version ver,\n    //\tVBRTag vbr) {\n\n    this.setModules = function (_ga, _mpg, _ver, _vbr) {\n        ga = _ga;\n        mpg = _mpg;\n        ver = _ver;\n        vbr = _vbr;\n    };\n\n    /**\n     * Bit stream buffer.\n     */\n    //private byte[] buf;\n    var buf = null;\n    /**\n     * Bit counter of bit stream.\n     */\n    var totbit = 0;\n    /**\n     * Pointer to top byte in buffer.\n     */\n    var bufByteIdx = 0;\n    /**\n     * Pointer to top bit of top byte in buffer.\n     */\n    var bufBitIdx = 0;\n\n    /**\n     * compute bitsperframe and mean_bits for a layer III frame\n     */\n    this.getframebits = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var bit_rate;\n\n        /* get bitrate in kbps [?] */\n        if (gfc.bitrate_index != 0)\n            bit_rate = Tables.bitrate_table[gfp.version][gfc.bitrate_index];\n        else\n            bit_rate = gfp.brate;\n        assert(8 <= bit_rate && bit_rate <= 640);\n\n        /* main encoding routine toggles padding on and off */\n        /* one Layer3 Slot consists of 8 bits */\n        var bytes = 0 | (gfp.version + 1) * 72000 * bit_rate / gfp.out_samplerate + gfc.padding;\n        return 8 * bytes;\n    };\n\n    function putheader_bits(gfc) {\n        System.arraycopy(gfc.header[gfc.w_ptr].buf, 0, buf, bufByteIdx, gfc.sideinfo_len);\n        bufByteIdx += gfc.sideinfo_len;\n        totbit += gfc.sideinfo_len * 8;\n        gfc.w_ptr = (gfc.w_ptr + 1) & (LameInternalFlags.MAX_HEADER_BUF - 1);\n    }\n\n    /**\n     * write j bits into the bit stream\n     */\n    function putbits2(gfc, val, j) {\n        assert(j < MAX_LENGTH - 2);\n\n        while (j > 0) {\n            var k;\n            if (bufBitIdx == 0) {\n                bufBitIdx = 8;\n                bufByteIdx++;\n                assert(bufByteIdx < Lame.LAME_MAXMP3BUFFER);\n                assert(gfc.header[gfc.w_ptr].write_timing >= totbit);\n                if (gfc.header[gfc.w_ptr].write_timing == totbit) {\n                    putheader_bits(gfc);\n                }\n                buf[bufByteIdx] = 0;\n            }\n\n            k = Math.min(j, bufBitIdx);\n            j -= k;\n\n            bufBitIdx -= k;\n\n            assert(j < MAX_LENGTH);\n            /* 32 too large on 32 bit machines */\n            assert(bufBitIdx < MAX_LENGTH);\n\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\n            totbit += k;\n        }\n    }\n\n    /**\n     * write j bits into the bit stream, ignoring frame headers\n     */\n    function putbits_noheaders(gfc, val, j) {\n        assert(j < MAX_LENGTH - 2);\n\n        while (j > 0) {\n            var k;\n            if (bufBitIdx == 0) {\n                bufBitIdx = 8;\n                bufByteIdx++;\n                assert(bufByteIdx < Lame.LAME_MAXMP3BUFFER);\n                buf[bufByteIdx] = 0;\n            }\n\n            k = Math.min(j, bufBitIdx);\n            j -= k;\n\n            bufBitIdx -= k;\n\n            assert(j < MAX_LENGTH);\n            /* 32 too large on 32 bit machines */\n            assert(bufBitIdx < MAX_LENGTH);\n\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\n            totbit += k;\n        }\n    }\n\n    /**\n     * Some combinations of bitrate, Fs, and stereo make it impossible to stuff\n     * out a frame using just main_data, due to the limited number of bits to\n     * indicate main_data_length. In these situations, we put stuffing bits into\n     * the ancillary data...\n     */\n    function drain_into_ancillary(gfp, remainingBits) {\n        var gfc = gfp.internal_flags;\n        var i;\n        assert(remainingBits >= 0);\n\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x4c, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x41, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x4d, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x45, 8);\n            remainingBits -= 8;\n        }\n\n        if (remainingBits >= 32) {\n            var version = ver.getLameShortVersion();\n            if (remainingBits >= 32)\n                for (i = 0; i < version.length && remainingBits >= 8; ++i) {\n                    remainingBits -= 8;\n                    putbits2(gfc, version.charAt(i), 8);\n                }\n        }\n\n        for (; remainingBits >= 1; remainingBits -= 1) {\n            putbits2(gfc, gfc.ancillary_flag, 1);\n            gfc.ancillary_flag ^= (!gfp.disable_reservoir ? 1 : 0);\n        }\n\n        assert(remainingBits == 0);\n\n    }\n\n    /**\n     * write N bits into the header\n     */\n    function writeheader(gfc, val, j) {\n        var ptr = gfc.header[gfc.h_ptr].ptr;\n\n        while (j > 0) {\n            var k = Math.min(j, 8 - (ptr & 7));\n            j -= k;\n            assert(j < MAX_LENGTH);\n            /* >> 32 too large for 32 bit machines */\n\n            gfc.header[gfc.h_ptr].buf[ptr >> 3] |= ((val >> j)) << (8 - (ptr & 7) - k);\n            ptr += k;\n        }\n        gfc.header[gfc.h_ptr].ptr = ptr;\n    }\n\n    function CRC_update(value, crc) {\n        value <<= 8;\n        for (var i = 0; i < 8; i++) {\n            value <<= 1;\n            crc <<= 1;\n\n            if ((((crc ^ value) & 0x10000) != 0))\n                crc ^= CRC16_POLYNOMIAL;\n        }\n        return crc;\n    }\n\n    this.CRC_writeheader = function (gfc, header) {\n        var crc = 0xffff;\n        /* (jo) init crc16 for error_protection */\n\n        crc = CRC_update(header[2] & 0xff, crc);\n        crc = CRC_update(header[3] & 0xff, crc);\n        for (var i = 6; i < gfc.sideinfo_len; i++) {\n            crc = CRC_update(header[i] & 0xff, crc);\n        }\n\n        header[4] = (byte)(crc >> 8);\n        header[5] = (byte)(crc & 255);\n    };\n\n    function encodeSideInfo2(gfp, bitsPerFrame) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        var gr, ch;\n\n        l3_side = gfc.l3_side;\n        gfc.header[gfc.h_ptr].ptr = 0;\n        Arrays.fill(gfc.header[gfc.h_ptr].buf, 0, gfc.sideinfo_len, 0);\n        if (gfp.out_samplerate < 16000)\n            writeheader(gfc, 0xffe, 12);\n        else\n            writeheader(gfc, 0xfff, 12);\n        writeheader(gfc, (gfp.version), 1);\n        writeheader(gfc, 4 - 3, 2);\n        writeheader(gfc, (!gfp.error_protection ? 1 : 0), 1);\n        writeheader(gfc, (gfc.bitrate_index), 4);\n        writeheader(gfc, (gfc.samplerate_index), 2);\n        writeheader(gfc, (gfc.padding), 1);\n        writeheader(gfc, (gfp.extension), 1);\n        writeheader(gfc, (gfp.mode.ordinal()), 2);\n        writeheader(gfc, (gfc.mode_ext), 2);\n        writeheader(gfc, (gfp.copyright), 1);\n        writeheader(gfc, (gfp.original), 1);\n        writeheader(gfc, (gfp.emphasis), 2);\n        if (gfp.error_protection) {\n            writeheader(gfc, 0, 16);\n            /* dummy */\n        }\n\n        if (gfp.version == 1) {\n            /* MPEG1 */\n            assert(l3_side.main_data_begin >= 0);\n            writeheader(gfc, (l3_side.main_data_begin), 9);\n\n            if (gfc.channels_out == 2)\n                writeheader(gfc, l3_side.private_bits, 3);\n            else\n                writeheader(gfc, l3_side.private_bits, 5);\n\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var band;\n                for (band = 0; band < 4; band++) {\n                    writeheader(gfc, l3_side.scfsi[ch][band], 1);\n                }\n            }\n\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var gi = l3_side.tt[gr][ch];\n                    writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\n                    writeheader(gfc, gi.big_values / 2, 9);\n                    writeheader(gfc, gi.global_gain, 8);\n                    writeheader(gfc, gi.scalefac_compress, 4);\n\n                    if (gi.block_type != Encoder.NORM_TYPE) {\n                        writeheader(gfc, 1, 1);\n                        /* window_switching_flag */\n                        writeheader(gfc, gi.block_type, 2);\n                        writeheader(gfc, gi.mixed_block_flag, 1);\n\n                        if (gi.table_select[0] == 14)\n                            gi.table_select[0] = 16;\n                        writeheader(gfc, gi.table_select[0], 5);\n                        if (gi.table_select[1] == 14)\n                            gi.table_select[1] = 16;\n                        writeheader(gfc, gi.table_select[1], 5);\n\n                        writeheader(gfc, gi.subblock_gain[0], 3);\n                        writeheader(gfc, gi.subblock_gain[1], 3);\n                        writeheader(gfc, gi.subblock_gain[2], 3);\n                    } else {\n                        writeheader(gfc, 0, 1);\n                        /* window_switching_flag */\n                        if (gi.table_select[0] == 14)\n                            gi.table_select[0] = 16;\n                        writeheader(gfc, gi.table_select[0], 5);\n                        if (gi.table_select[1] == 14)\n                            gi.table_select[1] = 16;\n                        writeheader(gfc, gi.table_select[1], 5);\n                        if (gi.table_select[2] == 14)\n                            gi.table_select[2] = 16;\n                        writeheader(gfc, gi.table_select[2], 5);\n\n                        assert(0 <= gi.region0_count && gi.region0_count < 16);\n                        assert(0 <= gi.region1_count && gi.region1_count < 8);\n                        writeheader(gfc, gi.region0_count, 4);\n                        writeheader(gfc, gi.region1_count, 3);\n                    }\n                    writeheader(gfc, gi.preflag, 1);\n                    writeheader(gfc, gi.scalefac_scale, 1);\n                    writeheader(gfc, gi.count1table_select, 1);\n                }\n            }\n        } else {\n            /* MPEG2 */\n            assert(l3_side.main_data_begin >= 0);\n            writeheader(gfc, (l3_side.main_data_begin), 8);\n            writeheader(gfc, l3_side.private_bits, gfc.channels_out);\n\n            gr = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = l3_side.tt[gr][ch];\n                writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\n                writeheader(gfc, gi.big_values / 2, 9);\n                writeheader(gfc, gi.global_gain, 8);\n                writeheader(gfc, gi.scalefac_compress, 9);\n\n                if (gi.block_type != Encoder.NORM_TYPE) {\n                    writeheader(gfc, 1, 1);\n                    /* window_switching_flag */\n                    writeheader(gfc, gi.block_type, 2);\n                    writeheader(gfc, gi.mixed_block_flag, 1);\n\n                    if (gi.table_select[0] == 14)\n                        gi.table_select[0] = 16;\n                    writeheader(gfc, gi.table_select[0], 5);\n                    if (gi.table_select[1] == 14)\n                        gi.table_select[1] = 16;\n                    writeheader(gfc, gi.table_select[1], 5);\n\n                    writeheader(gfc, gi.subblock_gain[0], 3);\n                    writeheader(gfc, gi.subblock_gain[1], 3);\n                    writeheader(gfc, gi.subblock_gain[2], 3);\n                } else {\n                    writeheader(gfc, 0, 1);\n                    /* window_switching_flag */\n                    if (gi.table_select[0] == 14)\n                        gi.table_select[0] = 16;\n                    writeheader(gfc, gi.table_select[0], 5);\n                    if (gi.table_select[1] == 14)\n                        gi.table_select[1] = 16;\n                    writeheader(gfc, gi.table_select[1], 5);\n                    if (gi.table_select[2] == 14)\n                        gi.table_select[2] = 16;\n                    writeheader(gfc, gi.table_select[2], 5);\n\n                    assert(0 <= gi.region0_count && gi.region0_count < 16);\n                    assert(0 <= gi.region1_count && gi.region1_count < 8);\n                    writeheader(gfc, gi.region0_count, 4);\n                    writeheader(gfc, gi.region1_count, 3);\n                }\n\n                writeheader(gfc, gi.scalefac_scale, 1);\n                writeheader(gfc, gi.count1table_select, 1);\n            }\n        }\n\n        if (gfp.error_protection) {\n            /* (jo) error_protection: add crc16 information to header */\n            CRC_writeheader(gfc, gfc.header[gfc.h_ptr].buf);\n        }\n\n        {\n            var old = gfc.h_ptr;\n            assert(gfc.header[old].ptr == gfc.sideinfo_len * 8);\n\n            gfc.h_ptr = (old + 1) & (LameInternalFlags.MAX_HEADER_BUF - 1);\n            gfc.header[gfc.h_ptr].write_timing = gfc.header[old].write_timing\n                + bitsPerFrame;\n\n            if (gfc.h_ptr == gfc.w_ptr) {\n                /* yikes! we are out of header buffer space */\n                System.err\n                    .println(\"Error: MAX_HEADER_BUF too small in bitstream.c \\n\");\n            }\n\n        }\n    }\n\n    function huffman_coder_count1(gfc, gi) {\n        /* Write count1 area */\n        var h = Tables.ht[gi.count1table_select + 32];\n        var i, bits = 0;\n\n        var ix = gi.big_values;\n        var xr = gi.big_values;\n        assert(gi.count1table_select < 2);\n\n        for (i = (gi.count1 - gi.big_values) / 4; i > 0; --i) {\n            var huffbits = 0;\n            var p = 0, v;\n\n            v = gi.l3_enc[ix + 0];\n            if (v != 0) {\n                p += 8;\n                if (gi.xr[xr + 0] < 0)\n                    huffbits++;\n                assert(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 1];\n            if (v != 0) {\n                p += 4;\n                huffbits *= 2;\n                if (gi.xr[xr + 1] < 0)\n                    huffbits++;\n                assert(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 2];\n            if (v != 0) {\n                p += 2;\n                huffbits *= 2;\n                if (gi.xr[xr + 2] < 0)\n                    huffbits++;\n                assert(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 3];\n            if (v != 0) {\n                p++;\n                huffbits *= 2;\n                if (gi.xr[xr + 3] < 0)\n                    huffbits++;\n                assert(v <= 1);\n            }\n\n            ix += 4;\n            xr += 4;\n            putbits2(gfc, huffbits + h.table[p], h.hlen[p]);\n            bits += h.hlen[p];\n        }\n        return bits;\n    }\n\n    /**\n     * Implements the pseudocode of page 98 of the IS\n     */\n    function Huffmancode(gfc, tableindex, start, end, gi) {\n        var h = Tables.ht[tableindex];\n        var bits = 0;\n\n        assert(tableindex < 32);\n        if (0 == tableindex)\n            return bits;\n\n        for (var i = start; i < end; i += 2) {\n            var cbits = 0;\n            var xbits = 0;\n            var linbits = h.xlen;\n            var xlen = h.xlen;\n            var ext = 0;\n            var x1 = gi.l3_enc[i];\n            var x2 = gi.l3_enc[i + 1];\n\n            if (x1 != 0) {\n                if (gi.xr[i] < 0)\n                    ext++;\n                cbits--;\n            }\n\n            if (tableindex > 15) {\n                /* use ESC-words */\n                if (x1 > 14) {\n                    var linbits_x1 = x1 - 15;\n                    assert(linbits_x1 <= h.linmax);\n                    ext |= linbits_x1 << 1;\n                    xbits = linbits;\n                    x1 = 15;\n                }\n\n                if (x2 > 14) {\n                    var linbits_x2 = x2 - 15;\n                    assert(linbits_x2 <= h.linmax);\n                    ext <<= linbits;\n                    ext |= linbits_x2;\n                    xbits += linbits;\n                    x2 = 15;\n                }\n                xlen = 16;\n            }\n\n            if (x2 != 0) {\n                ext <<= 1;\n                if (gi.xr[i + 1] < 0)\n                    ext++;\n                cbits--;\n            }\n\n            assert((x1 | x2) < 16);\n\n            x1 = x1 * xlen + x2;\n            xbits -= cbits;\n            cbits += h.hlen[x1];\n\n            assert(cbits <= MAX_LENGTH);\n            assert(xbits <= MAX_LENGTH);\n\n            putbits2(gfc, h.table[x1], cbits);\n            putbits2(gfc, ext, xbits);\n            bits += cbits + xbits;\n        }\n        return bits;\n    }\n\n    /**\n     * Note the discussion of huffmancodebits() on pages 28 and 29 of the IS, as\n     * well as the definitions of the side information on pages 26 and 27.\n     */\n    function ShortHuffmancodebits(gfc, gi) {\n        var region1Start = 3 * gfc.scalefac_band.s[3];\n        if (region1Start > gi.big_values)\n            region1Start = gi.big_values;\n\n        /* short blocks do not have a region2 */\n        var bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\n            gi.big_values, gi);\n        return bits;\n    }\n\n    function LongHuffmancodebits(gfc, gi) {\n        var bigvalues, bits;\n        var region1Start, region2Start;\n\n        bigvalues = gi.big_values;\n        assert(0 <= bigvalues && bigvalues <= 576);\n\n        var i = gi.region0_count + 1;\n        assert(0 <= i);\n        assert(i < gfc.scalefac_band.l.length);\n        region1Start = gfc.scalefac_band.l[i];\n        i += gi.region1_count + 1;\n        assert(0 <= i);\n        assert(i < gfc.scalefac_band.l.length);\n        region2Start = gfc.scalefac_band.l[i];\n\n        if (region1Start > bigvalues)\n            region1Start = bigvalues;\n\n        if (region2Start > bigvalues)\n            region2Start = bigvalues;\n\n        bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\n            region2Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[2], region2Start, bigvalues,\n            gi);\n        return bits;\n    }\n\n    function writeMainData(gfp) {\n        var gr, ch, sfb, data_bits, tot_bits = 0;\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n\n        if (gfp.version == 1) {\n            /* MPEG 1 */\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var gi = l3_side.tt[gr][ch];\n                    var slen1 = Takehiro.slen1_tab[gi.scalefac_compress];\n                    var slen2 = Takehiro.slen2_tab[gi.scalefac_compress];\n                    data_bits = 0;\n                    for (sfb = 0; sfb < gi.sfbdivide; sfb++) {\n                        if (gi.scalefac[sfb] == -1)\n                            continue;\n                        /* scfsi is used */\n                        putbits2(gfc, gi.scalefac[sfb], slen1);\n                        data_bits += slen1;\n                    }\n                    for (; sfb < gi.sfbmax; sfb++) {\n                        if (gi.scalefac[sfb] == -1)\n                            continue;\n                        /* scfsi is used */\n                        putbits2(gfc, gi.scalefac[sfb], slen2);\n                        data_bits += slen2;\n                    }\n                    assert(data_bits == gi.part2_length);\n\n                    if (gi.block_type == Encoder.SHORT_TYPE) {\n                        data_bits += ShortHuffmancodebits(gfc, gi);\n                    } else {\n                        data_bits += LongHuffmancodebits(gfc, gi);\n                    }\n                    data_bits += huffman_coder_count1(gfc, gi);\n                    /* does bitcount in quantize.c agree with actual bit count? */\n                    assert(data_bits == gi.part2_3_length + gi.part2_length);\n                    tot_bits += data_bits;\n                }\n                /* for ch */\n            }\n            /* for gr */\n        } else {\n            /* MPEG 2 */\n            gr = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = l3_side.tt[gr][ch];\n                var i, sfb_partition, scale_bits = 0;\n                assert(gi.sfb_partition_table != null);\n                data_bits = 0;\n                sfb = 0;\n                sfb_partition = 0;\n\n                if (gi.block_type == Encoder.SHORT_TYPE) {\n                    for (; sfb_partition < 4; sfb_partition++) {\n                        var sfbs = gi.sfb_partition_table[sfb_partition] / 3;\n                        var slen = gi.slen[sfb_partition];\n                        for (i = 0; i < sfbs; i++, sfb++) {\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 0], 0), slen);\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 1], 0), slen);\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 2], 0), slen);\n                            scale_bits += 3 * slen;\n                        }\n                    }\n                    data_bits += ShortHuffmancodebits(gfc, gi);\n                } else {\n                    for (; sfb_partition < 4; sfb_partition++) {\n                        var sfbs = gi.sfb_partition_table[sfb_partition];\n                        var slen = gi.slen[sfb_partition];\n                        for (i = 0; i < sfbs; i++, sfb++) {\n                            putbits2(gfc, Math.max(gi.scalefac[sfb], 0), slen);\n                            scale_bits += slen;\n                        }\n                    }\n                    data_bits += LongHuffmancodebits(gfc, gi);\n                }\n                data_bits += huffman_coder_count1(gfc, gi);\n                /* does bitcount in quantize.c agree with actual bit count? */\n                assert(data_bits == gi.part2_3_length);\n                assert(scale_bits == gi.part2_length);\n                tot_bits += scale_bits + data_bits;\n            }\n            /* for ch */\n        }\n        /* for gf */\n        return tot_bits;\n    }\n\n    /* main_data */\n\n    function TotalBytes() {\n        this.total = 0;\n    }\n\n    /*\n     * compute the number of bits required to flush all mp3 frames currently in\n     * the buffer. This should be the same as the reservoir size. Only call this\n     * routine between frames - i.e. only after all headers and data have been\n     * added to the buffer by format_bitstream().\n     *\n     * Also compute total_bits_output = size of mp3 buffer (including frame\n     * headers which may not have yet been send to the mp3 buffer) + number of\n     * bits needed to flush all mp3 frames.\n     *\n     * total_bytes_output is the size of the mp3 output buffer if\n     * lame_encode_flush_nogap() was called right now.\n     */\n    function compute_flushbits(gfp, total_bytes_output) {\n        var gfc = gfp.internal_flags;\n        var flushbits, remaining_headers;\n        var bitsPerFrame;\n        var last_ptr, first_ptr;\n        first_ptr = gfc.w_ptr;\n        /* first header to add to bitstream */\n        last_ptr = gfc.h_ptr - 1;\n        /* last header to add to bitstream */\n        if (last_ptr == -1)\n            last_ptr = LameInternalFlags.MAX_HEADER_BUF - 1;\n\n        /* add this many bits to bitstream so we can flush all headers */\n        flushbits = gfc.header[last_ptr].write_timing - totbit;\n        total_bytes_output.total = flushbits;\n\n        if (flushbits >= 0) {\n            /* if flushbits >= 0, some headers have not yet been written */\n            /* reduce flushbits by the size of the headers */\n            remaining_headers = 1 + last_ptr - first_ptr;\n            if (last_ptr < first_ptr)\n                remaining_headers = 1 + last_ptr - first_ptr\n                    + LameInternalFlags.MAX_HEADER_BUF;\n            flushbits -= remaining_headers * 8 * gfc.sideinfo_len;\n        }\n\n        /*\n         * finally, add some bits so that the last frame is complete these bits\n         * are not necessary to decode the last frame, but some decoders will\n         * ignore last frame if these bits are missing\n         */\n        bitsPerFrame = self.getframebits(gfp);\n        flushbits += bitsPerFrame;\n        total_bytes_output.total += bitsPerFrame;\n        /* round up: */\n        if ((total_bytes_output.total % 8) != 0)\n            total_bytes_output.total = 1 + (total_bytes_output.total / 8);\n        else\n            total_bytes_output.total = (total_bytes_output.total / 8);\n        total_bytes_output.total += bufByteIdx + 1;\n\n        if (flushbits < 0) {\n            System.err.println(\"strange error flushing buffer ... \\n\");\n        }\n        return flushbits;\n    }\n\n    this.flush_bitstream = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        var flushbits;\n        var last_ptr = gfc.h_ptr - 1;\n        /* last header to add to bitstream */\n        if (last_ptr == -1)\n            last_ptr = LameInternalFlags.MAX_HEADER_BUF - 1;\n        l3_side = gfc.l3_side;\n\n        if ((flushbits = compute_flushbits(gfp, new TotalBytes())) < 0)\n            return;\n        drain_into_ancillary(gfp, flushbits);\n\n        /* check that the 100% of the last frame has been written to bitstream */\n        assert(gfc.header[last_ptr].write_timing + this.getframebits(gfp) == totbit);\n\n        /*\n         * we have padded out all frames with ancillary data, which is the same\n         * as filling the bitreservoir with ancillary data, so :\n         */\n        gfc.ResvSize = 0;\n        l3_side.main_data_begin = 0;\n\n        /* save the ReplayGain value */\n        if (gfc.findReplayGain) {\n            var RadioGain = ga.GetTitleGain(gfc.rgdata);\n            assert(NEQ(RadioGain, GainAnalysis.GAIN_NOT_ENOUGH_SAMPLES));\n            gfc.RadioGain = Math.floor(RadioGain * 10.0 + 0.5) | 0;\n            /* round to nearest */\n        }\n\n        /* find the gain and scale change required for no clipping */\n        if (gfc.findPeakSample) {\n            gfc.noclipGainChange = Math.ceil(Math\n                        .log10(gfc.PeakSample / 32767.0) * 20.0 * 10.0) | 0;\n            /* round up */\n\n            if (gfc.noclipGainChange > 0) {\n                /* clipping occurs */\n                if (EQ(gfp.scale, 1.0) || EQ(gfp.scale, 0.0))\n                    gfc.noclipScale = (Math\n                        .floor((32767.0 / gfc.PeakSample) * 100.0) / 100.0);\n                /* round down */\n                else {\n                    /*\n                     * the user specified his own scaling factor. We could\n                     * suggest the scaling factor of\n                     * (32767.0/gfp.PeakSample)*(gfp.scale) but it's usually\n                     * very inaccurate. So we'd rather not advice him on the\n                     * scaling factor.\n                     */\n                    gfc.noclipScale = -1;\n                }\n            } else\n            /* no clipping */\n                gfc.noclipScale = -1;\n        }\n    };\n\n    this.add_dummy_byte = function (gfp, val, n) {\n        var gfc = gfp.internal_flags;\n        var i;\n\n        while (n-- > 0) {\n            putbits_noheaders(gfc, val, 8);\n\n            for (i = 0; i < LameInternalFlags.MAX_HEADER_BUF; ++i)\n                gfc.header[i].write_timing += 8;\n        }\n    };\n\n    /**\n     * This is called after a frame of audio has been quantized and coded. It\n     * will write the encoded audio to the bitstream. Note that from a layer3\n     * encoder's perspective the bit stream is primarily a series of main_data()\n     * blocks, with header and side information inserted at the proper locations\n     * to maintain framing. (See Figure A.7 in the IS).\n     */\n    this.format_bitstream = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        l3_side = gfc.l3_side;\n\n        var bitsPerFrame = this.getframebits(gfp);\n        drain_into_ancillary(gfp, l3_side.resvDrain_pre);\n\n        encodeSideInfo2(gfp, bitsPerFrame);\n        var bits = 8 * gfc.sideinfo_len;\n        bits += writeMainData(gfp);\n        drain_into_ancillary(gfp, l3_side.resvDrain_post);\n        bits += l3_side.resvDrain_post;\n\n        l3_side.main_data_begin += (bitsPerFrame - bits) / 8;\n\n        /*\n         * compare number of bits needed to clear all buffered mp3 frames with\n         * what we think the resvsize is:\n         */\n        if (compute_flushbits(gfp, new TotalBytes()) != gfc.ResvSize) {\n            System.err.println(\"Internal buffer inconsistency. flushbits <> ResvSize\");\n        }\n\n        /*\n         * compare main_data_begin for the next frame with what we think the\n         * resvsize is:\n         */\n        if ((l3_side.main_data_begin * 8) != gfc.ResvSize) {\n            System.err.printf(\"bit reservoir error: \\n\"\n                + \"l3_side.main_data_begin: %d \\n\"\n                + \"Resvoir size:             %d \\n\"\n                + \"resv drain (post)         %d \\n\"\n                + \"resv drain (pre)          %d \\n\"\n                + \"header and sideinfo:      %d \\n\"\n                + \"data bits:                %d \\n\"\n                + \"total bits:               %d (remainder: %d) \\n\"\n                + \"bitsperframe:             %d \\n\",\n                8 * l3_side.main_data_begin, gfc.ResvSize,\n                l3_side.resvDrain_post, l3_side.resvDrain_pre,\n                8 * gfc.sideinfo_len, bits - l3_side.resvDrain_post - 8\n                * gfc.sideinfo_len, bits, bits % 8, bitsPerFrame);\n\n            System.err.println(\"This is a fatal error.  It has several possible causes:\");\n            System.err.println(\"90%%  LAME compiled with buggy version of gcc using advanced optimizations\");\n            System.err.println(\" 9%%  Your system is overclocked\");\n            System.err.println(\" 1%%  bug in LAME encoding library\");\n\n            gfc.ResvSize = l3_side.main_data_begin * 8;\n        }\n        //;\n        assert(totbit % 8 == 0);\n\n        if (totbit > 1000000000) {\n            /*\n             * to avoid totbit overflow, (at 8h encoding at 128kbs) lets reset\n             * bit counter\n             */\n            var i;\n            for (i = 0; i < LameInternalFlags.MAX_HEADER_BUF; ++i)\n                gfc.header[i].write_timing -= totbit;\n            totbit = 0;\n        }\n\n        return 0;\n    };\n\n    /**\n     * <PRE>\n     * copy data out of the internal MP3 bit buffer into a user supplied\n     *       unsigned char buffer.\n     *\n     *       mp3data=0      indicates data in buffer is an id3tags and VBR tags\n     *       mp3data=1      data is real mp3 frame data.\n     * </PRE>\n     */\n    this.copy_buffer = function (gfc, buffer, bufferPos, size, mp3data) {\n        var minimum = bufByteIdx + 1;\n        if (minimum <= 0)\n            return 0;\n        if (size != 0 && minimum > size) {\n            /* buffer is too small */\n            return -1;\n        }\n        System.arraycopy(buf, 0, buffer, bufferPos, minimum);\n        bufByteIdx = -1;\n        bufBitIdx = 0;\n\n        if (mp3data != 0) {\n            var crc = new_int(1);\n            crc[0] = gfc.nMusicCRC;\n            vbr.updateMusicCRC(crc, buffer, bufferPos, minimum);\n            gfc.nMusicCRC = crc[0];\n\n            /**\n             * sum number of bytes belonging to the mp3 stream this info will be\n             * written into the Xing/LAME header for seeking\n             */\n            if (minimum > 0) {\n                gfc.VBR_seek_table.nBytesWritten += minimum;\n            }\n\n            if (gfc.decode_on_the_fly) { /* decode the frame */\n                var pcm_buf = new_float_n([2, 1152]);\n                var mp3_in = minimum;\n                var samples_out = -1;\n                var i;\n\n                /* re-synthesis to pcm. Repeat until we get a samples_out=0 */\n                while (samples_out != 0) {\n\n                    samples_out = mpg.hip_decode1_unclipped(gfc.hip, buffer,\n                        bufferPos, mp3_in, pcm_buf[0], pcm_buf[1]);\n                    /*\n                     * samples_out = 0: need more data to decode samples_out =\n                     * -1: error. Lets assume 0 pcm output samples_out = number\n                     * of samples output\n                     */\n\n                    /*\n                     * set the lenght of the mp3 input buffer to zero, so that\n                     * in the next iteration of the loop we will be querying\n                     * mpglib about buffered data\n                     */\n                    mp3_in = 0;\n\n                    if (samples_out == -1) {\n                        /*\n                         * error decoding. Not fatal, but might screw up the\n                         * ReplayGain tag. What should we do? Ignore for now\n                         */\n                        samples_out = 0;\n                    }\n                    if (samples_out > 0) {\n                        /* process the PCM data */\n\n                        /*\n                         * this should not be possible, and indicates we have\n                         * overflown the pcm_buf buffer\n                         */\n                        assert(samples_out <= 1152);\n\n                        if (gfc.findPeakSample) {\n                            for (i = 0; i < samples_out; i++) {\n                                if (pcm_buf[0][i] > gfc.PeakSample)\n                                    gfc.PeakSample = pcm_buf[0][i];\n                                else if (-pcm_buf[0][i] > gfc.PeakSample)\n                                    gfc.PeakSample = -pcm_buf[0][i];\n                            }\n                            if (gfc.channels_out > 1)\n                                for (i = 0; i < samples_out; i++) {\n                                    if (pcm_buf[1][i] > gfc.PeakSample)\n                                        gfc.PeakSample = pcm_buf[1][i];\n                                    else if (-pcm_buf[1][i] > gfc.PeakSample)\n                                        gfc.PeakSample = -pcm_buf[1][i];\n                                }\n                        }\n\n                        if (gfc.findReplayGain)\n                            if (ga.AnalyzeSamples(gfc.rgdata, pcm_buf[0], 0,\n                                    pcm_buf[1], 0, samples_out,\n                                    gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                                return -6;\n\n                    }\n                    /* if (samples_out>0) */\n                }\n                /* while (samples_out!=0) */\n            }\n            /* if (gfc.decode_on_the_fly) */\n\n        }\n        /* if (mp3data) */\n        return minimum;\n    };\n\n    this.init_bit_stream_w = function (gfc) {\n        buf = new_byte(Lame.LAME_MAXMP3BUFFER);\n\n        gfc.h_ptr = gfc.w_ptr = 0;\n        gfc.header[gfc.h_ptr].write_timing = 0;\n        bufByteIdx = -1;\n        bufBitIdx = 0;\n        totbit = 0;\n    };\n\n    // From machine.h\n\n\n}\n\nmodule.exports = BitStream;\n","var DESCRIPTORS = require('../internals/descriptors');\nvar objectKeys = require('../internals/object-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject(it);\n    var keys = objectKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {\n        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nmodule.exports = {\n  // `Object.entries` method\n  // https://tc39.github.io/ecma262/#sec-object.entries\n  entries: createMethod(true),\n  // `Object.values` method\n  // https://tc39.github.io/ecma262/#sec-object.values\n  values: createMethod(false)\n};\n","var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar GainAnalysis = require('./GainAnalysis.js');\n\nfunction ReplayGain() {\n    this.linprebuf = new_float(GainAnalysis.MAX_ORDER * 2);\n    /**\n     * left input samples, with pre-buffer\n     */\n    this.linpre = 0;\n    this.lstepbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\n    /**\n     * left \"first step\" (i.e. post first filter) samples\n     */\n    this.lstep = 0;\n    this.loutbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\n    /**\n     * left \"out\" (i.e. post second filter) samples\n     */\n    this.lout = 0;\n    this.rinprebuf = new_float(GainAnalysis.MAX_ORDER * 2);\n    /**\n     * right input samples ...\n     */\n    this.rinpre = 0;\n    this.rstepbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\n    this.rstep = 0;\n    this.routbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\n    this.rout = 0;\n    /**\n     * number of samples required to reach number of milliseconds required\n     * for RMS window\n     */\n    this.sampleWindow = 0;\n    this.totsamp = 0;\n    this.lsum = 0.;\n    this.rsum = 0.;\n    this.freqindex = 0;\n    this.first = 0;\n    this.A = new_int(0 | (GainAnalysis.STEPS_per_dB * GainAnalysis.MAX_dB));\n    this.B = new_int(0 | (GainAnalysis.STEPS_per_dB * GainAnalysis.MAX_dB));\n\n}\n\nmodule.exports = ReplayGain;\n","//package mp3;\n\nfunction CalcNoiseResult() {\n    /**\n     * sum of quantization noise > masking\n     */\n    this.over_noise = 0.;\n    /**\n     * sum of all quantization noise\n     */\n    this.tot_noise = 0.;\n    /**\n     * max quantization noise\n     */\n    this.max_noise = 0.;\n    /**\n     * number of quantization noise > masking\n     */\n    this.over_count = 0;\n    /**\n     * SSD-like cost of distorted bands\n     */\n    this.over_SSD = 0;\n    this.bits = 0;\n}\n\nmodule.exports = CalcNoiseResult;\n","var HEADER_LENGTH = 44;\nvar MAX_AMPLITUDE = 0x7FFF;\n\nfunction encodeWav(audioBuffer, cb) {\n\tif (audioBuffer.sampleRate !== 44100) {\n\t\t// TODO: generalize encoder for different sample rates\n\t\tthrow new Error('Expecting 44100 Hz sample rate');\n\t}\n\n\tvar nChannels = audioBuffer.numberOfChannels;\n\n\tif (nChannels !== 1 && nChannels !== 2) {\n\t\tthrow new Error('Expecting mono or stereo audioBuffer');\n\t}\n\n\tvar bufferLength = audioBuffer.length;\n\n\t// Creating the array buffers (2 bytes per samples * 1 channel)\n\tvar arrayBuffer = new ArrayBuffer(HEADER_LENGTH + 2 * bufferLength * nChannels);\n\n\t// Creatiing views on the array buffer\n\tvar int16 = new Int16Array(arrayBuffer);\n\tvar uint8 = new Uint8Array(arrayBuffer);\n\n\n\t// WAV header\n\t// http://soundfile.sapp.org/doc/WaveFormat/\n\t// 52 49 46 46     R I F F\n\t// 24 08 00 00     chunk size\n\t// 57 41 56 45     W A V E\n\n\t// 66 6d 74 20     F T M █\n\t// 10 00 00 00     subchunk size\n\t// 01 00           audio format\n\t// 02 00           number of channels\n\t// 22 56 00 00     sample rate\n\t// 88 58 01 00     byte rate\n\t// 04 00           block align\n\t// 10 00           bit per sample\n\t// 64 61 74 61     d a t a\n\t// 00 08 00 00     subchunk2 size\n\n\tvar l2 = bufferLength * nChannels * 2; // subchunk2 = numSamples * numChannels * BitsPerSample / 8\n\tvar l1 = l2 + 36; // chunkSize = subchunk + 36\n\tvar br = 44100 * nChannels / 4 // byte rate = SampleRate * NumChannels * BitsPerSample / 8\n\n\tuint8.set([\n\t\t// \"RIFF\" chunk descriptor\n\t\t0x52, 0x49, 0x46, 0x46, // R I F F\n\t\tl1 & 255, (l1 >> 8) & 255, (l1 >> 16) & 255, (l1 >> 24) & 255, // chunk size\n\t\t0x57, 0x41, 0x56, 0x45, // W A V E\n\n\t\t// \"ftm\" sub-chunk\n\t\t0x66, 0x6D, 0x74, 0x20, // F T M █\n\t\t0x10, 0x00, 0x00, 0x00, // sub chunk size = 16\n\t\t0x01, 0x00, // audio format = 1 (PCM, linear quantization)\n\t\tnChannels, 0x00, // number of channels\n\t\t0x44, 0xAC, 0x00, 0x00, // sample rate = 44100\n\t\tbr & 255, (br >> 8) & 255, (br >> 16) & 255, (br >> 24) & 255, // byte rate\n\t\t0x04, 0x00, // block align = 4\n\t\t0x10, 0x00, // bit per sample = 16\n\n\t\t// data sub-chuk\n\t\t0x64, 0x61, 0x74, 0x61, // d a t a\n\t\tl2 & 255, (l2 >> 8) & 255, (l2 >> 16) & 255, (l2 >> 24) & 255 // sub chunk 2 size\n\t]);\n\n\t// Append sample data\n\tvar buffers = [];\n\n\tfor (var channel = 0; channel < nChannels; channel++) {\n\t\tbuffers.push(audioBuffer.getChannelData(channel));\n\t}\n\n\tfor (var i = 0, index = HEADER_LENGTH / 2; i < bufferLength; i++) {\n\t\tfor (var channel = 0; channel < nChannels; channel++) {\n\t\t\tvar sample = buffers[channel][i];\n\n\t\t\t// clamp and convert to 16bit number\n\t\t\tsample = Math.min(1, Math.max(-1, sample));\n\t\t\tsample = Math.round(sample * MAX_AMPLITUDE);\n\n\t\t\tint16[index++] = sample;\n\t\t}\n\t}\n\n\tvar blob = new Blob([uint8], { type: 'audio/x-wav' })\n\n\tsetTimeout(function () {\n\t\treturn cb(blob);\n\t}, 30);\n}\n\nmodule.exports = encodeWav;\n","var global = require('../internals/global');\nvar trim = require('../internals/string-trim').trim;\nvar whitespaces = require('../internals/whitespaces');\n\nvar $parseFloat = global.parseFloat;\nvar FORCED = 1 / $parseFloat(whitespaces + '-0') !== -Infinity;\n\n// `parseFloat` method\n// https://tc39.github.io/ecma262/#sec-parsefloat-string\nmodule.exports = FORCED ? function parseFloat(string) {\n  var trimmedString = trim(String(string));\n  var result = $parseFloat(trimmedString);\n  return result === 0 && trimmedString.charAt(0) == '-' ? -0 : result;\n} : $parseFloat;\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\n\nfunction FFT() {\n\n    var window = new_float(Encoder.BLKSIZE);\n    var window_s = new_float(Encoder.BLKSIZE_s / 2);\n\n    var costab = [\n        9.238795325112867e-01, 3.826834323650898e-01,\n        9.951847266721969e-01, 9.801714032956060e-02,\n        9.996988186962042e-01, 2.454122852291229e-02,\n        9.999811752826011e-01, 6.135884649154475e-03\n    ];\n\n    function fht(fz, fzPos, n) {\n        var tri = 0;\n        var k4;\n        var fi;\n        var gi;\n\n        n <<= 1;\n        /* to get BLKSIZE, because of 3DNow! ASM routine */\n        var fn = fzPos + n;\n        k4 = 4;\n        do {\n            var s1, c1;\n            var i, k1, k2, k3, kx;\n            kx = k4 >> 1;\n            k1 = k4;\n            k2 = k4 << 1;\n            k3 = k2 + k1;\n            k4 = k2 << 1;\n            fi = fzPos;\n            gi = fi + kx;\n            do {\n                var f0, f1, f2, f3;\n                f1 = fz[fi + 0] - fz[fi + k1];\n                f0 = fz[fi + 0] + fz[fi + k1];\n                f3 = fz[fi + k2] - fz[fi + k3];\n                f2 = fz[fi + k2] + fz[fi + k3];\n                fz[fi + k2] = f0 - f2;\n                fz[fi + 0] = f0 + f2;\n                fz[fi + k3] = f1 - f3;\n                fz[fi + k1] = f1 + f3;\n                f1 = fz[gi + 0] - fz[gi + k1];\n                f0 = fz[gi + 0] + fz[gi + k1];\n                f3 = (Util.SQRT2 * fz[gi + k3]);\n                f2 = (Util.SQRT2 * fz[gi + k2]);\n                fz[gi + k2] = f0 - f2;\n                fz[gi + 0] = f0 + f2;\n                fz[gi + k3] = f1 - f3;\n                fz[gi + k1] = f1 + f3;\n                gi += k4;\n                fi += k4;\n            } while (fi < fn);\n            c1 = costab[tri + 0];\n            s1 = costab[tri + 1];\n            for (i = 1; i < kx; i++) {\n                var c2, s2;\n                c2 = 1 - (2 * s1) * s1;\n                s2 = (2 * s1) * c1;\n                fi = fzPos + i;\n                gi = fzPos + k1 - i;\n                do {\n                    var a, b, g0, f0, f1, g1, f2, g2, f3, g3;\n                    b = s2 * fz[fi + k1] - c2 * fz[gi + k1];\n                    a = c2 * fz[fi + k1] + s2 * fz[gi + k1];\n                    f1 = fz[fi + 0] - a;\n                    f0 = fz[fi + 0] + a;\n                    g1 = fz[gi + 0] - b;\n                    g0 = fz[gi + 0] + b;\n                    b = s2 * fz[fi + k3] - c2 * fz[gi + k3];\n                    a = c2 * fz[fi + k3] + s2 * fz[gi + k3];\n                    f3 = fz[fi + k2] - a;\n                    f2 = fz[fi + k2] + a;\n                    g3 = fz[gi + k2] - b;\n                    g2 = fz[gi + k2] + b;\n                    b = s1 * f2 - c1 * g3;\n                    a = c1 * f2 + s1 * g3;\n                    fz[fi + k2] = f0 - a;\n                    fz[fi + 0] = f0 + a;\n                    fz[gi + k3] = g1 - b;\n                    fz[gi + k1] = g1 + b;\n                    b = c1 * g2 - s1 * f3;\n                    a = s1 * g2 + c1 * f3;\n                    fz[gi + k2] = g0 - a;\n                    fz[gi + 0] = g0 + a;\n                    fz[fi + k3] = f1 - b;\n                    fz[fi + k1] = f1 + b;\n                    gi += k4;\n                    fi += k4;\n                } while (fi < fn);\n                c2 = c1;\n                c1 = c2 * costab[tri + 0] - s1 * costab[tri + 1];\n                s1 = c2 * costab[tri + 1] + s1 * costab[tri + 0];\n            }\n            tri += 2;\n        } while (k4 < n);\n    }\n\n    var rv_tbl = [0x00, 0x80, 0x40,\n        0xc0, 0x20, 0xa0, 0x60, 0xe0, 0x10,\n        0x90, 0x50, 0xd0, 0x30, 0xb0, 0x70,\n        0xf0, 0x08, 0x88, 0x48, 0xc8, 0x28,\n        0xa8, 0x68, 0xe8, 0x18, 0x98, 0x58,\n        0xd8, 0x38, 0xb8, 0x78, 0xf8, 0x04,\n        0x84, 0x44, 0xc4, 0x24, 0xa4, 0x64,\n        0xe4, 0x14, 0x94, 0x54, 0xd4, 0x34,\n        0xb4, 0x74, 0xf4, 0x0c, 0x8c, 0x4c,\n        0xcc, 0x2c, 0xac, 0x6c, 0xec, 0x1c,\n        0x9c, 0x5c, 0xdc, 0x3c, 0xbc, 0x7c,\n        0xfc, 0x02, 0x82, 0x42, 0xc2, 0x22,\n        0xa2, 0x62, 0xe2, 0x12, 0x92, 0x52,\n        0xd2, 0x32, 0xb2, 0x72, 0xf2, 0x0a,\n        0x8a, 0x4a, 0xca, 0x2a, 0xaa, 0x6a,\n        0xea, 0x1a, 0x9a, 0x5a, 0xda, 0x3a,\n        0xba, 0x7a, 0xfa, 0x06, 0x86, 0x46,\n        0xc6, 0x26, 0xa6, 0x66, 0xe6, 0x16,\n        0x96, 0x56, 0xd6, 0x36, 0xb6, 0x76,\n        0xf6, 0x0e, 0x8e, 0x4e, 0xce, 0x2e,\n        0xae, 0x6e, 0xee, 0x1e, 0x9e, 0x5e,\n        0xde, 0x3e, 0xbe, 0x7e, 0xfe];\n\n    this.fft_short = function (gfc, x_real, chn, buffer, bufPos) {\n        for (var b = 0; b < 3; b++) {\n            var x = Encoder.BLKSIZE_s / 2;\n            var k = 0xffff & ((576 / 3) * (b + 1));\n            var j = Encoder.BLKSIZE_s / 8 - 1;\n            do {\n                var f0, f1, f2, f3, w;\n                var i = rv_tbl[j << 2] & 0xff;\n\n                f0 = window_s[i] * buffer[chn][bufPos + i + k];\n                w = window_s[0x7f - i] * buffer[chn][bufPos + i + k + 0x80];\n                f1 = f0 - w;\n                f0 = f0 + w;\n                f2 = window_s[i + 0x40] * buffer[chn][bufPos + i + k + 0x40];\n                w = window_s[0x3f - i] * buffer[chn][bufPos + i + k + 0xc0];\n                f3 = f2 - w;\n                f2 = f2 + w;\n\n                x -= 4;\n                x_real[b][x + 0] = f0 + f2;\n                x_real[b][x + 2] = f0 - f2;\n                x_real[b][x + 1] = f1 + f3;\n                x_real[b][x + 3] = f1 - f3;\n\n                f0 = window_s[i + 0x01] * buffer[chn][bufPos + i + k + 0x01];\n                w = window_s[0x7e - i] * buffer[chn][bufPos + i + k + 0x81];\n                f1 = f0 - w;\n                f0 = f0 + w;\n                f2 = window_s[i + 0x41] * buffer[chn][bufPos + i + k + 0x41];\n                w = window_s[0x3e - i] * buffer[chn][bufPos + i + k + 0xc1];\n                f3 = f2 - w;\n                f2 = f2 + w;\n\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 0] = f0 + f2;\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 2] = f0 - f2;\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 1] = f1 + f3;\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 3] = f1 - f3;\n            } while (--j >= 0);\n\n            fht(x_real[b], x, Encoder.BLKSIZE_s / 2);\n            /* BLKSIZE_s/2 because of 3DNow! ASM routine */\n            /* BLKSIZE/2 because of 3DNow! ASM routine */\n        }\n    }\n\n    this.fft_long = function (gfc, y, chn, buffer, bufPos) {\n        var jj = Encoder.BLKSIZE / 8 - 1;\n        var x = Encoder.BLKSIZE / 2;\n\n        do {\n            var f0, f1, f2, f3, w;\n            var i = rv_tbl[jj] & 0xff;\n            f0 = window[i] * buffer[chn][bufPos + i];\n            w = window[i + 0x200] * buffer[chn][bufPos + i + 0x200];\n            f1 = f0 - w;\n            f0 = f0 + w;\n            f2 = window[i + 0x100] * buffer[chn][bufPos + i + 0x100];\n            w = window[i + 0x300] * buffer[chn][bufPos + i + 0x300];\n            f3 = f2 - w;\n            f2 = f2 + w;\n\n            x -= 4;\n            y[x + 0] = f0 + f2;\n            y[x + 2] = f0 - f2;\n            y[x + 1] = f1 + f3;\n            y[x + 3] = f1 - f3;\n\n            f0 = window[i + 0x001] * buffer[chn][bufPos + i + 0x001];\n            w = window[i + 0x201] * buffer[chn][bufPos + i + 0x201];\n            f1 = f0 - w;\n            f0 = f0 + w;\n            f2 = window[i + 0x101] * buffer[chn][bufPos + i + 0x101];\n            w = window[i + 0x301] * buffer[chn][bufPos + i + 0x301];\n            f3 = f2 - w;\n            f2 = f2 + w;\n\n            y[x + Encoder.BLKSIZE / 2 + 0] = f0 + f2;\n            y[x + Encoder.BLKSIZE / 2 + 2] = f0 - f2;\n            y[x + Encoder.BLKSIZE / 2 + 1] = f1 + f3;\n            y[x + Encoder.BLKSIZE / 2 + 3] = f1 - f3;\n        } while (--jj >= 0);\n\n        fht(y, x, Encoder.BLKSIZE / 2);\n        /* BLKSIZE/2 because of 3DNow! ASM routine */\n    }\n\n    this.init_fft = function (gfc) {\n        /* The type of window used here will make no real difference, but */\n        /*\n         * in the interest of merging nspsytune stuff - switch to blackman\n         * window\n         */\n        for (var i = 0; i < Encoder.BLKSIZE; i++)\n            /* blackman window */\n            window[i] = (0.42 - 0.5 * Math.cos(2 * Math.PI * (i + .5)\n                / Encoder.BLKSIZE) + 0.08 * Math.cos(4 * Math.PI * (i + .5)\n                / Encoder.BLKSIZE));\n\n        for (var i = 0; i < Encoder.BLKSIZE_s / 2; i++)\n            window_s[i] = (0.5 * (1.0 - Math.cos(2.0 * Math.PI\n                * (i + 0.5) / Encoder.BLKSIZE_s)));\n\n    }\n\n}\n\nmodule.exports = FFT;\n","function Version() {\n\n    /**\n     * URL for the LAME website.\n     */\n    var LAME_URL = \"http://www.mp3dev.org/\";\n\n    /**\n     * Major version number.\n     */\n    var LAME_MAJOR_VERSION = 3;\n    /**\n     * Minor version number.\n     */\n    var LAME_MINOR_VERSION = 98;\n    /**\n     * Patch level.\n     */\n    var LAME_PATCH_VERSION = 4;\n\n    /**\n     * Major version number.\n     */\n    var PSY_MAJOR_VERSION = 0;\n    /**\n     * Minor version number.\n     */\n    var PSY_MINOR_VERSION = 93;\n\n    /**\n     * A string which describes the version of LAME.\n     *\n     * @return string which describes the version of LAME\n     */\n    this.getLameVersion = function () {\n        // primary to write screen reports\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\n    }\n\n    /**\n     * The short version of the LAME version string.\n     *\n     * @return short version of the LAME version string\n     */\n    this.getLameShortVersion = function () {\n        // Adding date and time to version string makes it harder for output\n        // validation\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\n    }\n\n    /**\n     * The shortest version of the LAME version string.\n     *\n     * @return shortest version of the LAME version string\n     */\n    this.getLameVeryShortVersion = function () {\n        // Adding date and time to version string makes it harder for output\n        return (\"LAME\" + LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \"r\");\n    }\n\n    /**\n     * String which describes the version of GPSYCHO\n     *\n     * @return string which describes the version of GPSYCHO\n     */\n    this.getPsyVersion = function () {\n        return (PSY_MAJOR_VERSION + \".\" + PSY_MINOR_VERSION);\n    }\n\n    /**\n     * String which is a URL for the LAME website.\n     *\n     * @return string which is a URL for the LAME website\n     */\n    this.getLameUrl = function () {\n        return LAME_URL;\n    }\n\n    /**\n     * Quite useless for a java version, however we are compatible ;-)\n     *\n     * @return \"32bits\"\n     */\n    this.getLameOsBitness = function () {\n        return \"32bits\";\n    }\n\n}\n\nmodule.exports = Version;\n","var MPEGMode = require('./MPEGMode.js');\n\nfunction LameGlobalFlags() {\n\n    this.class_id = 0;\n\n    /* input description */\n\n    /**\n     * number of samples. default=-1\n     */\n    this.num_samples = 0;\n    /**\n     * input number of channels. default=2\n     */\n    this.num_channels = 0;\n    /**\n     * input_samp_rate in Hz. default=44.1 kHz\n     */\n    this.in_samplerate = 0;\n    /**\n     * output_samp_rate. default: LAME picks best value at least not used for\n     * MP3 decoding: Remember 44.1 kHz MP3s and AC97\n     */\n    this.out_samplerate = 0;\n    /**\n     * scale input by this amount before encoding at least not used for MP3\n     * decoding\n     */\n    this.scale = 0.;\n    /**\n     * scale input of channel 0 (left) by this amount before encoding\n     */\n    this.scale_left = 0.;\n    /**\n     * scale input of channel 1 (right) by this amount before encoding\n     */\n    this.scale_right = 0.;\n\n    /* general control params */\n    /**\n     * collect data for a MP3 frame analyzer?\n     */\n    this.analysis = false;\n    /**\n     * add Xing VBR tag?\n     */\n    this.bWriteVbrTag = false;\n\n    /**\n     * use lame/mpglib to convert mp3 to wav\n     */\n    this.decode_only = false;\n    /**\n     * quality setting 0=best, 9=worst default=5\n     */\n    this.quality = 0;\n    /**\n     * see enum default = LAME picks best value\n     */\n    this.mode = MPEGMode.STEREO;\n    /**\n     * force M/S mode. requires mode=1\n     */\n    this.force_ms = false;\n    /**\n     * use free format? default=0\n     */\n    this.free_format = false;\n    /**\n     * find the RG value? default=0\n     */\n    this.findReplayGain = false;\n    /**\n     * decode on the fly? default=0\n     */\n    this.decode_on_the_fly = false;\n    /**\n     * 1 (default) writes ID3 tags, 0 not\n     */\n    this.write_id3tag_automatic = false;\n\n    /*\n     * set either brate>0 or compression_ratio>0, LAME will compute the value of\n     * the variable not set. Default is compression_ratio = 11.025\n     */\n    /**\n     * bitrate\n     */\n    this.brate = 0;\n    /**\n     * sizeof(wav file)/sizeof(mp3 file)\n     */\n    this.compression_ratio = 0.;\n\n    /* frame params */\n    /**\n     * mark as copyright. default=0\n     */\n    this.copyright = 0;\n    /**\n     * mark as original. default=1\n     */\n    this.original = 0;\n    /**\n     * the MP3 'private extension' bit. Meaningless\n     */\n    this.extension = 0;\n    /**\n     * Input PCM is emphased PCM (for instance from one of the rarely emphased\n     * CDs), it is STRONGLY not recommended to use this, because psycho does not\n     * take it into account, and last but not least many decoders don't care\n     * about these bits\n     */\n    this.emphasis = 0;\n    /**\n     * use 2 bytes per frame for a CRC checksum. default=0\n     */\n    this.error_protection = 0;\n    /**\n     * enforce ISO spec as much as possible\n     */\n    this.strict_ISO = false;\n\n    /**\n     * use bit reservoir?\n     */\n    this.disable_reservoir = false;\n\n    /* quantization/noise shaping */\n    this.quant_comp = 0;\n    this.quant_comp_short = 0;\n    this.experimentalY = false;\n    this.experimentalZ = 0;\n    this.exp_nspsytune = 0;\n\n    this.preset = 0;\n\n    /* VBR control */\n    this.VBR = null;\n    /**\n     * Range [0,...,1[\n     */\n    this.VBR_q_frac = 0.;\n    /**\n     * Range [0,...,9]\n     */\n    this.VBR_q = 0;\n    this.VBR_mean_bitrate_kbps = 0;\n    this.VBR_min_bitrate_kbps = 0;\n    this.VBR_max_bitrate_kbps = 0;\n    /**\n     * strictly enforce VBR_min_bitrate normaly, it will be violated for analog\n     * silence\n     */\n    this.VBR_hard_min = 0;\n\n    /* resampling and filtering */\n\n    /**\n     * freq in Hz. 0=lame choses. -1=no filter\n     */\n    this.lowpassfreq = 0;\n    /**\n     * freq in Hz. 0=lame choses. -1=no filter\n     */\n    this.highpassfreq = 0;\n    /**\n     * freq width of filter, in Hz (default=15%)\n     */\n    this.lowpasswidth = 0;\n    /**\n     * freq width of filter, in Hz (default=15%)\n     */\n    this.highpasswidth = 0;\n\n    /*\n     * psycho acoustics and other arguments which you should not change unless\n     * you know what you are doing\n     */\n\n    this.maskingadjust = 0.;\n    this.maskingadjust_short = 0.;\n    /**\n     * only use ATH\n     */\n    this.ATHonly = false;\n    /**\n     * only use ATH for short blocks\n     */\n    this.ATHshort = false;\n    /**\n     * disable ATH\n     */\n    this.noATH = false;\n    /**\n     * select ATH formula\n     */\n    this.ATHtype = 0;\n    /**\n     * change ATH formula 4 shape\n     */\n    this.ATHcurve = 0.;\n    /**\n     * lower ATH by this many db\n     */\n    this.ATHlower = 0.;\n    /**\n     * select ATH auto-adjust scheme\n     */\n    this.athaa_type = 0;\n    /**\n     * select ATH auto-adjust loudness calc\n     */\n    this.athaa_loudapprox = 0;\n    /**\n     * dB, tune active region of auto-level\n     */\n    this.athaa_sensitivity = 0.;\n    this.short_blocks = null;\n    /**\n     * use temporal masking effect\n     */\n    this.useTemporal = false;\n    this.interChRatio = 0.;\n    /**\n     * Naoki's adjustment of Mid/Side maskings\n     */\n    this.msfix = 0.;\n\n    /**\n     * 0 off, 1 on\n     */\n    this.tune = false;\n    /**\n     * used to pass values for debugging and stuff\n     */\n    this.tune_value_a = 0.;\n\n    /************************************************************************/\n    /* internal variables, do not set... */\n    /* provided because they may be of use to calling application */\n    /************************************************************************/\n\n    /**\n     * 0=MPEG-2/2.5 1=MPEG-1\n     */\n    this.version = 0;\n    this.encoder_delay = 0;\n    /**\n     * number of samples of padding appended to input\n     */\n    this.encoder_padding = 0;\n    this.framesize = 0;\n    /**\n     * number of frames encoded\n     */\n    this.frameNum = 0;\n    /**\n     * is this struct owned by calling program or lame?\n     */\n    this.lame_allocated_gfp = 0;\n    /**************************************************************************/\n    /* more internal variables are stored in this structure: */\n    /**************************************************************************/\n    this.internal_flags = null;\n}\n\nmodule.exports = LameGlobalFlags;\n","var Encoder = require('./Encoder.js');\n\nvar L3Side = {};\n\n\n\t/**\n\t * max scalefactor band, max(SBMAX_l, SBMAX_s*3, (SBMAX_s-3)*3+8)\n\t */\nL3Side.SFBMAX = (Encoder.SBMAX_s * 3);\n\nmodule.exports = L3Side;\n","'use strict';\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.array.iterator');\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar redefine = require('../internals/redefine');\nvar redefineAll = require('../internals/redefine-all');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar InternalStateModule = require('../internals/internal-state');\nvar anInstance = require('../internals/an-instance');\nvar hasOwn = require('../internals/has');\nvar bind = require('../internals/function-bind-context');\nvar classof = require('../internals/classof');\nvar anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $fetch = getBuiltIn('fetch');\nvar Headers = getBuiltIn('Headers');\nvar ITERATOR = wellKnownSymbol('iterator');\nvar URL_SEARCH_PARAMS = 'URLSearchParams';\nvar URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalParamsState = InternalStateModule.getterFor(URL_SEARCH_PARAMS);\nvar getInternalIteratorState = InternalStateModule.getterFor(URL_SEARCH_PARAMS_ITERATOR);\n\nvar plus = /\\+/g;\nvar sequences = Array(4);\n\nvar percentSequence = function (bytes) {\n  return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp('((?:%[\\\\da-f]{2}){' + bytes + '})', 'gi'));\n};\n\nvar percentDecode = function (sequence) {\n  try {\n    return decodeURIComponent(sequence);\n  } catch (error) {\n    return sequence;\n  }\n};\n\nvar deserialize = function (it) {\n  var result = it.replace(plus, ' ');\n  var bytes = 4;\n  try {\n    return decodeURIComponent(result);\n  } catch (error) {\n    while (bytes) {\n      result = result.replace(percentSequence(bytes--), percentDecode);\n    }\n    return result;\n  }\n};\n\nvar find = /[!'()~]|%20/g;\n\nvar replace = {\n  '!': '%21',\n  \"'\": '%27',\n  '(': '%28',\n  ')': '%29',\n  '~': '%7E',\n  '%20': '+'\n};\n\nvar replacer = function (match) {\n  return replace[match];\n};\n\nvar serialize = function (it) {\n  return encodeURIComponent(it).replace(find, replacer);\n};\n\nvar parseSearchParams = function (result, query) {\n  if (query) {\n    var attributes = query.split('&');\n    var index = 0;\n    var attribute, entry;\n    while (index < attributes.length) {\n      attribute = attributes[index++];\n      if (attribute.length) {\n        entry = attribute.split('=');\n        result.push({\n          key: deserialize(entry.shift()),\n          value: deserialize(entry.join('='))\n        });\n      }\n    }\n  }\n};\n\nvar updateSearchParams = function (query) {\n  this.entries.length = 0;\n  parseSearchParams(this.entries, query);\n};\n\nvar validateArgumentsLength = function (passed, required) {\n  if (passed < required) throw TypeError('Not enough arguments');\n};\n\nvar URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {\n  setInternalState(this, {\n    type: URL_SEARCH_PARAMS_ITERATOR,\n    iterator: getIterator(getInternalParamsState(params).entries),\n    kind: kind\n  });\n}, 'Iterator', function next() {\n  var state = getInternalIteratorState(this);\n  var kind = state.kind;\n  var step = state.iterator.next();\n  var entry = step.value;\n  if (!step.done) {\n    step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];\n  } return step;\n});\n\n// `URLSearchParams` constructor\n// https://url.spec.whatwg.org/#interface-urlsearchparams\nvar URLSearchParamsConstructor = function URLSearchParams(/* init */) {\n  anInstance(this, URLSearchParamsConstructor, URL_SEARCH_PARAMS);\n  var init = arguments.length > 0 ? arguments[0] : undefined;\n  var that = this;\n  var entries = [];\n  var iteratorMethod, iterator, next, step, entryIterator, entryNext, first, second, key;\n\n  setInternalState(that, {\n    type: URL_SEARCH_PARAMS,\n    entries: entries,\n    updateURL: function () { /* empty */ },\n    updateSearchParams: updateSearchParams\n  });\n\n  if (init !== undefined) {\n    if (isObject(init)) {\n      iteratorMethod = getIteratorMethod(init);\n      if (typeof iteratorMethod === 'function') {\n        iterator = iteratorMethod.call(init);\n        next = iterator.next;\n        while (!(step = next.call(iterator)).done) {\n          entryIterator = getIterator(anObject(step.value));\n          entryNext = entryIterator.next;\n          if (\n            (first = entryNext.call(entryIterator)).done ||\n            (second = entryNext.call(entryIterator)).done ||\n            !entryNext.call(entryIterator).done\n          ) throw TypeError('Expected sequence with length 2');\n          entries.push({ key: first.value + '', value: second.value + '' });\n        }\n      } else for (key in init) if (hasOwn(init, key)) entries.push({ key: key, value: init[key] + '' });\n    } else {\n      parseSearchParams(entries, typeof init === 'string' ? init.charAt(0) === '?' ? init.slice(1) : init : init + '');\n    }\n  }\n};\n\nvar URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;\n\nredefineAll(URLSearchParamsPrototype, {\n  // `URLSearchParams.prototype.appent` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-append\n  append: function append(name, value) {\n    validateArgumentsLength(arguments.length, 2);\n    var state = getInternalParamsState(this);\n    state.entries.push({ key: name + '', value: value + '' });\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.delete` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete\n  'delete': function (name) {\n    validateArgumentsLength(arguments.length, 1);\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    var key = name + '';\n    var index = 0;\n    while (index < entries.length) {\n      if (entries[index].key === key) entries.splice(index, 1);\n      else index++;\n    }\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.get` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-get\n  get: function get(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var index = 0;\n    for (; index < entries.length; index++) {\n      if (entries[index].key === key) return entries[index].value;\n    }\n    return null;\n  },\n  // `URLSearchParams.prototype.getAll` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall\n  getAll: function getAll(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var result = [];\n    var index = 0;\n    for (; index < entries.length; index++) {\n      if (entries[index].key === key) result.push(entries[index].value);\n    }\n    return result;\n  },\n  // `URLSearchParams.prototype.has` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-has\n  has: function has(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var index = 0;\n    while (index < entries.length) {\n      if (entries[index++].key === key) return true;\n    }\n    return false;\n  },\n  // `URLSearchParams.prototype.set` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-set\n  set: function set(name, value) {\n    validateArgumentsLength(arguments.length, 1);\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    var found = false;\n    var key = name + '';\n    var val = value + '';\n    var index = 0;\n    var entry;\n    for (; index < entries.length; index++) {\n      entry = entries[index];\n      if (entry.key === key) {\n        if (found) entries.splice(index--, 1);\n        else {\n          found = true;\n          entry.value = val;\n        }\n      }\n    }\n    if (!found) entries.push({ key: key, value: val });\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.sort` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-sort\n  sort: function sort() {\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    // Array#sort is not stable in some engines\n    var slice = entries.slice();\n    var entry, entriesIndex, sliceIndex;\n    entries.length = 0;\n    for (sliceIndex = 0; sliceIndex < slice.length; sliceIndex++) {\n      entry = slice[sliceIndex];\n      for (entriesIndex = 0; entriesIndex < sliceIndex; entriesIndex++) {\n        if (entries[entriesIndex].key > entry.key) {\n          entries.splice(entriesIndex, 0, entry);\n          break;\n        }\n      }\n      if (entriesIndex === sliceIndex) entries.push(entry);\n    }\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.forEach` method\n  forEach: function forEach(callback /* , thisArg */) {\n    var entries = getInternalParamsState(this).entries;\n    var boundFunction = bind(callback, arguments.length > 1 ? arguments[1] : undefined, 3);\n    var index = 0;\n    var entry;\n    while (index < entries.length) {\n      entry = entries[index++];\n      boundFunction(entry.value, entry.key, this);\n    }\n  },\n  // `URLSearchParams.prototype.keys` method\n  keys: function keys() {\n    return new URLSearchParamsIterator(this, 'keys');\n  },\n  // `URLSearchParams.prototype.values` method\n  values: function values() {\n    return new URLSearchParamsIterator(this, 'values');\n  },\n  // `URLSearchParams.prototype.entries` method\n  entries: function entries() {\n    return new URLSearchParamsIterator(this, 'entries');\n  }\n}, { enumerable: true });\n\n// `URLSearchParams.prototype[@@iterator]` method\nredefine(URLSearchParamsPrototype, ITERATOR, URLSearchParamsPrototype.entries);\n\n// `URLSearchParams.prototype.toString` method\n// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\nredefine(URLSearchParamsPrototype, 'toString', function toString() {\n  var entries = getInternalParamsState(this).entries;\n  var result = [];\n  var index = 0;\n  var entry;\n  while (index < entries.length) {\n    entry = entries[index++];\n    result.push(serialize(entry.key) + '=' + serialize(entry.value));\n  } return result.join('&');\n}, { enumerable: true });\n\nsetToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);\n\n$({ global: true, forced: !USE_NATIVE_URL }, {\n  URLSearchParams: URLSearchParamsConstructor\n});\n\n// Wrap `fetch` for correct work with polyfilled `URLSearchParams`\n// https://github.com/zloirock/core-js/issues/674\nif (!USE_NATIVE_URL && typeof $fetch == 'function' && typeof Headers == 'function') {\n  $({ global: true, enumerable: true, forced: true }, {\n    fetch: function fetch(input /* , init */) {\n      var args = [input];\n      var init, body, headers;\n      if (arguments.length > 1) {\n        init = arguments[1];\n        if (isObject(init)) {\n          body = init.body;\n          if (classof(body) === URL_SEARCH_PARAMS) {\n            headers = init.headers ? new Headers(init.headers) : new Headers();\n            if (!headers.has('content-type')) {\n              headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n            }\n            init = create(init, {\n              body: createPropertyDescriptor(0, String(body)),\n              headers: createPropertyDescriptor(0, headers)\n            });\n          }\n        }\n        args.push(init);\n      } return $fetch.apply(this, args);\n    }\n  });\n}\n\nmodule.exports = {\n  URLSearchParams: URLSearchParamsConstructor,\n  getState: getInternalParamsState\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","var anObject = require('../internals/an-object');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nmodule.exports = function (it) {\n  var iteratorMethod = getIteratorMethod(it);\n  if (typeof iteratorMethod != 'function') {\n    throw TypeError(String(it) + ' is not iterable');\n  } return anObject(iteratorMethod.call(it));\n};\n","var Encoder = require('./Encoder.js');\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nfunction III_psy_xmin() {\n    this.l = new_float(Encoder.SBMAX_l);\n    this.s = new_float_n([Encoder.SBMAX_s, 3]);\n\n    var self = this;\n    this.assign = function (iii_psy_xmin) {\n        System.arraycopy(iii_psy_xmin.l, 0, self.l, 0, Encoder.SBMAX_l);\n        for (var i = 0; i < Encoder.SBMAX_s; i++) {\n            for (var j = 0; j < 3; j++) {\n                self.s[i][j] = iii_psy_xmin.s[i][j];\n            }\n        }\n    }\n}\n\nmodule.exports = III_psy_xmin;\n","function VBRQuantize() {\n    var qupvt;\n    var tak;\n\n    this.setModules = function (_qupvt, _tk) {\n        qupvt = _qupvt;\n        tak = _tk;\n    }\n    //TODO\n\n}\n\nmodule.exports = VBRQuantize;\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof-raw');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar create = require('../internals/object-create');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\n\n// Opera ~12 has broken Object#toString\nvar BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;\n\n// `ToNumber` abstract operation\n// https://tc39.github.io/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = it.charCodeAt(0);\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = it.slice(2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = digits.charCodeAt(index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.github.io/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var dummy = this;\n    return dummy instanceof NumberWrapper\n      // check on 1..constructor(foo) case\n      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)\n        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\n\n/**\n * ATH related stuff, if something new ATH related has to be added, please plug\n * it here into the ATH.\n */\nfunction ATH() {\n    /**\n     * Method for the auto adjustment.\n     */\n    this.useAdjust = 0;\n    /**\n     * factor for tuning the (sample power) point below which adaptive threshold\n     * of hearing adjustment occurs\n     */\n    this.aaSensitivityP = 0.;\n    /**\n     * Lowering based on peak volume, 1 = no lowering.\n     */\n    this.adjust = 0.;\n    /**\n     * Limit for dynamic ATH adjust.\n     */\n    this.adjustLimit = 0.;\n    /**\n     * Determined to lower x dB each second.\n     */\n    this.decay = 0.;\n    /**\n     * Lowest ATH value.\n     */\n    this.floor = 0.;\n    /**\n     * ATH for sfbs in long blocks.\n     */\n    this.l = new_float(Encoder.SBMAX_l);\n    /**\n     * ATH for sfbs in short blocks.\n     */\n    this.s = new_float(Encoder.SBMAX_s);\n    /**\n     * ATH for partitioned sfb21 in long blocks.\n     */\n    this.psfb21 = new_float(Encoder.PSFB21);\n    /**\n     * ATH for partitioned sfb12 in short blocks.\n     */\n    this.psfb12 = new_float(Encoder.PSFB12);\n    /**\n     * ATH for long block convolution bands.\n     */\n    this.cb_l = new_float(Encoder.CBANDS);\n    /**\n     * ATH for short block convolution bands.\n     */\n    this.cb_s = new_float(Encoder.CBANDS);\n    /**\n     * Equal loudness weights (based on ATH).\n     */\n    this.eql_w = new_float(Encoder.BLKSIZE / 2);\n}\n\nmodule.exports = ATH;\n","var $ = require('../internals/export');\nvar parseFloatImplementation = require('../internals/number-parse-float');\n\n// `parseFloat` method\n// https://tc39.github.io/ecma262/#sec-parsefloat-string\n$({ global: true, forced: parseFloat != parseFloatImplementation }, {\n  parseFloat: parseFloatImplementation\n});\n","var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n","/*\n *      quantize_pvt source file\n *\n *      Copyright (c) 1999-2002 Takehiro Tominaga\n *      Copyright (c) 2000-2002 Robert Hegemann\n *      Copyright (c) 2001 Naoki Shibata\n *      Copyright (c) 2002-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: QuantizePVT.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\nvar ScaleFac = require('./ScaleFac.js');\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\nvar MeanBits = require('./MeanBits.js');\nvar LameInternalFlags = require('./LameInternalFlags.js');\n\nQuantizePVT.Q_MAX = (256 + 1);\nQuantizePVT.Q_MAX2 = 116;\nQuantizePVT.LARGE_BITS = 100000;\nQuantizePVT.IXMAX_VAL = 8206;\n\nfunction QuantizePVT() {\n\n    var tak = null;\n    var rv = null;\n    var psy = null;\n\n    this.setModules = function (_tk, _rv, _psy) {\n        tak = _tk;\n        rv = _rv;\n        psy = _psy;\n    };\n\n    function POW20(x) {\n        assert(0 <= (x + QuantizePVT.Q_MAX2) && x < QuantizePVT.Q_MAX);\n        return pow20[x + QuantizePVT.Q_MAX2];\n    }\n\n    this.IPOW20 = function (x) {\n        assert(0 <= x && x < QuantizePVT.Q_MAX);\n        return ipow20[x];\n    }\n\n    /**\n     * smallest such that 1.0+DBL_EPSILON != 1.0\n     */\n    var DBL_EPSILON = 2.2204460492503131e-016;\n\n    /**\n     * ix always <= 8191+15. see count_bits()\n     */\n    var IXMAX_VAL = QuantizePVT.IXMAX_VAL;\n\n    var PRECALC_SIZE = (IXMAX_VAL + 2);\n\n    var Q_MAX = QuantizePVT.Q_MAX;\n\n\n    /**\n     * <CODE>\n     * minimum possible number of\n     * -cod_info.global_gain + ((scalefac[] + (cod_info.preflag ? pretab[sfb] : 0))\n     * << (cod_info.scalefac_scale + 1)) + cod_info.subblock_gain[cod_info.window[sfb]] * 8;\n     *\n     * for long block, 0+((15+3)<<2) = 18*4 = 72\n     * for short block, 0+(15<<2)+7*8 = 15*4+56 = 116\n     * </CODE>\n     */\n    var Q_MAX2 = QuantizePVT.Q_MAX2;\n\n    var LARGE_BITS = QuantizePVT.LARGE_BITS;\n\n\n    /**\n     * Assuming dynamic range=96dB, this value should be 92\n     */\n    var NSATHSCALE = 100;\n\n    /**\n     * The following table is used to implement the scalefactor partitioning for\n     * MPEG2 as described in section 2.4.3.2 of the IS. The indexing corresponds\n     * to the way the tables are presented in the IS:\n     *\n     * [table_number][row_in_table][column of nr_of_sfb]\n     */\n    this.nr_of_sfb_block = [\n        [[6, 5, 5, 5], [9, 9, 9, 9], [6, 9, 9, 9]],\n        [[6, 5, 7, 3], [9, 9, 12, 6], [6, 9, 12, 6]],\n        [[11, 10, 0, 0], [18, 18, 0, 0], [15, 18, 0, 0]],\n        [[7, 7, 7, 0], [12, 12, 12, 0], [6, 15, 12, 0]],\n        [[6, 6, 6, 3], [12, 9, 9, 6], [6, 12, 9, 6]],\n        [[8, 8, 5, 0], [15, 12, 9, 0], [6, 18, 9, 0]]];\n\n    /**\n     * Table B.6: layer3 preemphasis\n     */\n    var pretab = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n        2, 2, 3, 3, 3, 2, 0];\n    this.pretab = pretab;\n\n    /**\n     * Here are MPEG1 Table B.8 and MPEG2 Table B.1 -- Layer III scalefactor\n     * bands. <BR>\n     * Index into this using a method such as:<BR>\n     * idx = fr_ps.header.sampling_frequency + (fr_ps.header.version * 3)\n     */\n    this.sfBandIndex = [\n        // Table B.2.b: 22.05 kHz\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0, 4, 8, 12, 18, 24, 32, 42, 56, 74, 100, 132, 174, 192]\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb21 pseudo sub bands\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb12 pseudo sub bands\n        ),\n        /* Table B.2.c: 24 kHz */ /* docs: 332. mpg123(broken): 330 */\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 114, 136, 162, 194, 232, 278, 332, 394, 464,\n                540, 576],\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 136, 180, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.2.a: 16 kHz */\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.b: 44.1 kHz */\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90, 110, 134, 162, 196, 238, 288, 342, 418,\n                576],\n            [0, 4, 8, 12, 16, 22, 30, 40, 52, 66, 84, 106, 136, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.c: 48 kHz */\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72, 88, 106, 128, 156, 190, 230, 276, 330, 384,\n                576],\n            [0, 4, 8, 12, 16, 22, 28, 38, 50, 64, 80, 100, 126, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.a: 32 kHz */\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 54, 66, 82, 102, 126, 156, 194, 240, 296, 364, 448, 550,\n                576],\n            [0, 4, 8, 12, 16, 22, 30, 42, 58, 78, 104, 138, 180, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 11.025 kHz */\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\n                402 / 3, 522 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 12 kHz */\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\n                402 / 3, 522 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 8 kHz */\n        new ScaleFac([0, 12, 24, 36, 48, 60, 72, 88, 108, 132, 160, 192, 232, 280, 336, 400, 476, 566, 568, 570,\n                572, 574, 576],\n            [0 / 3, 24 / 3, 48 / 3, 72 / 3, 108 / 3, 156 / 3, 216 / 3, 288 / 3, 372 / 3, 480 / 3, 486 / 3,\n                492 / 3, 498 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        )\n    ];\n\n    var pow20 = new_float(Q_MAX + Q_MAX2 + 1);\n    var ipow20 = new_float(Q_MAX);\n    var pow43 = new_float(PRECALC_SIZE);\n\n    var adj43 = new_float(PRECALC_SIZE);\n    this.adj43 = adj43;\n\n    /**\n     * <PRE>\n     * compute the ATH for each scalefactor band cd range: 0..96db\n     *\n     * Input: 3.3kHz signal 32767 amplitude (3.3kHz is where ATH is smallest =\n     * -5db) longblocks: sfb=12 en0/bw=-11db max_en0 = 1.3db shortblocks: sfb=5\n     * -9db 0db\n     *\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) longblocks: amp=1\n     * sfb=12 en0/bw=-103 db max_en0 = -92db amp=32767 sfb=12 -12 db -1.4db\n     *\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) shortblocks: amp=1\n     * sfb=5 en0/bw= -99 -86 amp=32767 sfb=5 -9 db 4db\n     *\n     *\n     * MAX energy of largest wave at 3.3kHz = 1db AVE energy of largest wave at\n     * 3.3kHz = -11db Let's take AVE: -11db = maximum signal in sfb=12. Dynamic\n     * range of CD: 96db. Therefor energy of smallest audible wave in sfb=12 =\n     * -11 - 96 = -107db = ATH at 3.3kHz.\n     *\n     * ATH formula for this wave: -5db. To adjust to LAME scaling, we need ATH =\n     * ATH_formula - 103 (db) ATH = ATH * 2.5e-10 (ener)\n     * </PRE>\n     */\n    function ATHmdct(gfp, f) {\n        var ath = psy.ATHformula(f, gfp);\n\n        ath -= NSATHSCALE;\n\n        /* modify the MDCT scaling for the ATH and convert to energy */\n        ath = Math.pow(10.0, ath / 10.0 + gfp.ATHlower);\n        return ath;\n    }\n\n    function compute_ath(gfp) {\n        var ATH_l = gfp.internal_flags.ATH.l;\n        var ATH_psfb21 = gfp.internal_flags.ATH.psfb21;\n        var ATH_s = gfp.internal_flags.ATH.s;\n        var ATH_psfb12 = gfp.internal_flags.ATH.psfb12;\n        var gfc = gfp.internal_flags;\n        var samp_freq = gfp.out_samplerate;\n\n        for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\n            var start = gfc.scalefac_band.l[sfb];\n            var end = gfc.scalefac_band.l[sfb + 1];\n            ATH_l[sfb] = Float.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 576);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_l[sfb] = Math.min(ATH_l[sfb], ATH_f);\n            }\n        }\n\n        for (var sfb = 0; sfb < Encoder.PSFB21; sfb++) {\n            var start = gfc.scalefac_band.psfb21[sfb];\n            var end = gfc.scalefac_band.psfb21[sfb + 1];\n            ATH_psfb21[sfb] = Float.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 576);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_psfb21[sfb] = Math.min(ATH_psfb21[sfb], ATH_f);\n            }\n        }\n\n        for (var sfb = 0; sfb < Encoder.SBMAX_s; sfb++) {\n            var start = gfc.scalefac_band.s[sfb];\n            var end = gfc.scalefac_band.s[sfb + 1];\n            ATH_s[sfb] = Float.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 192);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_s[sfb] = Math.min(ATH_s[sfb], ATH_f);\n            }\n            ATH_s[sfb] *= (gfc.scalefac_band.s[sfb + 1] - gfc.scalefac_band.s[sfb]);\n        }\n\n        for (var sfb = 0; sfb < Encoder.PSFB12; sfb++) {\n            var start = gfc.scalefac_band.psfb12[sfb];\n            var end = gfc.scalefac_band.psfb12[sfb + 1];\n            ATH_psfb12[sfb] = Float.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 192);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_psfb12[sfb] = Math.min(ATH_psfb12[sfb], ATH_f);\n            }\n            /* not sure about the following */\n            ATH_psfb12[sfb] *= (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12]);\n        }\n\n        /*\n         * no-ATH mode: reduce ATH to -200 dB\n         */\n        if (gfp.noATH) {\n            for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\n                ATH_l[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder.PSFB21; sfb++) {\n                ATH_psfb21[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder.SBMAX_s; sfb++) {\n                ATH_s[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder.PSFB12; sfb++) {\n                ATH_psfb12[sfb] = 1E-20;\n            }\n        }\n\n        /*\n         * work in progress, don't rely on it too much\n         */\n        gfc.ATH.floor = 10. * Math.log10(ATHmdct(gfp, -1.));\n    }\n\n    /**\n     * initialization for iteration_loop\n     */\n    this.iteration_init = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n        var i;\n\n        if (gfc.iteration_init_init == 0) {\n            gfc.iteration_init_init = 1;\n\n            l3_side.main_data_begin = 0;\n            compute_ath(gfp);\n\n            pow43[0] = 0.0;\n            for (i = 1; i < PRECALC_SIZE; i++)\n                pow43[i] = Math.pow(i, 4.0 / 3.0);\n\n            for (i = 0; i < PRECALC_SIZE - 1; i++)\n                adj43[i] = ((i + 1) - Math.pow(\n                    0.5 * (pow43[i] + pow43[i + 1]), 0.75));\n            adj43[i] = 0.5;\n\n            for (i = 0; i < Q_MAX; i++)\n                ipow20[i] = Math.pow(2.0, (i - 210) * -0.1875);\n            for (i = 0; i <= Q_MAX + Q_MAX2; i++)\n                pow20[i] = Math.pow(2.0, (i - 210 - Q_MAX2) * 0.25);\n\n            tak.huffman_init(gfc);\n\n            {\n                var bass, alto, treble, sfb21;\n\n                i = (gfp.exp_nspsytune >> 2) & 63;\n                if (i >= 32)\n                    i -= 64;\n                bass = Math.pow(10, i / 4.0 / 10.0);\n\n                i = (gfp.exp_nspsytune >> 8) & 63;\n                if (i >= 32)\n                    i -= 64;\n                alto = Math.pow(10, i / 4.0 / 10.0);\n\n                i = (gfp.exp_nspsytune >> 14) & 63;\n                if (i >= 32)\n                    i -= 64;\n                treble = Math.pow(10, i / 4.0 / 10.0);\n\n                /*\n                 * to be compatible with Naoki's original code, the next 6 bits\n                 * define only the amount of changing treble for sfb21\n                 */\n                i = (gfp.exp_nspsytune >> 20) & 63;\n                if (i >= 32)\n                    i -= 64;\n                sfb21 = treble * Math.pow(10, i / 4.0 / 10.0);\n                for (i = 0; i < Encoder.SBMAX_l; i++) {\n                    var f;\n                    if (i <= 6)\n                        f = bass;\n                    else if (i <= 13)\n                        f = alto;\n                    else if (i <= 20)\n                        f = treble;\n                    else\n                        f = sfb21;\n\n                    gfc.nsPsy.longfact[i] = f;\n                }\n                for (i = 0; i < Encoder.SBMAX_s; i++) {\n                    var f;\n                    if (i <= 5)\n                        f = bass;\n                    else if (i <= 10)\n                        f = alto;\n                    else if (i <= 11)\n                        f = treble;\n                    else\n                        f = sfb21;\n\n                    gfc.nsPsy.shortfact[i] = f;\n                }\n            }\n        }\n    }\n\n    /**\n     * allocate bits among 2 channels based on PE<BR>\n     * mt 6/99<BR>\n     * bugfixes rh 8/01: often allocated more than the allowed 4095 bits\n     */\n    this.on_pe = function (gfp, pe,\n                           targ_bits, mean_bits, gr, cbr) {\n        var gfc = gfp.internal_flags;\n        var tbits = 0, bits;\n        var add_bits = new_int(2);\n        var ch;\n\n        /* allocate targ_bits for granule */\n        var mb = new MeanBits(tbits);\n        var extra_bits = rv.ResvMaxBits(gfp, mean_bits, mb, cbr);\n        tbits = mb.bits;\n        /* maximum allowed bits for this granule */\n        var max_bits = tbits + extra_bits;\n        if (max_bits > LameInternalFlags.MAX_BITS_PER_GRANULE) {\n            // hard limit per granule\n            max_bits = LameInternalFlags.MAX_BITS_PER_GRANULE;\n        }\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\n            /******************************************************************\n             * allocate bits for each channel\n             ******************************************************************/\n            targ_bits[ch] = Math.min(LameInternalFlags.MAX_BITS_PER_CHANNEL,\n                tbits / gfc.channels_out);\n\n            add_bits[ch] = 0 | (targ_bits[ch] * pe[gr][ch] / 700.0 - targ_bits[ch]);\n\n            /* at most increase bits by 1.5*average */\n            if (add_bits[ch] > mean_bits * 3 / 4)\n                add_bits[ch] = mean_bits * 3 / 4;\n            if (add_bits[ch] < 0)\n                add_bits[ch] = 0;\n\n            if (add_bits[ch] + targ_bits[ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL)\n                add_bits[ch] = Math.max(0,\n                    LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[ch]);\n\n            bits += add_bits[ch];\n        }\n        if (bits > extra_bits) {\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                add_bits[ch] = extra_bits * add_bits[ch] / bits;\n            }\n        }\n\n        for (ch = 0; ch < gfc.channels_out; ++ch) {\n            targ_bits[ch] += add_bits[ch];\n            extra_bits -= add_bits[ch];\n        }\n\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\n            bits += targ_bits[ch];\n        }\n        if (bits > LameInternalFlags.MAX_BITS_PER_GRANULE) {\n            var sum = 0;\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                targ_bits[ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\n                targ_bits[ch] /= bits;\n                sum += targ_bits[ch];\n            }\n            assert(sum <= LameInternalFlags.MAX_BITS_PER_GRANULE);\n        }\n\n        return max_bits;\n    }\n\n    this.reduce_side = function (targ_bits, ms_ener_ratio, mean_bits, max_bits) {\n        assert(max_bits <= LameInternalFlags.MAX_BITS_PER_GRANULE);\n        assert(targ_bits[0] + targ_bits[1] <= LameInternalFlags.MAX_BITS_PER_GRANULE);\n\n        /*\n         * ms_ener_ratio = 0: allocate 66/33 mid/side fac=.33 ms_ener_ratio =.5:\n         * allocate 50/50 mid/side fac= 0\n         */\n        /* 75/25 split is fac=.5 */\n        var fac = .33 * (.5 - ms_ener_ratio) / .5;\n        if (fac < 0)\n            fac = 0;\n        if (fac > .5)\n            fac = .5;\n\n        /* number of bits to move from side channel to mid channel */\n        /* move_bits = fac*targ_bits[1]; */\n        var move_bits = 0 | (fac * .5 * (targ_bits[0] + targ_bits[1]));\n\n        if (move_bits > LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[0]) {\n            move_bits = LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[0];\n        }\n        if (move_bits < 0)\n            move_bits = 0;\n\n        if (targ_bits[1] >= 125) {\n            /* dont reduce side channel below 125 bits */\n            if (targ_bits[1] - move_bits > 125) {\n\n                /* if mid channel already has 2x more than average, dont bother */\n                /* mean_bits = bits per granule (for both channels) */\n                if (targ_bits[0] < mean_bits)\n                    targ_bits[0] += move_bits;\n                targ_bits[1] -= move_bits;\n            } else {\n                targ_bits[0] += targ_bits[1] - 125;\n                targ_bits[1] = 125;\n            }\n        }\n\n        move_bits = targ_bits[0] + targ_bits[1];\n        if (move_bits > max_bits) {\n            targ_bits[0] = (max_bits * targ_bits[0]) / move_bits;\n            targ_bits[1] = (max_bits * targ_bits[1]) / move_bits;\n        }\n        assert(targ_bits[0] <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n        assert(targ_bits[1] <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n        assert(targ_bits[0] + targ_bits[1] <= LameInternalFlags.MAX_BITS_PER_GRANULE);\n    };\n\n    /**\n     *  Robert Hegemann 2001-04-27:\n     *  this adjusts the ATH, keeping the original noise floor\n     *  affects the higher frequencies more than the lower ones\n     */\n    this.athAdjust = function (a, x, athFloor) {\n        /*\n         * work in progress\n         */\n        var o = 90.30873362;\n        var p = 94.82444863;\n        var u = Util.FAST_LOG10_X(x, 10.0);\n        var v = a * a;\n        var w = 0.0;\n        u -= athFloor;\n        /* undo scaling */\n        if (v > 1E-20)\n            w = 1. + Util.FAST_LOG10_X(v, 10.0 / o);\n        if (w < 0)\n            w = 0.;\n        u *= w;\n        u += athFloor + o - p;\n        /* redo scaling */\n\n        return Math.pow(10., 0.1 * u);\n    };\n\n    /**\n     * Calculate the allowed distortion for each scalefactor band, as determined\n     * by the psychoacoustic model. xmin(sb) = ratio(sb) * en(sb) / bw(sb)\n     *\n     * returns number of sfb's with energy > ATH\n     */\n    this.calc_xmin = function (gfp, ratio, cod_info, pxmin) {\n        var pxminPos = 0;\n        var gfc = gfp.internal_flags;\n        var gsfb, j = 0, ath_over = 0;\n        var ATH = gfc.ATH;\n        var xr = cod_info.xr;\n        var enable_athaa_fix = (gfp.VBR == VbrMode.vbr_mtrh) ? 1 : 0;\n        var masking_lower = gfc.masking_lower;\n\n        if (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) {\n            /* was already done in PSY-Model */\n            masking_lower = 1.0;\n        }\n\n        for (gsfb = 0; gsfb < cod_info.psy_lmax; gsfb++) {\n            var en0, xmin;\n            var rh1, rh2;\n            var width, l;\n\n            if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\n                xmin = athAdjust(ATH.adjust, ATH.l[gsfb], ATH.floor);\n            else\n                xmin = ATH.adjust * ATH.l[gsfb];\n\n            width = cod_info.width[gsfb];\n            rh1 = xmin / width;\n            rh2 = DBL_EPSILON;\n            l = width >> 1;\n            en0 = 0.0;\n            do {\n                var xa, xb;\n                xa = xr[j] * xr[j];\n                en0 += xa;\n                rh2 += (xa < rh1) ? xa : rh1;\n                j++;\n                xb = xr[j] * xr[j];\n                en0 += xb;\n                rh2 += (xb < rh1) ? xb : rh1;\n                j++;\n            } while (--l > 0);\n            if (en0 > xmin)\n                ath_over++;\n\n            if (gsfb == Encoder.SBPSY_l) {\n                var x = xmin * gfc.nsPsy.longfact[gsfb];\n                if (rh2 < x) {\n                    rh2 = x;\n                }\n            }\n            if (enable_athaa_fix != 0) {\n                xmin = rh2;\n            }\n            if (!gfp.ATHonly) {\n                var e = ratio.en.l[gsfb];\n                if (e > 0.0) {\n                    var x;\n                    x = en0 * ratio.thm.l[gsfb] * masking_lower / e;\n                    if (enable_athaa_fix != 0)\n                        x *= gfc.nsPsy.longfact[gsfb];\n                    if (xmin < x)\n                        xmin = x;\n                }\n            }\n            if (enable_athaa_fix != 0)\n                pxmin[pxminPos++] = xmin;\n            else\n                pxmin[pxminPos++] = xmin * gfc.nsPsy.longfact[gsfb];\n        }\n        /* end of long block loop */\n\n        /* use this function to determine the highest non-zero coeff */\n        var max_nonzero = 575;\n        if (cod_info.block_type != Encoder.SHORT_TYPE) {\n            // NORM, START or STOP type, but not SHORT\n            var k = 576;\n            while (k-- != 0 && BitStream.EQ(xr[k], 0)) {\n                max_nonzero = k;\n            }\n        }\n        cod_info.max_nonzero_coeff = max_nonzero;\n\n        for (var sfb = cod_info.sfb_smin; gsfb < cod_info.psymax; sfb++, gsfb += 3) {\n            var width, b;\n            var tmpATH;\n            if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\n                tmpATH = athAdjust(ATH.adjust, ATH.s[sfb], ATH.floor);\n            else\n                tmpATH = ATH.adjust * ATH.s[sfb];\n\n            width = cod_info.width[gsfb];\n            for (b = 0; b < 3; b++) {\n                var en0 = 0.0, xmin;\n                var rh1, rh2;\n                var l = width >> 1;\n\n                rh1 = tmpATH / width;\n                rh2 = DBL_EPSILON;\n                do {\n                    var xa, xb;\n                    xa = xr[j] * xr[j];\n                    en0 += xa;\n                    rh2 += (xa < rh1) ? xa : rh1;\n                    j++;\n                    xb = xr[j] * xr[j];\n                    en0 += xb;\n                    rh2 += (xb < rh1) ? xb : rh1;\n                    j++;\n                } while (--l > 0);\n                if (en0 > tmpATH)\n                    ath_over++;\n                if (sfb == Encoder.SBPSY_s) {\n                    var x = tmpATH * gfc.nsPsy.shortfact[sfb];\n                    if (rh2 < x) {\n                        rh2 = x;\n                    }\n                }\n                if (enable_athaa_fix != 0)\n                    xmin = rh2;\n                else\n                    xmin = tmpATH;\n\n                if (!gfp.ATHonly && !gfp.ATHshort) {\n                    var e = ratio.en.s[sfb][b];\n                    if (e > 0.0) {\n                        var x;\n                        x = en0 * ratio.thm.s[sfb][b] * masking_lower / e;\n                        if (enable_athaa_fix != 0)\n                            x *= gfc.nsPsy.shortfact[sfb];\n                        if (xmin < x)\n                            xmin = x;\n                    }\n                }\n                if (enable_athaa_fix != 0)\n                    pxmin[pxminPos++] = xmin;\n                else\n                    pxmin[pxminPos++] = xmin * gfc.nsPsy.shortfact[sfb];\n            }\n            /* b */\n            if (gfp.useTemporal) {\n                if (pxmin[pxminPos - 3] > pxmin[pxminPos - 3 + 1])\n                    pxmin[pxminPos - 3 + 1] += (pxmin[pxminPos - 3] - pxmin[pxminPos - 3 + 1])\n                        * gfc.decay;\n                if (pxmin[pxminPos - 3 + 1] > pxmin[pxminPos - 3 + 2])\n                    pxmin[pxminPos - 3 + 2] += (pxmin[pxminPos - 3 + 1] - pxmin[pxminPos - 3 + 2])\n                        * gfc.decay;\n            }\n        }\n        /* end of short block sfb loop */\n\n        return ath_over;\n    };\n\n    function StartLine(j) {\n        this.s = j;\n    }\n\n    this.calc_noise_core = function (cod_info, startline, l, step) {\n        var noise = 0;\n        var j = startline.s;\n        var ix = cod_info.l3_enc;\n\n        if (j > cod_info.count1) {\n            while ((l--) != 0) {\n                var temp;\n                temp = cod_info.xr[j];\n                j++;\n                noise += temp * temp;\n                temp = cod_info.xr[j];\n                j++;\n                noise += temp * temp;\n            }\n        } else if (j > cod_info.big_values) {\n            var ix01 = new_float(2);\n            ix01[0] = 0;\n            ix01[1] = step;\n            while ((l--) != 0) {\n                var temp;\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\n                j++;\n                noise += temp * temp;\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\n                j++;\n                noise += temp * temp;\n            }\n        } else {\n            while ((l--) != 0) {\n                var temp;\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\n                j++;\n                noise += temp * temp;\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\n                j++;\n                noise += temp * temp;\n            }\n        }\n\n        startline.s = j;\n        return noise;\n    }\n\n    /**\n     * <PRE>\n     * -oo dB  =>  -1.00\n     * - 6 dB  =>  -0.97\n     * - 3 dB  =>  -0.80\n     * - 2 dB  =>  -0.64\n     * - 1 dB  =>  -0.38\n     *   0 dB  =>   0.00\n     * + 1 dB  =>  +0.49\n     * + 2 dB  =>  +1.06\n     * + 3 dB  =>  +1.68\n     * + 6 dB  =>  +3.69\n     * +10 dB  =>  +6.45\n     * </PRE>\n     */\n    this.calc_noise = function (cod_info, l3_xmin, distort, res, prev_noise) {\n        var distortPos = 0;\n        var l3_xminPos = 0;\n        var sfb, l, over = 0;\n        var over_noise_db = 0;\n        /* 0 dB relative to masking */\n        var tot_noise_db = 0;\n        /* -200 dB relative to masking */\n        var max_noise = -20.0;\n        var j = 0;\n        var scalefac = cod_info.scalefac;\n        var scalefacPos = 0;\n\n        res.over_SSD = 0;\n\n        for (sfb = 0; sfb < cod_info.psymax; sfb++) {\n            var s = cod_info.global_gain\n                - (((scalefac[scalefacPos++]) + (cod_info.preflag != 0 ? pretab[sfb]\n                    : 0)) << (cod_info.scalefac_scale + 1))\n                - cod_info.subblock_gain[cod_info.window[sfb]] * 8;\n            var noise = 0.0;\n\n            if (prev_noise != null && (prev_noise.step[sfb] == s)) {\n\n                /* use previously computed values */\n                noise = prev_noise.noise[sfb];\n                j += cod_info.width[sfb];\n                distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\n\n                noise = prev_noise.noise_log[sfb];\n\n            } else {\n                var step = POW20(s);\n                l = cod_info.width[sfb] >> 1;\n\n                if ((j + cod_info.width[sfb]) > cod_info.max_nonzero_coeff) {\n                    var usefullsize;\n                    usefullsize = cod_info.max_nonzero_coeff - j + 1;\n\n                    if (usefullsize > 0)\n                        l = usefullsize >> 1;\n                    else\n                        l = 0;\n                }\n\n                var sl = new StartLine(j);\n                noise = this.calc_noise_core(cod_info, sl, l, step);\n                j = sl.s;\n\n                if (prev_noise != null) {\n                    /* save noise values */\n                    prev_noise.step[sfb] = s;\n                    prev_noise.noise[sfb] = noise;\n                }\n\n                noise = distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\n\n                /* multiplying here is adding in dB, but can overflow */\n                noise = Util.FAST_LOG10(Math.max(noise, 1E-20));\n\n                if (prev_noise != null) {\n                    /* save noise values */\n                    prev_noise.noise_log[sfb] = noise;\n                }\n            }\n\n            if (prev_noise != null) {\n                /* save noise values */\n                prev_noise.global_gain = cod_info.global_gain;\n            }\n\n            tot_noise_db += noise;\n\n            if (noise > 0.0) {\n                var tmp;\n\n                tmp = Math.max(0 | (noise * 10 + .5), 1);\n                res.over_SSD += tmp * tmp;\n\n                over++;\n                /* multiplying here is adding in dB -but can overflow */\n                /* over_noise *= noise; */\n                over_noise_db += noise;\n            }\n            max_noise = Math.max(max_noise, noise);\n\n        }\n\n        res.over_count = over;\n        res.tot_noise = tot_noise_db;\n        res.over_noise = over_noise_db;\n        res.max_noise = max_noise;\n\n        return over;\n    }\n\n    /**\n     * updates plotting data\n     *\n     * Mark Taylor 2000-??-??\n     *\n     * Robert Hegemann: moved noise/distortion calc into it\n     */\n    this.set_pinfo = function (gfp, cod_info, ratio, gr, ch) {\n        var gfc = gfp.internal_flags;\n        var sfb, sfb2;\n        var l;\n        var en0, en1;\n        var ifqstep = (cod_info.scalefac_scale == 0) ? .5 : 1.0;\n        var scalefac = cod_info.scalefac;\n\n        var l3_xmin = new_float(L3Side.SFBMAX);\n        var xfsf = new_float(L3Side.SFBMAX);\n        var noise = new CalcNoiseResult();\n\n        calc_xmin(gfp, ratio, cod_info, l3_xmin);\n        calc_noise(cod_info, l3_xmin, xfsf, noise, null);\n\n        var j = 0;\n        sfb2 = cod_info.sfb_lmax;\n        if (cod_info.block_type != Encoder.SHORT_TYPE\n            && 0 == cod_info.mixed_block_flag)\n            sfb2 = 22;\n        for (sfb = 0; sfb < sfb2; sfb++) {\n            var start = gfc.scalefac_band.l[sfb];\n            var end = gfc.scalefac_band.l[sfb + 1];\n            var bw = end - start;\n            for (en0 = 0.0; j < end; j++)\n                en0 += cod_info.xr[j] * cod_info.xr[j];\n            en0 /= bw;\n            /* convert to MDCT units */\n            /* scaling so it shows up on FFT plot */\n            en1 = 1e15;\n            gfc.pinfo.en[gr][ch][sfb] = en1 * en0;\n            gfc.pinfo.xfsf[gr][ch][sfb] = en1 * l3_xmin[sfb] * xfsf[sfb] / bw;\n\n            if (ratio.en.l[sfb] > 0 && !gfp.ATHonly)\n                en0 = en0 / ratio.en.l[sfb];\n            else\n                en0 = 0.0;\n\n            gfc.pinfo.thr[gr][ch][sfb] = en1\n                * Math.max(en0 * ratio.thm.l[sfb], gfc.ATH.l[sfb]);\n\n            /* there is no scalefactor bands >= SBPSY_l */\n            gfc.pinfo.LAMEsfb[gr][ch][sfb] = 0;\n            if (cod_info.preflag != 0 && sfb >= 11)\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] = -ifqstep * pretab[sfb];\n\n            if (sfb < Encoder.SBPSY_l) {\n                /* scfsi should be decoded by caller side */\n                assert(scalefac[sfb] >= 0);\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] -= ifqstep * scalefac[sfb];\n            }\n        }\n        /* for sfb */\n\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\n            sfb2 = sfb;\n            for (sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\n                var start = gfc.scalefac_band.s[sfb];\n                var end = gfc.scalefac_band.s[sfb + 1];\n                var bw = end - start;\n                for (var i = 0; i < 3; i++) {\n                    for (en0 = 0.0, l = start; l < end; l++) {\n                        en0 += cod_info.xr[j] * cod_info.xr[j];\n                        j++;\n                    }\n                    en0 = Math.max(en0 / bw, 1e-20);\n                    /* convert to MDCT units */\n                    /* scaling so it shows up on FFT plot */\n                    en1 = 1e15;\n\n                    gfc.pinfo.en_s[gr][ch][3 * sfb + i] = en1 * en0;\n                    gfc.pinfo.xfsf_s[gr][ch][3 * sfb + i] = en1 * l3_xmin[sfb2]\n                        * xfsf[sfb2] / bw;\n                    if (ratio.en.s[sfb][i] > 0)\n                        en0 = en0 / ratio.en.s[sfb][i];\n                    else\n                        en0 = 0.0;\n                    if (gfp.ATHonly || gfp.ATHshort)\n                        en0 = 0;\n\n                    gfc.pinfo.thr_s[gr][ch][3 * sfb + i] = en1\n                        * Math.max(en0 * ratio.thm.s[sfb][i],\n                            gfc.ATH.s[sfb]);\n\n                    /* there is no scalefactor bands >= SBPSY_s */\n                    gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] = -2.0\n                        * cod_info.subblock_gain[i];\n                    if (sfb < Encoder.SBPSY_s) {\n                        gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] -= ifqstep\n                            * scalefac[sfb2];\n                    }\n                    sfb2++;\n                }\n            }\n        }\n        /* block type short */\n        gfc.pinfo.LAMEqss[gr][ch] = cod_info.global_gain;\n        gfc.pinfo.LAMEmainbits[gr][ch] = cod_info.part2_3_length\n            + cod_info.part2_length;\n        gfc.pinfo.LAMEsfbits[gr][ch] = cod_info.part2_length;\n\n        gfc.pinfo.over[gr][ch] = noise.over_count;\n        gfc.pinfo.max_noise[gr][ch] = noise.max_noise * 10.0;\n        gfc.pinfo.over_noise[gr][ch] = noise.over_noise * 10.0;\n        gfc.pinfo.tot_noise[gr][ch] = noise.tot_noise * 10.0;\n        gfc.pinfo.over_SSD[gr][ch] = noise.over_SSD;\n    }\n\n    /**\n     * updates plotting data for a whole frame\n     *\n     * Robert Hegemann 2000-10-21\n     */\n    function set_frame_pinfo(gfp, ratio) {\n        var gfc = gfp.internal_flags;\n\n        gfc.masking_lower = 1.0;\n\n        /*\n         * for every granule and channel patch l3_enc and set info\n         */\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n                var scalefac_sav = new_int(L3Side.SFBMAX);\n                System.arraycopy(cod_info.scalefac, 0, scalefac_sav, 0,\n                    scalefac_sav.length);\n\n                /*\n                 * reconstruct the scalefactors in case SCFSI was used\n                 */\n                if (gr == 1) {\n                    var sfb;\n                    for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\n                        if (cod_info.scalefac[sfb] < 0) /* scfsi */\n                            cod_info.scalefac[sfb] = gfc.l3_side.tt[0][ch].scalefac[sfb];\n                    }\n                }\n\n                set_pinfo(gfp, cod_info, ratio[gr][ch], gr, ch);\n                System.arraycopy(scalefac_sav, 0, cod_info.scalefac, 0,\n                    scalefac_sav.length);\n            }\n            /* for ch */\n        }\n        /* for gr */\n    }\n\n}\n\nmodule.exports = QuantizePVT;\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar IIISideInfo = require('./IIISideInfo.js');\nvar ScaleFac = require('./ScaleFac.js');\nvar NsPsy = require('./NsPsy.js');\nvar VBRSeekInfo = require('./VBRSeekInfo.js');\nvar III_psy_xmin = require('./III_psy_xmin.js');\nvar Encoder = require('./Encoder.js');\nvar L3Side = require('./L3Side.js');\n\n\nLameInternalFlags.MFSIZE = (3 * 1152 + Encoder.ENCDELAY - Encoder.MDCTDELAY);\nLameInternalFlags.MAX_HEADER_BUF = 256;\nLameInternalFlags.MAX_BITS_PER_CHANNEL = 4095;\nLameInternalFlags.MAX_BITS_PER_GRANULE = 7680;\nLameInternalFlags.BPC = 320;\n\nfunction LameInternalFlags() {\n    var MAX_HEADER_LEN = 40;\n\n\n    /********************************************************************\n     * internal variables NOT set by calling program, and should not be *\n     * modified by the calling program *\n     ********************************************************************/\n\n    /**\n     * Some remarks to the Class_ID field: The Class ID is an Identifier for a\n     * pointer to this struct. It is very unlikely that a pointer to\n     * lame_global_flags has the same 32 bits in it's structure (large and other\n     * special properties, for instance prime).\n     *\n     * To test that the structure is right and initialized, use: if ( gfc .\n     * Class_ID == LAME_ID ) ... Other remark: If you set a flag to 0 for uninit\n     * data and 1 for init data, the right test should be \"if (flag == 1)\" and\n     * NOT \"if (flag)\". Unintended modification of this element will be\n     * otherwise misinterpreted as an init.\n     */\n    this.Class_ID = 0;\n\n    this.lame_encode_frame_init = 0;\n    this.iteration_init_init = 0;\n    this.fill_buffer_resample_init = 0;\n\n    //public float mfbuf[][] = new float[2][MFSIZE];\n    this.mfbuf = new_float_n([2, LameInternalFlags.MFSIZE]);\n\n    /**\n     * granules per frame\n     */\n    this.mode_gr = 0;\n    /**\n     * number of channels in the input data stream (PCM or decoded PCM)\n     */\n    this.channels_in = 0;\n    /**\n     * number of channels in the output data stream (not used for decoding)\n     */\n    this.channels_out = 0;\n    /**\n     * input_samp_rate/output_samp_rate\n     */\n        //public double resample_ratio;\n    this.resample_ratio = 0.;\n\n    this.mf_samples_to_encode = 0;\n    this.mf_size = 0;\n    /**\n     * min bitrate index\n     */\n    this.VBR_min_bitrate = 0;\n    /**\n     * max bitrate index\n     */\n    this.VBR_max_bitrate = 0;\n    this.bitrate_index = 0;\n    this.samplerate_index = 0;\n    this.mode_ext = 0;\n\n    /* lowpass and highpass filter control */\n    /**\n     * normalized frequency bounds of passband\n     */\n    this.lowpass1 = 0.;\n    this.lowpass2 = 0.;\n    /**\n     * normalized frequency bounds of passband\n     */\n    this.highpass1 = 0.;\n    this.highpass2 = 0.;\n\n    /**\n     * 0 = none 1 = ISO AAC model 2 = allow scalefac_select=1\n     */\n    this.noise_shaping = 0;\n\n    /**\n     * 0 = ISO model: amplify all distorted bands<BR>\n     * 1 = amplify within 50% of max (on db scale)<BR>\n     * 2 = amplify only most distorted band<BR>\n     * 3 = method 1 and refine with method 2<BR>\n     */\n    this.noise_shaping_amp = 0;\n    /**\n     * 0 = no substep<BR>\n     * 1 = use substep shaping at last step(VBR only)<BR>\n     * (not implemented yet)<BR>\n     * 2 = use substep inside loop<BR>\n     * 3 = use substep inside loop and last step<BR>\n     */\n    this.substep_shaping = 0;\n\n    /**\n     * 1 = gpsycho. 0 = none\n     */\n    this.psymodel = 0;\n    /**\n     * 0 = stop at over=0, all scalefacs amplified or<BR>\n     * a scalefac has reached max value<BR>\n     * 1 = stop when all scalefacs amplified or a scalefac has reached max value<BR>\n     * 2 = stop when all scalefacs amplified\n     */\n    this.noise_shaping_stop = 0;\n\n    /**\n     * 0 = no, 1 = yes\n     */\n    this.subblock_gain = 0;\n    /**\n     * 0 = no. 1=outside loop 2=inside loop(slow)\n     */\n    this.use_best_huffman = 0;\n\n    /**\n     * 0 = stop early after 0 distortion found. 1 = full search\n     */\n    this.full_outer_loop = 0;\n\n    //public IIISideInfo l3_side = new IIISideInfo();\n    this.l3_side = new IIISideInfo();\n    this.ms_ratio = new_float(2);\n\n    /* used for padding */\n    /**\n     * padding for the current frame?\n     */\n    this.padding = 0;\n    this.frac_SpF = 0;\n    this.slot_lag = 0;\n\n    /**\n     * optional ID3 tags\n     */\n        //public ID3TagSpec tag_spec;\n    this.tag_spec = null;\n    this.nMusicCRC = 0;\n\n    /* variables used by Quantize */\n    //public int OldValue[] = new int[2];\n    this.OldValue = new_int(2);\n    //public int CurrentStep[] = new int[2];\n    this.CurrentStep = new_int(2);\n\n    this.masking_lower = 0.;\n    //public int bv_scf[] = new int[576];\n    this.bv_scf = new_int(576);\n    //public int pseudohalf[] = new int[L3Side.SFBMAX];\n    this.pseudohalf = new_int(L3Side.SFBMAX);\n\n    /**\n     * will be set in lame_init_params\n     */\n    this.sfb21_extra = false;\n\n    /* BPC = maximum number of filter convolution windows to precompute */\n    //public float[][] inbuf_old = new float[2][];\n    this.inbuf_old = new Array(2);\n    //public float[][] blackfilt = new float[2 * BPC + 1][];\n    this.blackfilt = new Array(2 * LameInternalFlags.BPC + 1);\n    //public double itime[] = new double[2];\n    this.itime = new_double(2);\n    this.sideinfo_len = 0;\n\n    /* variables for newmdct.c */\n    //public float sb_sample[][][][] = new float[2][2][18][Encoder.SBLIMIT];\n    this.sb_sample = new_float_n([2, 2, 18, Encoder.SBLIMIT]);\n    this.amp_filter = new_float(32);\n\n    /* variables for BitStream */\n\n    /**\n     * <PRE>\n     * mpeg1: buffer=511 bytes  smallest frame: 96-38(sideinfo)=58\n     * max number of frames in reservoir:  8\n     * mpeg2: buffer=255 bytes.  smallest frame: 24-23bytes=1\n     * with VBR, if you are encoding all silence, it is possible to\n     * have 8kbs/24khz frames with 1byte of data each, which means we need\n     * to buffer up to 255 headers!\n     * </PRE>\n     */\n    /**\n     * also, max_header_buf has to be a power of two\n     */\n    /**\n     * max size of header is 38\n     */\n\n    function Header() {\n        this.write_timing = 0;\n        this.ptr = 0;\n        //public byte buf[] = new byte[MAX_HEADER_LEN];\n        this.buf = new_byte(MAX_HEADER_LEN);\n    }\n\n    this.header = new Array(LameInternalFlags.MAX_HEADER_BUF);\n\n    this.h_ptr = 0;\n    this.w_ptr = 0;\n    this.ancillary_flag = 0;\n\n    /* variables for Reservoir */\n    /**\n     * in bits\n     */\n    this.ResvSize = 0;\n    /**\n     * in bits\n     */\n    this.ResvMax = 0;\n\n    //public ScaleFac scalefac_band = new ScaleFac();\n    this.scalefac_band = new ScaleFac();\n\n    /* daa from PsyModel */\n    /* The static variables \"r\", \"phi_sav\", \"new\", \"old\" and \"oldest\" have */\n    /* to be remembered for the unpredictability measure. For \"r\" and */\n    /* \"phi_sav\", the first index from the left is the channel select and */\n    /* the second index is the \"age\" of the data. */\n    this.minval_l = new_float(Encoder.CBANDS);\n    this.minval_s = new_float(Encoder.CBANDS);\n    this.nb_1 = new_float_n([4, Encoder.CBANDS]);\n    this.nb_2 = new_float_n([4, Encoder.CBANDS]);\n    this.nb_s1 = new_float_n([4, Encoder.CBANDS]);\n    this.nb_s2 = new_float_n([4, Encoder.CBANDS]);\n    this.s3_ss = null;\n    this.s3_ll = null;\n    this.decay = 0.;\n\n    //public III_psy_xmin[] thm = new III_psy_xmin[4];\n    //public III_psy_xmin[] en = new III_psy_xmin[4];\n    this.thm = new Array(4);\n    this.en = new Array(4);\n\n    /**\n     * fft and energy calculation\n     */\n    this.tot_ener = new_float(4);\n\n    /* loudness calculation (for adaptive threshold of hearing) */\n    /**\n     * loudness^2 approx. per granule and channel\n     */\n    this.loudness_sq = new_float_n([2, 2]);\n    /**\n     * account for granule delay of L3psycho_anal\n     */\n    this.loudness_sq_save = new_float(2);\n\n    /**\n     * Scale Factor Bands\n     */\n    this.mld_l = new_float(Encoder.SBMAX_l);\n    this.mld_s = new_float(Encoder.SBMAX_s);\n    this.bm_l = new_int(Encoder.SBMAX_l);\n    this.bo_l = new_int(Encoder.SBMAX_l);\n    this.bm_s = new_int(Encoder.SBMAX_s);\n    this.bo_s = new_int(Encoder.SBMAX_s);\n    this.npart_l = 0;\n    this.npart_s = 0;\n\n    this.s3ind = new_int_n([Encoder.CBANDS, 2]);\n    this.s3ind_s = new_int_n([Encoder.CBANDS, 2]);\n\n    this.numlines_s = new_int(Encoder.CBANDS);\n    this.numlines_l = new_int(Encoder.CBANDS);\n    this.rnumlines_l = new_float(Encoder.CBANDS);\n    this.mld_cb_l = new_float(Encoder.CBANDS);\n    this.mld_cb_s = new_float(Encoder.CBANDS);\n    this.numlines_s_num1 = 0;\n    this.numlines_l_num1 = 0;\n\n    /* ratios */\n    this.pe = new_float(4);\n    this.ms_ratio_s_old = 0.;\n    this.ms_ratio_l_old = 0.;\n    this.ms_ener_ratio_old = 0.;\n\n    /**\n     * block type\n     */\n    this.blocktype_old = new_int(2);\n\n    /**\n     * variables used for --nspsytune\n     */\n    this.nsPsy = new NsPsy();\n\n    /**\n     * used for Xing VBR header\n     */\n    this.VBR_seek_table = new VBRSeekInfo();\n\n    /**\n     * all ATH related stuff\n     */\n        //public ATH ATH;\n    this.ATH = null;\n\n    this.PSY = null;\n\n    this.nogap_total = 0;\n    this.nogap_current = 0;\n\n    /* ReplayGain */\n    this.decode_on_the_fly = true;\n    this.findReplayGain = true;\n    this.findPeakSample = true;\n    this.PeakSample = 0.;\n    this.RadioGain = 0;\n    this.AudiophileGain = 0;\n    //public ReplayGain rgdata;\n    this.rgdata = null;\n\n    /**\n     * gain change required for preventing clipping\n     */\n    this.noclipGainChange = 0;\n    /**\n     * user-specified scale factor required for preventing clipping\n     */\n    this.noclipScale = 0.;\n\n    /* simple statistics */\n    this.bitrate_stereoMode_Hist = new_int_n([16, 4 + 1]);\n    /**\n     * norm/start/short/stop/mixed(short)/sum\n     */\n    this.bitrate_blockType_Hist = new_int_n([16, 4 + 1 + 1]);\n\n    //public PlottingData pinfo;\n    //public MPGLib.mpstr_tag hip;\n    this.pinfo = null;\n    this.hip = null;\n\n    this.in_buffer_nsamples = 0;\n    //public float[] in_buffer_0;\n    //public float[] in_buffer_1;\n    this.in_buffer_0 = null;\n    this.in_buffer_1 = null;\n\n    //public IIterationLoop iteration_loop;\n    this.iteration_loop = null;\n\n    for (var i = 0; i < this.en.length; i++) {\n        this.en[i] = new III_psy_xmin();\n    }\n    for (var i = 0; i < this.thm.length; i++) {\n        this.thm[i] = new III_psy_xmin();\n    }\n    for (var i = 0; i < this.header.length; i++) {\n        this.header[i] = new Header();\n    }\n\n}\n\nmodule.exports = LameInternalFlags;\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\n\n//package mp3;\n\n/**\n * Variables used for --nspsytune\n *\n * @author Ken\n *\n */\nfunction NsPsy() {\n    this.last_en_subshort = new_float_n([4, 9]);\n    this.lastAttacks = new_int(4);\n    this.pefirbuf = new_float(19);\n    this.longfact = new_float(Encoder.SBMAX_l);\n    this.shortfact = new_float(Encoder.SBMAX_s);\n\n    /**\n     * short block tuning\n     */\n    this.attackthre = 0.;\n    this.attackthre_s = 0.;\n}\n\nmodule.exports = NsPsy;\n","/*\n *\tMP3 huffman table selecting and bit counting\n *\n *\tCopyright (c) 1999-2005 Takehiro TOMINAGA\n *\tCopyright (c) 2002-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\t See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Takehiro.java,v 1.26 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\nvar Tables = require('./Tables.js');\nvar GrInfo = require('./GrInfo.js');\nvar QuantizePVT = require('./QuantizePVT.js');\n\n\nfunction Takehiro() {\n\n    var qupvt = null;\n    this.qupvt = null;\n\n    this.setModules = function (_qupvt) {\n        this.qupvt = _qupvt;\n        qupvt = _qupvt;\n    }\n\n    function Bits(b) {\n        this.bits = 0 | b;\n    }\n\n    var subdv_table = [[0, 0], /* 0 bands */\n        [0, 0], /* 1 bands */\n        [0, 0], /* 2 bands */\n        [0, 0], /* 3 bands */\n        [0, 0], /* 4 bands */\n        [0, 1], /* 5 bands */\n        [1, 1], /* 6 bands */\n        [1, 1], /* 7 bands */\n        [1, 2], /* 8 bands */\n        [2, 2], /* 9 bands */\n        [2, 3], /* 10 bands */\n        [2, 3], /* 11 bands */\n        [3, 4], /* 12 bands */\n        [3, 4], /* 13 bands */\n        [3, 4], /* 14 bands */\n        [4, 5], /* 15 bands */\n        [4, 5], /* 16 bands */\n        [4, 6], /* 17 bands */\n        [5, 6], /* 18 bands */\n        [5, 6], /* 19 bands */\n        [5, 7], /* 20 bands */\n        [6, 7], /* 21 bands */\n        [6, 7], /* 22 bands */\n    ];\n\n    /**\n     * nonlinear quantization of xr More accurate formula than the ISO formula.\n     * Takes into account the fact that we are quantizing xr . ix, but we want\n     * ix^4/3 to be as close as possible to x^4/3. (taking the nearest int would\n     * mean ix is as close as possible to xr, which is different.)\n     *\n     * From Segher Boessenkool <segher@eastsite.nl> 11/1999\n     *\n     * 09/2000: ASM code removed in favor of IEEE754 hack by Takehiro Tominaga.\n     * If you need the ASM code, check CVS circa Aug 2000.\n     *\n     * 01/2004: Optimizations by Gabriel Bouvigne\n     */\n    function quantize_lines_xrpow_01(l, istep, xr, xrPos, ix, ixPos) {\n        var compareval0 = (1.0 - 0.4054) / istep;\n\n        assert(l > 0);\n        l = l >> 1;\n        while ((l--) != 0) {\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\n        }\n    }\n\n    /**\n     * XRPOW_FTOI is a macro to convert floats to ints.<BR>\n     * if XRPOW_FTOI(x) = nearest_int(x), then QUANTFAC(x)=adj43asm[x]<BR>\n     * ROUNDFAC= -0.0946<BR>\n     *\n     * if XRPOW_FTOI(x) = floor(x), then QUANTFAC(x)=asj43[x]<BR>\n     * ROUNDFAC=0.4054<BR>\n     *\n     * Note: using floor() or 0| is extremely slow. On machines where the\n     * TAKEHIRO_IEEE754_HACK code above does not work, it is worthwile to write\n     * some ASM for XRPOW_FTOI().\n     */\n    function quantize_lines_xrpow(l, istep, xr, xrPos, ix, ixPos) {\n        assert(l > 0);\n\n        l = l >> 1;\n        var remaining = l % 2;\n        l = l >> 1;\n        while (l-- != 0) {\n            var x0, x1, x2, x3;\n            var rx0, rx1, rx2, rx3;\n\n            x0 = xr[xrPos++] * istep;\n            x1 = xr[xrPos++] * istep;\n            rx0 = 0 | x0;\n            x2 = xr[xrPos++] * istep;\n            rx1 = 0 | x1;\n            x3 = xr[xrPos++] * istep;\n            rx2 = 0 | x2;\n            x0 += qupvt.adj43[rx0];\n            rx3 = 0 | x3;\n            x1 += qupvt.adj43[rx1];\n            ix[ixPos++] = 0 | x0;\n            x2 += qupvt.adj43[rx2];\n            ix[ixPos++] = 0 | x1;\n            x3 += qupvt.adj43[rx3];\n            ix[ixPos++] = 0 | x2;\n            ix[ixPos++] = 0 | x3;\n        }\n        if (remaining != 0) {\n            var x0, x1;\n            var rx0, rx1;\n\n            x0 = xr[xrPos++] * istep;\n            x1 = xr[xrPos++] * istep;\n            rx0 = 0 | x0;\n            rx1 = 0 | x1;\n            x0 += qupvt.adj43[rx0];\n            x1 += qupvt.adj43[rx1];\n            ix[ixPos++] = 0 | x0;\n            ix[ixPos++] = 0 | x1;\n        }\n    }\n\n    /**\n     * Quantization function This function will select which lines to quantize\n     * and call the proper quantization function\n     */\n    function quantize_xrpow(xp, pi, istep, codInfo, prevNoise) {\n        /* quantize on xr^(3/4) instead of xr */\n        var sfb;\n        var sfbmax;\n        var j = 0;\n        var prev_data_use;\n        var accumulate = 0;\n        var accumulate01 = 0;\n        var xpPos = 0;\n        var iData = pi;\n        var iDataPos = 0;\n        var acc_iData = iData;\n        var acc_iDataPos = 0;\n        var acc_xp = xp;\n        var acc_xpPos = 0;\n\n        /*\n         * Reusing previously computed data does not seems to work if global\n         * gain is changed. Finding why it behaves this way would allow to use a\n         * cache of previously computed values (let's 10 cached values per sfb)\n         * that would probably provide a noticeable speedup\n         */\n        prev_data_use = (prevNoise != null && (codInfo.global_gain == prevNoise.global_gain));\n\n        if (codInfo.block_type == Encoder.SHORT_TYPE)\n            sfbmax = 38;\n        else\n            sfbmax = 21;\n\n        for (sfb = 0; sfb <= sfbmax; sfb++) {\n            var step = -1;\n\n            if (prev_data_use || codInfo.block_type == Encoder.NORM_TYPE) {\n                step = codInfo.global_gain\n                    - ((codInfo.scalefac[sfb] + (codInfo.preflag != 0 ? qupvt.pretab[sfb]\n                        : 0)) << (codInfo.scalefac_scale + 1))\n                    - codInfo.subblock_gain[codInfo.window[sfb]] * 8;\n            }\n            assert(codInfo.width[sfb] >= 0);\n            if (prev_data_use && (prevNoise.step[sfb] == step)) {\n                /*\n                 * do not recompute this part, but compute accumulated lines\n                 */\n                if (accumulate != 0) {\n                    quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\n                        acc_iData, acc_iDataPos);\n                    accumulate = 0;\n                }\n                if (accumulate01 != 0) {\n                    quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                        acc_xpPos, acc_iData, acc_iDataPos);\n                    accumulate01 = 0;\n                }\n            } else { /* should compute this part */\n                var l = codInfo.width[sfb];\n\n                if ((j + codInfo.width[sfb]) > codInfo.max_nonzero_coeff) {\n                    /* do not compute upper zero part */\n                    var usefullsize;\n                    usefullsize = codInfo.max_nonzero_coeff - j + 1;\n                    Arrays.fill(pi, codInfo.max_nonzero_coeff, 576, 0);\n                    l = usefullsize;\n\n                    if (l < 0) {\n                        l = 0;\n                    }\n\n                    /* no need to compute higher sfb values */\n                    sfb = sfbmax + 1;\n                }\n\n                /* accumulate lines to quantize */\n                if (0 == accumulate && 0 == accumulate01) {\n                    acc_iData = iData;\n                    acc_iDataPos = iDataPos;\n                    acc_xp = xp;\n                    acc_xpPos = xpPos;\n                }\n                if (prevNoise != null && prevNoise.sfb_count1 > 0\n                    && sfb >= prevNoise.sfb_count1\n                    && prevNoise.step[sfb] > 0\n                    && step >= prevNoise.step[sfb]) {\n\n                    if (accumulate != 0) {\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate = 0;\n                        acc_iData = iData;\n                        acc_iDataPos = iDataPos;\n                        acc_xp = xp;\n                        acc_xpPos = xpPos;\n                    }\n                    accumulate01 += l;\n                } else {\n                    if (accumulate01 != 0) {\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate01 = 0;\n                        acc_iData = iData;\n                        acc_iDataPos = iDataPos;\n                        acc_xp = xp;\n                        acc_xpPos = xpPos;\n                    }\n                    accumulate += l;\n                }\n\n                if (l <= 0) {\n                    /*\n                     * rh: 20040215 may happen due to \"prev_data_use\"\n                     * optimization\n                     */\n                    if (accumulate01 != 0) {\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate01 = 0;\n                    }\n                    if (accumulate != 0) {\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate = 0;\n                    }\n\n                    break;\n                    /* ends for-loop */\n                }\n            }\n            if (sfb <= sfbmax) {\n                iDataPos += codInfo.width[sfb];\n                xpPos += codInfo.width[sfb];\n                j += codInfo.width[sfb];\n            }\n        }\n        if (accumulate != 0) { /* last data part */\n            quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\n                acc_iData, acc_iDataPos);\n            accumulate = 0;\n        }\n        if (accumulate01 != 0) { /* last data part */\n            quantize_lines_xrpow_01(accumulate01, istep, acc_xp, acc_xpPos,\n                acc_iData, acc_iDataPos);\n            accumulate01 = 0;\n        }\n\n    }\n\n    /**\n     * ix_max\n     */\n    function ix_max(ix, ixPos, endPos) {\n        var max1 = 0, max2 = 0;\n\n        do {\n            var x1 = ix[ixPos++];\n            var x2 = ix[ixPos++];\n            if (max1 < x1)\n                max1 = x1;\n\n            if (max2 < x2)\n                max2 = x2;\n        } while (ixPos < endPos);\n        if (max1 < max2)\n            max1 = max2;\n        return max1;\n    }\n\n    function count_bit_ESC(ix, ixPos, end, t1, t2, s) {\n        /* ESC-table is used */\n        var linbits = Tables.ht[t1].xlen * 65536 + Tables.ht[t2].xlen;\n        var sum = 0, sum2;\n\n        do {\n            var x = ix[ixPos++];\n            var y = ix[ixPos++];\n\n            if (x != 0) {\n                if (x > 14) {\n                    x = 15;\n                    sum += linbits;\n                }\n                x *= 16;\n            }\n\n            if (y != 0) {\n                if (y > 14) {\n                    y = 15;\n                    sum += linbits;\n                }\n                x += y;\n            }\n\n            sum += Tables.largetbl[x];\n        } while (ixPos < end);\n\n        sum2 = sum & 0xffff;\n        sum >>= 16;\n\n        if (sum > sum2) {\n            sum = sum2;\n            t1 = t2;\n        }\n\n        s.bits += sum;\n        return t1;\n    }\n\n    function count_bit_noESC(ix, ixPos, end, s) {\n        /* No ESC-words */\n        var sum1 = 0;\n        var hlen1 = Tables.ht[1].hlen;\n\n        do {\n            var x = ix[ixPos + 0] * 2 + ix[ixPos + 1];\n            ixPos += 2;\n            sum1 += hlen1[x];\n        } while (ixPos < end);\n\n        s.bits += sum1;\n        return 1;\n    }\n\n    function count_bit_noESC_from2(ix, ixPos, end, t1, s) {\n        /* No ESC-words */\n        var sum = 0, sum2;\n        var xlen = Tables.ht[t1].xlen;\n        var hlen;\n        if (t1 == 2)\n            hlen = Tables.table23;\n        else\n            hlen = Tables.table56;\n\n        do {\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\n            ixPos += 2;\n            sum += hlen[x];\n        } while (ixPos < end);\n\n        sum2 = sum & 0xffff;\n        sum >>= 16;\n\n        if (sum > sum2) {\n            sum = sum2;\n            t1++;\n        }\n\n        s.bits += sum;\n        return t1;\n    }\n\n    function count_bit_noESC_from3(ix, ixPos, end, t1, s) {\n        /* No ESC-words */\n        var sum1 = 0;\n        var sum2 = 0;\n        var sum3 = 0;\n        var xlen = Tables.ht[t1].xlen;\n        var hlen1 = Tables.ht[t1].hlen;\n        var hlen2 = Tables.ht[t1 + 1].hlen;\n        var hlen3 = Tables.ht[t1 + 2].hlen;\n\n        do {\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\n            ixPos += 2;\n            sum1 += hlen1[x];\n            sum2 += hlen2[x];\n            sum3 += hlen3[x];\n        } while (ixPos < end);\n        var t = t1;\n        if (sum1 > sum2) {\n            sum1 = sum2;\n            t++;\n        }\n        if (sum1 > sum3) {\n            sum1 = sum3;\n            t = t1 + 2;\n        }\n        s.bits += sum1;\n\n        return t;\n    }\n\n    /*************************************************************************/\n    /* choose table */\n    /*************************************************************************/\n\n    var huf_tbl_noESC = [1, 2, 5, 7, 7, 10, 10, 13, 13,\n        13, 13, 13, 13, 13, 13];\n\n    /**\n     * Choose the Huffman table that will encode ix[begin..end] with the fewest\n     * bits.\n     *\n     * Note: This code contains knowledge about the sizes and characteristics of\n     * the Huffman tables as defined in the IS (Table B.7), and will not work\n     * with any arbitrary tables.\n     */\n    function choose_table(ix, ixPos, endPos, s) {\n        var max = ix_max(ix, ixPos, endPos);\n\n        switch (max) {\n            case 0:\n                return max;\n\n            case 1:\n                return count_bit_noESC(ix, ixPos, endPos, s);\n\n            case 2:\n            case 3:\n                return count_bit_noESC_from2(ix, ixPos, endPos,\n                    huf_tbl_noESC[max - 1], s);\n\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                return count_bit_noESC_from3(ix, ixPos, endPos,\n                    huf_tbl_noESC[max - 1], s);\n\n            default:\n                /* try tables with linbits */\n                if (max > QuantizePVT.IXMAX_VAL) {\n                    s.bits = QuantizePVT.LARGE_BITS;\n                    return -1;\n                }\n                max -= 15;\n                var choice2;\n                for (choice2 = 24; choice2 < 32; choice2++) {\n                    if (Tables.ht[choice2].linmax >= max) {\n                        break;\n                    }\n                }\n                var choice;\n                for (choice = choice2 - 8; choice < 24; choice++) {\n                    if (Tables.ht[choice].linmax >= max) {\n                        break;\n                    }\n                }\n                return count_bit_ESC(ix, ixPos, endPos, choice, choice2, s);\n        }\n    }\n\n    /**\n     * count_bit\n     */\n    this.noquant_count_bits = function (gfc, gi, prev_noise) {\n        var ix = gi.l3_enc;\n        var i = Math.min(576, ((gi.max_nonzero_coeff + 2) >> 1) << 1);\n\n        if (prev_noise != null)\n            prev_noise.sfb_count1 = 0;\n\n        /* Determine count1 region */\n        for (; i > 1; i -= 2)\n            if ((ix[i - 1] | ix[i - 2]) != 0)\n                break;\n        gi.count1 = i;\n\n        /* Determines the number of bits to encode the quadruples. */\n        var a1 = 0;\n        var a2 = 0;\n        for (; i > 3; i -= 4) {\n            var p;\n            /* hack to check if all values <= 1 */\n            //throw \"TODO: HACK         if ((((long) ix[i - 1] | (long) ix[i - 2] | (long) ix[i - 3] | (long) ix[i - 4]) & 0xffffffffL) > 1L        \"\n            //if (true) {\n            if (((ix[i - 1] | ix[i - 2] | ix[i - 3] | ix[i - 4]) & 0x7fffffff) > 1) {\n                break;\n            }\n            p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2 + ix[i - 1];\n            a1 += Tables.t32l[p];\n            a2 += Tables.t33l[p];\n        }\n        var bits = a1;\n        gi.count1table_select = 0;\n        if (a1 > a2) {\n            bits = a2;\n            gi.count1table_select = 1;\n        }\n\n        gi.count1bits = bits;\n        gi.big_values = i;\n        if (i == 0)\n            return bits;\n\n        if (gi.block_type == Encoder.SHORT_TYPE) {\n            a1 = 3 * gfc.scalefac_band.s[3];\n            if (a1 > gi.big_values)\n                a1 = gi.big_values;\n            a2 = gi.big_values;\n\n        } else if (gi.block_type == Encoder.NORM_TYPE) {\n            assert(i <= 576);\n            /* bv_scf has 576 entries (0..575) */\n            a1 = gi.region0_count = gfc.bv_scf[i - 2];\n            a2 = gi.region1_count = gfc.bv_scf[i - 1];\n\n            assert(a1 + a2 + 2 < Encoder.SBPSY_l);\n            a2 = gfc.scalefac_band.l[a1 + a2 + 2];\n            a1 = gfc.scalefac_band.l[a1 + 1];\n            if (a2 < i) {\n                var bi = new Bits(bits);\n                gi.table_select[2] = choose_table(ix, a2, i, bi);\n                bits = bi.bits;\n            }\n        } else {\n            gi.region0_count = 7;\n            /* gi.region1_count = SBPSY_l - 7 - 1; */\n            gi.region1_count = Encoder.SBMAX_l - 1 - 7 - 1;\n            a1 = gfc.scalefac_band.l[7 + 1];\n            a2 = i;\n            if (a1 > a2) {\n                a1 = a2;\n            }\n        }\n\n        /* have to allow for the case when bigvalues < region0 < region1 */\n        /* (and region0, region1 are ignored) */\n        a1 = Math.min(a1, i);\n        a2 = Math.min(a2, i);\n\n        assert(a1 >= 0);\n        assert(a2 >= 0);\n\n        /* Count the number of bits necessary to code the bigvalues region. */\n        if (0 < a1) {\n            var bi = new Bits(bits);\n            gi.table_select[0] = choose_table(ix, 0, a1, bi);\n            bits = bi.bits;\n        }\n        if (a1 < a2) {\n            var bi = new Bits(bits);\n            gi.table_select[1] = choose_table(ix, a1, a2, bi);\n            bits = bi.bits;\n        }\n        if (gfc.use_best_huffman == 2) {\n            gi.part2_3_length = bits;\n            best_huffman_divide(gfc, gi);\n            bits = gi.part2_3_length;\n        }\n\n        if (prev_noise != null) {\n            if (gi.block_type == Encoder.NORM_TYPE) {\n                var sfb = 0;\n                while (gfc.scalefac_band.l[sfb] < gi.big_values) {\n                    sfb++;\n                }\n                prev_noise.sfb_count1 = sfb;\n            }\n        }\n\n        return bits;\n    }\n\n    this.count_bits = function (gfc, xr, gi, prev_noise) {\n        var ix = gi.l3_enc;\n\n        /* since quantize_xrpow uses table lookup, we need to check this first: */\n        var w = (QuantizePVT.IXMAX_VAL) / qupvt.IPOW20(gi.global_gain);\n\n        if (gi.xrpow_max > w)\n            return QuantizePVT.LARGE_BITS;\n\n        quantize_xrpow(xr, ix, qupvt.IPOW20(gi.global_gain), gi, prev_noise);\n\n        if ((gfc.substep_shaping & 2) != 0) {\n            var j = 0;\n            /* 0.634521682242439 = 0.5946*2**(.5*0.1875) */\n            var gain = gi.global_gain + gi.scalefac_scale;\n            var roundfac = 0.634521682242439 / qupvt.IPOW20(gain);\n            for (var sfb = 0; sfb < gi.sfbmax; sfb++) {\n                var width = gi.width[sfb];\n                assert(width >= 0);\n                if (0 == gfc.pseudohalf[sfb]) {\n                    j += width;\n                } else {\n                    var k;\n                    for (k = j, j += width; k < j; ++k) {\n                        ix[k] = (xr[k] >= roundfac) ? ix[k] : 0;\n                    }\n                }\n            }\n        }\n        return this.noquant_count_bits(gfc, gi, prev_noise);\n    }\n\n    /**\n     * re-calculate the best scalefac_compress using scfsi the saved bits are\n     * kept in the bit reservoir.\n     */\n    function recalc_divide_init(gfc, cod_info, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\n        var bigv = cod_info.big_values;\n\n        for (var r0 = 0; r0 <= 7 + 15; r0++) {\n            r01_bits[r0] = QuantizePVT.LARGE_BITS;\n        }\n\n        for (var r0 = 0; r0 < 16; r0++) {\n            var a1 = gfc.scalefac_band.l[r0 + 1];\n            if (a1 >= bigv)\n                break;\n            var r0bits = 0;\n            var bi = new Bits(r0bits);\n            var r0t = choose_table(ix, 0, a1, bi);\n            r0bits = bi.bits;\n\n            for (var r1 = 0; r1 < 8; r1++) {\n                var a2 = gfc.scalefac_band.l[r0 + r1 + 2];\n                if (a2 >= bigv)\n                    break;\n                var bits = r0bits;\n                bi = new Bits(bits);\n                var r1t = choose_table(ix, a1, a2, bi);\n                bits = bi.bits;\n                if (r01_bits[r0 + r1] > bits) {\n                    r01_bits[r0 + r1] = bits;\n                    r01_div[r0 + r1] = r0;\n                    r0_tbl[r0 + r1] = r0t;\n                    r1_tbl[r0 + r1] = r1t;\n                }\n            }\n        }\n    }\n\n    function recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\n        var bigv = cod_info2.big_values;\n\n        for (var r2 = 2; r2 < Encoder.SBMAX_l + 1; r2++) {\n            var a2 = gfc.scalefac_band.l[r2];\n            if (a2 >= bigv)\n                break;\n            var bits = r01_bits[r2 - 2] + cod_info2.count1bits;\n            if (gi.part2_3_length <= bits)\n                break;\n\n            var bi = new Bits(bits);\n            var r2t = choose_table(ix, a2, bigv, bi);\n            bits = bi.bits;\n            if (gi.part2_3_length <= bits)\n                continue;\n\n            gi.assign(cod_info2);\n            gi.part2_3_length = bits;\n            gi.region0_count = r01_div[r2 - 2];\n            gi.region1_count = r2 - 2 - r01_div[r2 - 2];\n            gi.table_select[0] = r0_tbl[r2 - 2];\n            gi.table_select[1] = r1_tbl[r2 - 2];\n            gi.table_select[2] = r2t;\n        }\n    }\n\n    this.best_huffman_divide = function (gfc, gi) {\n        var cod_info2 = new GrInfo();\n        var ix = gi.l3_enc;\n        var r01_bits = new_int(7 + 15 + 1);\n        var r01_div = new_int(7 + 15 + 1);\n        var r0_tbl = new_int(7 + 15 + 1);\n        var r1_tbl = new_int(7 + 15 + 1);\n\n        /* SHORT BLOCK stuff fails for MPEG2 */\n        if (gi.block_type == Encoder.SHORT_TYPE && gfc.mode_gr == 1)\n            return;\n\n        cod_info2.assign(gi);\n        if (gi.block_type == Encoder.NORM_TYPE) {\n            recalc_divide_init(gfc, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl);\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\n                r0_tbl, r1_tbl);\n        }\n        var i = cod_info2.big_values;\n        if (i == 0 || (ix[i - 2] | ix[i - 1]) > 1)\n            return;\n\n        i = gi.count1 + 2;\n        if (i > 576)\n            return;\n\n        /* Determines the number of bits to encode the quadruples. */\n        cod_info2.assign(gi);\n        cod_info2.count1 = i;\n        var a1 = 0;\n        var a2 = 0;\n\n        assert(i <= 576);\n\n        for (; i > cod_info2.big_values; i -= 4) {\n            var p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2\n                + ix[i - 1];\n            a1 += Tables.t32l[p];\n            a2 += Tables.t33l[p];\n        }\n        cod_info2.big_values = i;\n\n        cod_info2.count1table_select = 0;\n        if (a1 > a2) {\n            a1 = a2;\n            cod_info2.count1table_select = 1;\n        }\n\n        cod_info2.count1bits = a1;\n\n        if (cod_info2.block_type == Encoder.NORM_TYPE)\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\n                r0_tbl, r1_tbl);\n        else {\n            /* Count the number of bits necessary to code the bigvalues region. */\n            cod_info2.part2_3_length = a1;\n            a1 = gfc.scalefac_band.l[7 + 1];\n            if (a1 > i) {\n                a1 = i;\n            }\n            if (a1 > 0) {\n                var bi = new Bits(cod_info2.part2_3_length);\n                cod_info2.table_select[0] = choose_table(ix, 0, a1, bi);\n                cod_info2.part2_3_length = bi.bits;\n            }\n            if (i > a1) {\n                var bi = new Bits(cod_info2.part2_3_length);\n                cod_info2.table_select[1] = choose_table(ix, a1, i, bi);\n                cod_info2.part2_3_length = bi.bits;\n            }\n            if (gi.part2_3_length > cod_info2.part2_3_length)\n                gi.assign(cod_info2);\n        }\n    }\n\n    var slen1_n = [1, 1, 1, 1, 8, 2, 2, 2, 4, 4, 4, 8, 8, 8, 16, 16];\n    var slen2_n = [1, 2, 4, 8, 1, 2, 4, 8, 2, 4, 8, 2, 4, 8, 4, 8];\n    var slen1_tab = [0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4];\n    var slen2_tab = [0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3];\n    Takehiro.slen1_tab = slen1_tab;\n    Takehiro.slen2_tab = slen2_tab;\n\n    function scfsi_calc(ch, l3_side) {\n        var sfb;\n        var gi = l3_side.tt[1][ch];\n        var g0 = l3_side.tt[0][ch];\n\n        for (var i = 0; i < Tables.scfsi_band.length - 1; i++) {\n            for (sfb = Tables.scfsi_band[i]; sfb < Tables.scfsi_band[i + 1]; sfb++) {\n                if (g0.scalefac[sfb] != gi.scalefac[sfb]\n                    && gi.scalefac[sfb] >= 0)\n                    break;\n            }\n            if (sfb == Tables.scfsi_band[i + 1]) {\n                for (sfb = Tables.scfsi_band[i]; sfb < Tables.scfsi_band[i + 1]; sfb++) {\n                    gi.scalefac[sfb] = -1;\n                }\n                l3_side.scfsi[ch][i] = 1;\n            }\n        }\n        var s1 = 0;\n        var c1 = 0;\n        for (sfb = 0; sfb < 11; sfb++) {\n            if (gi.scalefac[sfb] == -1)\n                continue;\n            c1++;\n            if (s1 < gi.scalefac[sfb])\n                s1 = gi.scalefac[sfb];\n        }\n        var s2 = 0;\n        var c2 = 0;\n        for (; sfb < Encoder.SBPSY_l; sfb++) {\n            if (gi.scalefac[sfb] == -1)\n                continue;\n            c2++;\n            if (s2 < gi.scalefac[sfb])\n                s2 = gi.scalefac[sfb];\n        }\n\n        for (var i = 0; i < 16; i++) {\n            if (s1 < slen1_n[i] && s2 < slen2_n[i]) {\n                var c = slen1_tab[i] * c1 + slen2_tab[i] * c2;\n                if (gi.part2_length > c) {\n                    gi.part2_length = c;\n                    gi.scalefac_compress = i;\n                }\n            }\n        }\n    }\n\n    /**\n     * Find the optimal way to store the scalefactors. Only call this routine\n     * after final scalefactors have been chosen and the channel/granule will\n     * not be re-encoded.\n     */\n    this.best_scalefac_store = function (gfc, gr, ch, l3_side) {\n        /* use scalefac_scale if we can */\n        var gi = l3_side.tt[gr][ch];\n        var sfb, i, j, l;\n        var recalc = 0;\n\n        /*\n         * remove scalefacs from bands with ix=0. This idea comes from the AAC\n         * ISO docs. added mt 3/00\n         */\n        /* check if l3_enc=0 */\n        j = 0;\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\n            var width = gi.width[sfb];\n            assert(width >= 0);\n            j += width;\n            for (l = -width; l < 0; l++) {\n                if (gi.l3_enc[l + j] != 0)\n                    break;\n            }\n            if (l == 0)\n                gi.scalefac[sfb] = recalc = -2;\n            /* anything goes. */\n            /*\n             * only best_scalefac_store and calc_scfsi know--and only they\n             * should know--about the magic number -2.\n             */\n        }\n\n        if (0 == gi.scalefac_scale && 0 == gi.preflag) {\n            var s = 0;\n            for (sfb = 0; sfb < gi.sfbmax; sfb++)\n                if (gi.scalefac[sfb] > 0)\n                    s |= gi.scalefac[sfb];\n\n            if (0 == (s & 1) && s != 0) {\n                for (sfb = 0; sfb < gi.sfbmax; sfb++)\n                    if (gi.scalefac[sfb] > 0)\n                        gi.scalefac[sfb] >>= 1;\n\n                gi.scalefac_scale = recalc = 1;\n            }\n        }\n\n        if (0 == gi.preflag && gi.block_type != Encoder.SHORT_TYPE\n            && gfc.mode_gr == 2) {\n            for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\n                if (gi.scalefac[sfb] < qupvt.pretab[sfb]\n                    && gi.scalefac[sfb] != -2)\n                    break;\n            if (sfb == Encoder.SBPSY_l) {\n                for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\n                    if (gi.scalefac[sfb] > 0)\n                        gi.scalefac[sfb] -= qupvt.pretab[sfb];\n\n                gi.preflag = recalc = 1;\n            }\n        }\n\n        for (i = 0; i < 4; i++)\n            l3_side.scfsi[ch][i] = 0;\n\n        if (gfc.mode_gr == 2 && gr == 1\n            && l3_side.tt[0][ch].block_type != Encoder.SHORT_TYPE\n            && l3_side.tt[1][ch].block_type != Encoder.SHORT_TYPE) {\n            scfsi_calc(ch, l3_side);\n            recalc = 0;\n        }\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\n            if (gi.scalefac[sfb] == -2) {\n                gi.scalefac[sfb] = 0;\n                /* if anything goes, then 0 is a good choice */\n            }\n        }\n        if (recalc != 0) {\n            if (gfc.mode_gr == 2) {\n                this.scale_bitcount(gi);\n            } else {\n                this.scale_bitcount_lsf(gfc, gi);\n            }\n        }\n    }\n\n    function all_scalefactors_not_negative(scalefac, n) {\n        for (var i = 0; i < n; ++i) {\n            if (scalefac[i] < 0)\n                return false;\n        }\n        return true;\n    }\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 18*slen1_tab[i] + 18*slen2_tab[i]\n     */\n    var scale_short = [0, 18, 36, 54, 54, 36, 54, 72,\n        54, 72, 90, 72, 90, 108, 108, 126];\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 17*slen1_tab[i] + 18*slen2_tab[i]\n     */\n    var scale_mixed = [0, 18, 36, 54, 51, 35, 53, 71,\n        52, 70, 88, 69, 87, 105, 104, 122];\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 11*slen1_tab[i] + 10*slen2_tab[i]\n     */\n    var scale_long = [0, 10, 20, 30, 33, 21, 31, 41, 32, 42,\n        52, 43, 53, 63, 64, 74];\n\n    /**\n     * Also calculates the number of bits necessary to code the scalefactors.\n     */\n    this.scale_bitcount = function (cod_info) {\n        var k, sfb, max_slen1 = 0, max_slen2 = 0;\n\n        /* maximum values */\n        var tab;\n        var scalefac = cod_info.scalefac;\n\n        assert(all_scalefactors_not_negative(scalefac, cod_info.sfbmax));\n\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\n            tab = scale_short;\n            if (cod_info.mixed_block_flag != 0)\n                tab = scale_mixed;\n        } else { /* block_type == 1,2,or 3 */\n            tab = scale_long;\n            if (0 == cod_info.preflag) {\n                for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\n                    if (scalefac[sfb] < qupvt.pretab[sfb])\n                        break;\n\n                if (sfb == Encoder.SBPSY_l) {\n                    cod_info.preflag = 1;\n                    for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\n                        scalefac[sfb] -= qupvt.pretab[sfb];\n                }\n            }\n        }\n\n        for (sfb = 0; sfb < cod_info.sfbdivide; sfb++)\n            if (max_slen1 < scalefac[sfb])\n                max_slen1 = scalefac[sfb];\n\n        for (; sfb < cod_info.sfbmax; sfb++)\n            if (max_slen2 < scalefac[sfb])\n                max_slen2 = scalefac[sfb];\n\n        /*\n         * from Takehiro TOMINAGA <tominaga@isoternet.org> 10/99 loop over *all*\n         * posible values of scalefac_compress to find the one which uses the\n         * smallest number of bits. ISO would stop at first valid index\n         */\n        cod_info.part2_length = QuantizePVT.LARGE_BITS;\n        for (k = 0; k < 16; k++) {\n            if (max_slen1 < slen1_n[k] && max_slen2 < slen2_n[k]\n                && cod_info.part2_length > tab[k]) {\n                cod_info.part2_length = tab[k];\n                cod_info.scalefac_compress = k;\n            }\n        }\n        return cod_info.part2_length == QuantizePVT.LARGE_BITS;\n    }\n\n    /**\n     * table of largest scalefactor values for MPEG2\n     */\n    var max_range_sfac_tab = [[15, 15, 7, 7],\n        [15, 15, 7, 0], [7, 3, 0, 0], [15, 31, 31, 0],\n        [7, 7, 7, 0], [3, 3, 0, 0]];\n\n    /**\n     * Also counts the number of bits to encode the scalefacs but for MPEG 2\n     * Lower sampling frequencies (24, 22.05 and 16 kHz.)\n     *\n     * This is reverse-engineered from section 2.4.3.2 of the MPEG2 IS,\n     * \"Audio Decoding Layer III\"\n     */\n    this.scale_bitcount_lsf = function (gfc, cod_info) {\n        var table_number, row_in_table, partition, nr_sfb, window;\n        var over;\n        var i, sfb;\n        var max_sfac = new_int(4);\n//var partition_table;\n        var scalefac = cod_info.scalefac;\n\n        /*\n         * Set partition table. Note that should try to use table one, but do\n         * not yet...\n         */\n        if (cod_info.preflag != 0)\n            table_number = 2;\n        else\n            table_number = 0;\n\n        for (i = 0; i < 4; i++)\n            max_sfac[i] = 0;\n\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\n            row_in_table = 1;\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\n                nr_sfb = partition_table[partition] / 3;\n                for (i = 0; i < nr_sfb; i++, sfb++)\n                    for (window = 0; window < 3; window++)\n                        if (scalefac[sfb * 3 + window] > max_sfac[partition])\n                            max_sfac[partition] = scalefac[sfb * 3 + window];\n            }\n        } else {\n            row_in_table = 0;\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\n                nr_sfb = partition_table[partition];\n                for (i = 0; i < nr_sfb; i++, sfb++)\n                    if (scalefac[sfb] > max_sfac[partition])\n                        max_sfac[partition] = scalefac[sfb];\n            }\n        }\n\n        for (over = false, partition = 0; partition < 4; partition++) {\n            if (max_sfac[partition] > max_range_sfac_tab[table_number][partition])\n                over = true;\n        }\n        if (!over) {\n            var slen1, slen2, slen3, slen4;\n\n            cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (partition = 0; partition < 4; partition++)\n                cod_info.slen[partition] = log2tab[max_sfac[partition]];\n\n            /* set scalefac_compress */\n            slen1 = cod_info.slen[0];\n            slen2 = cod_info.slen[1];\n            slen3 = cod_info.slen[2];\n            slen4 = cod_info.slen[3];\n\n            switch (table_number) {\n                case 0:\n                    cod_info.scalefac_compress = (((slen1 * 5) + slen2) << 4)\n                        + (slen3 << 2) + slen4;\n                    break;\n\n                case 1:\n                    cod_info.scalefac_compress = 400 + (((slen1 * 5) + slen2) << 2)\n                        + slen3;\n                    break;\n\n                case 2:\n                    cod_info.scalefac_compress = 500 + (slen1 * 3) + slen2;\n                    break;\n\n                default:\n                    System.err.printf(\"intensity stereo not implemented yet\\n\");\n                    break;\n            }\n        }\n        if (!over) {\n            assert(cod_info.sfb_partition_table != null);\n            cod_info.part2_length = 0;\n            for (partition = 0; partition < 4; partition++)\n                cod_info.part2_length += cod_info.slen[partition]\n                    * cod_info.sfb_partition_table[partition];\n        }\n        return over;\n    }\n\n    /*\n     * Since no bands have been over-amplified, we can set scalefac_compress and\n     * slen[] for the formatter\n     */\n    var log2tab = [0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,\n        4, 4, 4, 4];\n\n    this.huffman_init = function (gfc) {\n        for (var i = 2; i <= 576; i += 2) {\n            var scfb_anz = 0, bv_index;\n            while (gfc.scalefac_band.l[++scfb_anz] < i)\n                ;\n\n            bv_index = subdv_table[scfb_anz][0]; // .region0_count\n            while (gfc.scalefac_band.l[bv_index + 1] > i)\n                bv_index--;\n\n            if (bv_index < 0) {\n                /*\n                 * this is an indication that everything is going to be encoded\n                 * as region0: bigvalues < region0 < region1 so lets set\n                 * region0, region1 to some value larger than bigvalues\n                 */\n                bv_index = subdv_table[scfb_anz][0]; // .region0_count\n            }\n\n            gfc.bv_scf[i - 2] = bv_index;\n\n            bv_index = subdv_table[scfb_anz][1]; // .region1_count\n            while (gfc.scalefac_band.l[bv_index + gfc.bv_scf[i - 2] + 2] > i)\n                bv_index--;\n\n            if (bv_index < 0) {\n                bv_index = subdv_table[scfb_anz][1]; // .region1_count\n            }\n\n            gfc.bv_scf[i - 1] = bv_index;\n        }\n    }\n}\n\nmodule.exports = Takehiro;\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nLame = require('./Lame.js');\nPresets = require('./Presets.js');\nGainAnalysis = require('./GainAnalysis.js');\nQuantizePVT = require('./QuantizePVT.js');\nQuantize = require('./Quantize.js');\nTakehiro = require('./Takehiro.js');\nReservoir = require('./Reservoir.js');\nMPEGMode = require('./MPEGMode.js');\nBitStream = require('./BitStream.js');\nvar Encoder = require('./Encoder.js');\nvar Version = require('./Version.js');\nvar VBRTag = require('./VBRTag.js');\n\nfunction GetAudio() {\n    var parse;\n    var mpg;\n\n    this.setModules = function (parse2, mpg2) {\n        parse = parse2;\n        mpg = mpg2;\n    }\n}\n\n\nfunction Parse() {\n    var ver;\n    var id3;\n    var pre;\n\n    this.setModules = function (ver2, id32, pre2) {\n        ver = ver2;\n        id3 = id32;\n        pre = pre2;\n    }\n}\n\nfunction MPGLib() {\n}\n\nfunction ID3Tag() {\n    var bits;\n    var ver;\n\n    this.setModules = function (_bits, _ver) {\n        bits = _bits;\n        ver = _ver;\n    }\n}\n\nfunction Mp3Encoder(channels, samplerate, kbps) {\n    if (arguments.length != 3) {\n        console.error('WARN: Mp3Encoder(channels, samplerate, kbps) not specified');\n        channels = 1;\n        samplerate = 44100;\n        kbps = 128;\n    }\n    var lame = new Lame();\n    var gaud = new GetAudio();\n    var ga = new GainAnalysis();\n    var bs = new BitStream();\n    var p = new Presets();\n    var qupvt = new QuantizePVT();\n    var qu = new Quantize();\n    var vbr = new VBRTag();\n    var ver = new Version();\n    var id3 = new ID3Tag();\n    var rv = new Reservoir();\n    var tak = new Takehiro();\n    var parse = new Parse();\n    var mpg = new MPGLib();\n\n    lame.setModules(ga, bs, p, qupvt, qu, vbr, ver, id3, mpg);\n    bs.setModules(ga, mpg, ver, vbr);\n    id3.setModules(bs, ver);\n    p.setModules(lame);\n    qu.setModules(bs, rv, qupvt, tak);\n    qupvt.setModules(tak, rv, lame.enc.psy);\n    rv.setModules(bs);\n    tak.setModules(qupvt);\n    vbr.setModules(lame, bs, ver);\n    gaud.setModules(parse, mpg);\n    parse.setModules(ver, id3, p);\n\n    var gfp = lame.lame_init();\n\n    gfp.num_channels = channels;\n    gfp.in_samplerate = samplerate;\n    gfp.brate = kbps;\n    gfp.mode = MPEGMode.STEREO;\n    gfp.quality = 3;\n    gfp.bWriteVbrTag = false;\n    gfp.disable_reservoir = true;\n    gfp.write_id3tag_automatic = false;\n\n    var retcode = lame.lame_init_params(gfp);\n    assert(0 == retcode);\n    var maxSamples = 1152;\n    var mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n    var mp3buf = new_byte(mp3buf_size);\n\n    this.encodeBuffer = function (left, right) {\n        if (channels == 1) {\n            right = left;\n        }\n        assert(left.length == right.length);\n        if (left.length > maxSamples) {\n            maxSamples = left.length;\n            mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n            mp3buf = new_byte(mp3buf_size);\n        }\n\n        var _sz = lame.lame_encode_buffer(gfp, left, right, left.length, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n\n    this.flush = function () {\n        var _sz = lame.lame_encode_flush(gfp, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n}\n\nfunction WavHeader() {\n    this.dataOffset = 0;\n    this.dataLen = 0;\n    this.channels = 0;\n    this.sampleRate = 0;\n}\n\nfunction fourccToInt(fourcc) {\n    return fourcc.charCodeAt(0) << 24 | fourcc.charCodeAt(1) << 16 | fourcc.charCodeAt(2) << 8 | fourcc.charCodeAt(3);\n}\n\nWavHeader.RIFF = fourccToInt(\"RIFF\");\nWavHeader.WAVE = fourccToInt(\"WAVE\");\nWavHeader.fmt_ = fourccToInt(\"fmt \");\nWavHeader.data = fourccToInt(\"data\");\n\nWavHeader.readHeader = function (dataView) {\n    var w = new WavHeader();\n\n    var header = dataView.getUint32(0, false);\n    if (WavHeader.RIFF != header) {\n        return;\n    }\n    var fileLen = dataView.getUint32(4, true);\n    if (WavHeader.WAVE != dataView.getUint32(8, false)) {\n        return;\n    }\n    if (WavHeader.fmt_ != dataView.getUint32(12, false)) {\n        return;\n    }\n    var fmtLen = dataView.getUint32(16, true);\n    var pos = 16 + 4;\n    switch (fmtLen) {\n        case 16:\n        case 18:\n            w.channels = dataView.getUint16(pos + 2, true);\n            w.sampleRate = dataView.getUint32(pos + 4, true);\n            break;\n        default:\n            throw 'extended fmt chunk not implemented';\n    }\n    pos += fmtLen;\n    var data = WavHeader.data;\n    var len = 0;\n    while (data != header) {\n        header = dataView.getUint32(pos, false);\n        len = dataView.getUint32(pos + 4, true);\n        if (data == header) {\n            break;\n        }\n        pos += (len + 8);\n    }\n    w.dataLen = len;\n    w.dataOffset = pos + 8;\n    return w;\n};\n\nmodule.exports.Mp3Encoder = Mp3Encoder;\nmodule.exports.WavHeader = WavHeader;\n","/*\n * MP3 quantization\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *      Copyright (c) 1999-2003 Takehiro Tominaga\n *      Copyright (c) 2000-2007 Robert Hegemann\n *      Copyright (c) 2001-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.     See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Quantize.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar VBRQuantize = require('./VBRQuantize.js');\nvar CalcNoiseResult = require('./CalcNoiseResult.js');\nvar CalcNoiseData = require('./CalcNoiseData.js');\nvar Encoder = require('./Encoder.js');\nvar GrInfo = require('./GrInfo.js');\nvar L3Side = require('./L3Side.js');\n\nfunction Quantize() {\n    var bs;\n    this.rv = null;\n    var rv;\n    this.qupvt = null;\n    var qupvt;\n\n    var vbr = new VBRQuantize();\n    var tk;\n\n    this.setModules = function (_bs, _rv, _qupvt, _tk) {\n        bs = _bs;\n        rv = _rv;\n        this.rv = _rv;\n        qupvt = _qupvt;\n        this.qupvt = _qupvt;\n        tk = _tk;\n        vbr.setModules(qupvt, tk);\n    }\n\n    /**\n     * convert from L/R <. Mid/Side\n     */\n    this.ms_convert = function (l3_side, gr) {\n        for (var i = 0; i < 576; ++i) {\n            var l = l3_side.tt[gr][0].xr[i];\n            var r = l3_side.tt[gr][1].xr[i];\n            l3_side.tt[gr][0].xr[i] = (l + r) * (Util.SQRT2 * 0.5);\n            l3_side.tt[gr][1].xr[i] = (l - r) * (Util.SQRT2 * 0.5);\n        }\n    };\n\n    /**\n     * mt 6/99\n     *\n     * initializes cod_info, scalefac and xrpow\n     *\n     * returns 0 if all energies in xr are zero, else 1\n     */\n    function init_xrpow_core(cod_info, xrpow, upper, sum) {\n        sum = 0;\n        for (var i = 0; i <= upper; ++i) {\n            var tmp = Math.abs(cod_info.xr[i]);\n            sum += tmp;\n            xrpow[i] = Math.sqrt(tmp * Math.sqrt(tmp));\n\n            if (xrpow[i] > cod_info.xrpow_max)\n                cod_info.xrpow_max = xrpow[i];\n        }\n        return sum;\n    }\n\n    this.init_xrpow = function (gfc, cod_info, xrpow) {\n        var sum = 0;\n        var upper = 0 | cod_info.max_nonzero_coeff;\n\n        assert(xrpow != null);\n        cod_info.xrpow_max = 0;\n\n        /*\n         * check if there is some energy we have to quantize and calculate xrpow\n         * matching our fresh scalefactors\n         */\n        assert(0 <= upper && upper <= 575);\n\n        Arrays.fill(xrpow, upper, 576, 0);\n\n        sum = init_xrpow_core(cod_info, xrpow, upper, sum);\n\n        /*\n         * return 1 if we have something to quantize, else 0\n         */\n        if (sum > 1E-20) {\n            var j = 0;\n            if ((gfc.substep_shaping & 2) != 0)\n                j = 1;\n\n            for (var i = 0; i < cod_info.psymax; i++)\n                gfc.pseudohalf[i] = j;\n\n            return true;\n        }\n\n        Arrays.fill(cod_info.l3_enc, 0, 576, 0);\n        return false;\n    }\n\n    /**\n     * Gabriel Bouvigne feb/apr 2003<BR>\n     * Analog silence detection in partitionned sfb21 or sfb12 for short blocks\n     *\n     * From top to bottom of sfb, changes to 0 coeffs which are below ath. It\n     * stops on the first coeff higher than ath.\n     */\n    function psfb21_analogsilence(gfc, cod_info) {\n        var ath = gfc.ATH;\n        var xr = cod_info.xr;\n\n        if (cod_info.block_type != Encoder.SHORT_TYPE) {\n            /* NORM, START or STOP type, but not SHORT blocks */\n            var stop = false;\n            for (var gsfb = Encoder.PSFB21 - 1; gsfb >= 0 && !stop; gsfb--) {\n                var start = gfc.scalefac_band.psfb21[gsfb];\n                var end = gfc.scalefac_band.psfb21[gsfb + 1];\n                var ath21 = qupvt.athAdjust(ath.adjust, ath.psfb21[gsfb],\n                    ath.floor);\n\n                if (gfc.nsPsy.longfact[21] > 1e-12)\n                    ath21 *= gfc.nsPsy.longfact[21];\n\n                for (var j = end - 1; j >= start; j--) {\n                    if (Math.abs(xr[j]) < ath21)\n                        xr[j] = 0;\n                    else {\n                        stop = true;\n                        break;\n                    }\n                }\n            }\n        } else {\n            /* note: short blocks coeffs are reordered */\n            for (var block = 0; block < 3; block++) {\n                var stop = false;\n                for (var gsfb = Encoder.PSFB12 - 1; gsfb >= 0 && !stop; gsfb--) {\n                    var start = gfc.scalefac_band.s[12]\n                        * 3\n                        + (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\n                        * block\n                        + (gfc.scalefac_band.psfb12[gsfb] - gfc.scalefac_band.psfb12[0]);\n                    var end = start\n                        + (gfc.scalefac_band.psfb12[gsfb + 1] - gfc.scalefac_band.psfb12[gsfb]);\n                    var ath12 = qupvt.athAdjust(ath.adjust, ath.psfb12[gsfb],\n                        ath.floor);\n\n                    if (gfc.nsPsy.shortfact[12] > 1e-12)\n                        ath12 *= gfc.nsPsy.shortfact[12];\n\n                    for (var j = end - 1; j >= start; j--) {\n                        if (Math.abs(xr[j]) < ath12)\n                            xr[j] = 0;\n                        else {\n                            stop = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n    }\n\n    this.init_outer_loop = function (gfc, cod_info) {\n        /*\n         * initialize fresh cod_info\n         */\n        cod_info.part2_3_length = 0;\n        cod_info.big_values = 0;\n        cod_info.count1 = 0;\n        cod_info.global_gain = 210;\n        cod_info.scalefac_compress = 0;\n        /* mixed_block_flag, block_type was set in psymodel.c */\n        cod_info.table_select[0] = 0;\n        cod_info.table_select[1] = 0;\n        cod_info.table_select[2] = 0;\n        cod_info.subblock_gain[0] = 0;\n        cod_info.subblock_gain[1] = 0;\n        cod_info.subblock_gain[2] = 0;\n        cod_info.subblock_gain[3] = 0;\n        /* this one is always 0 */\n        cod_info.region0_count = 0;\n        cod_info.region1_count = 0;\n        cod_info.preflag = 0;\n        cod_info.scalefac_scale = 0;\n        cod_info.count1table_select = 0;\n        cod_info.part2_length = 0;\n        cod_info.sfb_lmax = Encoder.SBPSY_l;\n        cod_info.sfb_smin = Encoder.SBPSY_s;\n        cod_info.psy_lmax = gfc.sfb21_extra ? Encoder.SBMAX_l : Encoder.SBPSY_l;\n        cod_info.psymax = cod_info.psy_lmax;\n        cod_info.sfbmax = cod_info.sfb_lmax;\n        cod_info.sfbdivide = 11;\n        for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\n            cod_info.width[sfb] = gfc.scalefac_band.l[sfb + 1]\n                - gfc.scalefac_band.l[sfb];\n            /* which is always 0. */\n            cod_info.window[sfb] = 3;\n        }\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\n            var ixwork = new_float(576);\n\n            cod_info.sfb_smin = 0;\n            cod_info.sfb_lmax = 0;\n            if (cod_info.mixed_block_flag != 0) {\n                /*\n                 * MPEG-1: sfbs 0-7 long block, 3-12 short blocks MPEG-2(.5):\n                 * sfbs 0-5 long block, 3-12 short blocks\n                 */\n                cod_info.sfb_smin = 3;\n                cod_info.sfb_lmax = gfc.mode_gr * 2 + 4;\n            }\n            cod_info.psymax = cod_info.sfb_lmax\n                + 3\n                * ((gfc.sfb21_extra ? Encoder.SBMAX_s : Encoder.SBPSY_s) - cod_info.sfb_smin);\n            cod_info.sfbmax = cod_info.sfb_lmax + 3\n                * (Encoder.SBPSY_s - cod_info.sfb_smin);\n            cod_info.sfbdivide = cod_info.sfbmax - 18;\n            cod_info.psy_lmax = cod_info.sfb_lmax;\n            /* re-order the short blocks, for more efficient encoding below */\n            /* By Takehiro TOMINAGA */\n            /*\n             * Within each scalefactor band, data is given for successive time\n             * windows, beginning with window 0 and ending with window 2. Within\n             * each window, the quantized values are then arranged in order of\n             * increasing frequency...\n             */\n            var ix = gfc.scalefac_band.l[cod_info.sfb_lmax];\n            System.arraycopy(cod_info.xr, 0, ixwork, 0, 576);\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\n                var start = gfc.scalefac_band.s[sfb];\n                var end = gfc.scalefac_band.s[sfb + 1];\n                for (var window = 0; window < 3; window++) {\n                    for (var l = start; l < end; l++) {\n                        cod_info.xr[ix++] = ixwork[3 * l + window];\n                    }\n                }\n            }\n\n            var j = cod_info.sfb_lmax;\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\n                cod_info.width[j] = cod_info.width[j + 1] = cod_info.width[j + 2] = gfc.scalefac_band.s[sfb + 1]\n                    - gfc.scalefac_band.s[sfb];\n                cod_info.window[j] = 0;\n                cod_info.window[j + 1] = 1;\n                cod_info.window[j + 2] = 2;\n                j += 3;\n            }\n        }\n\n        cod_info.count1bits = 0;\n        cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[0][0];\n        cod_info.slen[0] = 0;\n        cod_info.slen[1] = 0;\n        cod_info.slen[2] = 0;\n        cod_info.slen[3] = 0;\n\n        cod_info.max_nonzero_coeff = 575;\n\n        /*\n         * fresh scalefactors are all zero\n         */\n        Arrays.fill(cod_info.scalefac, 0);\n\n        psfb21_analogsilence(gfc, cod_info);\n    };\n\n    function BinSearchDirection(ordinal) {\n        this.ordinal = ordinal;\n    }\n\n    BinSearchDirection.BINSEARCH_NONE = new BinSearchDirection(0);\n    BinSearchDirection.BINSEARCH_UP = new BinSearchDirection(1);\n    BinSearchDirection.BINSEARCH_DOWN = new BinSearchDirection(2);\n\n    /**\n     * author/date??\n     *\n     * binary step size search used by outer_loop to get a quantizer step size\n     * to start with\n     */\n    function bin_search_StepSize(gfc, cod_info, desired_rate, ch, xrpow) {\n        var nBits;\n        var CurrentStep = gfc.CurrentStep[ch];\n        var flagGoneOver = false;\n        var start = gfc.OldValue[ch];\n        var Direction = BinSearchDirection.BINSEARCH_NONE;\n        cod_info.global_gain = start;\n        desired_rate -= cod_info.part2_length;\n\n        assert(CurrentStep != 0);\n        for (; ;) {\n            var step;\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\n\n            if (CurrentStep == 1 || nBits == desired_rate)\n                break;\n            /* nothing to adjust anymore */\n\n            if (nBits > desired_rate) {\n                /* increase Quantize_StepSize */\n                if (Direction == BinSearchDirection.BINSEARCH_DOWN)\n                    flagGoneOver = true;\n\n                if (flagGoneOver)\n                    CurrentStep /= 2;\n                Direction = BinSearchDirection.BINSEARCH_UP;\n                step = CurrentStep;\n            } else {\n                /* decrease Quantize_StepSize */\n                if (Direction == BinSearchDirection.BINSEARCH_UP)\n                    flagGoneOver = true;\n\n                if (flagGoneOver)\n                    CurrentStep /= 2;\n                Direction = BinSearchDirection.BINSEARCH_DOWN;\n                step = -CurrentStep;\n            }\n            cod_info.global_gain += step;\n            if (cod_info.global_gain < 0) {\n                cod_info.global_gain = 0;\n                flagGoneOver = true;\n            }\n            if (cod_info.global_gain > 255) {\n                cod_info.global_gain = 255;\n                flagGoneOver = true;\n            }\n        }\n\n        assert(cod_info.global_gain >= 0);\n        assert(cod_info.global_gain < 256);\n\n        while (nBits > desired_rate && cod_info.global_gain < 255) {\n            cod_info.global_gain++;\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\n        }\n        gfc.CurrentStep[ch] = (start - cod_info.global_gain >= 4) ? 4 : 2;\n        gfc.OldValue[ch] = cod_info.global_gain;\n        cod_info.part2_3_length = nBits;\n        return nBits;\n    }\n\n    this.trancate_smallspectrums = function (gfc, gi, l3_xmin, work) {\n        var distort = new_float(L3Side.SFBMAX);\n\n        if ((0 == (gfc.substep_shaping & 4) && gi.block_type == Encoder.SHORT_TYPE)\n            || (gfc.substep_shaping & 0x80) != 0)\n            return;\n        qupvt.calc_noise(gi, l3_xmin, distort, new CalcNoiseResult(), null);\n        for (var j = 0; j < 576; j++) {\n            var xr = 0.0;\n            if (gi.l3_enc[j] != 0)\n                xr = Math.abs(gi.xr[j]);\n            work[j] = xr;\n        }\n\n        var j = 0;\n        var sfb = 8;\n        if (gi.block_type == Encoder.SHORT_TYPE)\n            sfb = 6;\n        do {\n            var allowedNoise, trancateThreshold;\n            var nsame, start;\n\n            var width = gi.width[sfb];\n            j += width;\n            if (distort[sfb] >= 1.0)\n                continue;\n\n            Arrays.sort(work, j - width, width);\n            if (BitStream.EQ(work[j - 1], 0.0))\n                continue;\n            /* all zero sfb */\n\n            allowedNoise = (1.0 - distort[sfb]) * l3_xmin[sfb];\n            trancateThreshold = 0.0;\n            start = 0;\n            do {\n                var noise;\n                for (nsame = 1; start + nsame < width; nsame++)\n                    if (BitStream.NEQ(work[start + j - width], work[start + j\n                        + nsame - width]))\n                        break;\n\n                noise = work[start + j - width] * work[start + j - width]\n                    * nsame;\n                if (allowedNoise < noise) {\n                    if (start != 0)\n                        trancateThreshold = work[start + j - width - 1];\n                    break;\n                }\n                allowedNoise -= noise;\n                start += nsame;\n            } while (start < width);\n            if (BitStream.EQ(trancateThreshold, 0.0))\n                continue;\n\n            do {\n                if (Math.abs(gi.xr[j - width]) <= trancateThreshold)\n                    gi.l3_enc[j - width] = 0;\n            } while (--width > 0);\n        } while (++sfb < gi.psymax);\n\n        gi.part2_3_length = tk.noquant_count_bits(gfc, gi, null);\n    };\n\n    /**\n     * author/date??\n     *\n     * Function: Returns zero if there is a scalefac which has not been\n     * amplified. Otherwise it returns one.\n     */\n    function loop_break(cod_info) {\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++)\n            if (cod_info.scalefac[sfb]\n                + cod_info.subblock_gain[cod_info.window[sfb]] == 0)\n                return false;\n\n        return true;\n    }\n\n    /* mt 5/99: Function: Improved calc_noise for a single channel */\n\n    function penalties(noise) {\n        return Util.FAST_LOG10((0.368 + 0.632 * noise * noise * noise));\n    }\n\n    /**\n     * author/date??\n     *\n     * several different codes to decide which quantization is better\n     */\n    function get_klemm_noise(distort, gi) {\n        var klemm_noise = 1E-37;\n        for (var sfb = 0; sfb < gi.psymax; sfb++)\n            klemm_noise += penalties(distort[sfb]);\n\n        return Math.max(1e-20, klemm_noise);\n    }\n\n    function quant_compare(quant_comp, best, calc, gi, distort) {\n        /**\n         * noise is given in decibels (dB) relative to masking thesholds.<BR>\n         *\n         * over_noise: ??? (the previous comment is fully wrong)<BR>\n         * tot_noise: ??? (the previous comment is fully wrong)<BR>\n         * max_noise: max quantization noise\n         */\n        var better;\n\n        switch (quant_comp) {\n            default:\n            case 9:\n            {\n                if (best.over_count > 0) {\n                    /* there are distorted sfb */\n                    better = calc.over_SSD <= best.over_SSD;\n                    if (calc.over_SSD == best.over_SSD)\n                        better = calc.bits < best.bits;\n                } else {\n                    /* no distorted sfb */\n                    better = ((calc.max_noise < 0) && ((calc.max_noise * 10 + calc.bits) <= (best.max_noise * 10 + best.bits)));\n                }\n                break;\n            }\n\n            case 0:\n                better = calc.over_count < best.over_count\n                    || (calc.over_count == best.over_count && calc.over_noise < best.over_noise)\n                    || (calc.over_count == best.over_count\n                    && BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\n                break;\n\n            case 8:\n                calc.max_noise = get_klemm_noise(distort, gi);\n            //$FALL-THROUGH$\n            case 1:\n                better = calc.max_noise < best.max_noise;\n                break;\n            case 2:\n                better = calc.tot_noise < best.tot_noise;\n                break;\n            case 3:\n                better = (calc.tot_noise < best.tot_noise)\n                    && (calc.max_noise < best.max_noise);\n                break;\n            case 4:\n                better = (calc.max_noise <= 0.0 && best.max_noise > 0.2)\n                    || (calc.max_noise <= 0.0 && best.max_noise < 0.0\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise)\n                    || (calc.max_noise <= 0.0 && best.max_noise > 0.0\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise\n                    + best.over_noise)\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.05\n                    && best.max_noise > calc.max_noise - 0.1 && calc.tot_noise\n                    + calc.over_noise < best.tot_noise\n                    + best.over_noise)\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.1\n                    && best.max_noise > calc.max_noise - 0.15 && calc.tot_noise\n                    + calc.over_noise + calc.over_noise < best.tot_noise\n                    + best.over_noise + best.over_noise);\n                break;\n            case 5:\n                better = calc.over_noise < best.over_noise\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\n                break;\n            case 6:\n                better = calc.over_noise < best.over_noise\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && (calc.max_noise < best.max_noise || (BitStream\n                        .EQ(calc.max_noise, best.max_noise) && calc.tot_noise <= best.tot_noise)));\n                break;\n            case 7:\n                better = calc.over_count < best.over_count\n                    || calc.over_noise < best.over_noise;\n                break;\n        }\n\n        if (best.over_count == 0) {\n            /*\n             * If no distorted bands, only use this quantization if it is\n             * better, and if it uses less bits. Unfortunately, part2_3_length\n             * is sometimes a poor estimator of the final size at low bitrates.\n             */\n            better = better && calc.bits < best.bits;\n        }\n\n        return better;\n    }\n\n    /**\n     * author/date??\n     *\n     * <PRE>\n     *  Amplify the scalefactor bands that violate the masking threshold.\n     *  See ISO 11172-3 Section C.1.5.4.3.5\n     *\n     *  distort[] = noise/masking\n     *  distort[] > 1   ==> noise is not masked\n     *  distort[] < 1   ==> noise is masked\n     *  max_dist = maximum value of distort[]\n     *\n     *  Three algorithms:\n     *  noise_shaping_amp\n     *        0             Amplify all bands with distort[]>1.\n     *\n     *        1             Amplify all bands with distort[] >= max_dist^(.5);\n     *                     ( 50% in the db scale)\n     *\n     *        2             Amplify first band with distort[] >= max_dist;\n     *\n     *\n     *  For algorithms 0 and 1, if max_dist < 1, then amplify all bands\n     *  with distort[] >= .95*max_dist.  This is to make sure we always\n     *  amplify at least one band.\n     * </PRE>\n     */\n    function amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine) {\n        var gfc = gfp.internal_flags;\n        var ifqstep34;\n\n        if (cod_info.scalefac_scale == 0) {\n            ifqstep34 = 1.29683955465100964055;\n            /* 2**(.75*.5) */\n        } else {\n            ifqstep34 = 1.68179283050742922612;\n            /* 2**(.75*1) */\n        }\n\n        /* compute maximum value of distort[] */\n        var trigger = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            if (trigger < distort[sfb])\n                trigger = distort[sfb];\n        }\n\n        var noise_shaping_amp = gfc.noise_shaping_amp;\n        if (noise_shaping_amp == 3) {\n            if (bRefine)\n                noise_shaping_amp = 2;\n            else\n                noise_shaping_amp = 1;\n        }\n        switch (noise_shaping_amp) {\n            case 2:\n                /* amplify exactly 1 band */\n                break;\n\n            case 1:\n                /* amplify bands within 50% of max (on db scale) */\n                if (trigger > 1.0)\n                    trigger = Math.pow(trigger, .5);\n                else\n                    trigger *= .95;\n                break;\n\n            case 0:\n            default:\n                /* ISO algorithm. amplify all bands with distort>1 */\n                if (trigger > 1.0)\n                    trigger = 1.0;\n                else\n                    trigger *= .95;\n                break;\n        }\n\n        var j = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            var width = cod_info.width[sfb];\n            var l;\n            j += width;\n            if (distort[sfb] < trigger)\n                continue;\n\n            if ((gfc.substep_shaping & 2) != 0) {\n                gfc.pseudohalf[sfb] = (0 == gfc.pseudohalf[sfb]) ? 1 : 0;\n                if (0 == gfc.pseudohalf[sfb] && gfc.noise_shaping_amp == 2)\n                    return;\n            }\n            cod_info.scalefac[sfb]++;\n            for (l = -width; l < 0; l++) {\n                xrpow[j + l] *= ifqstep34;\n                if (xrpow[j + l] > cod_info.xrpow_max)\n                    cod_info.xrpow_max = xrpow[j + l];\n            }\n\n            if (gfc.noise_shaping_amp == 2)\n                return;\n        }\n    }\n\n    /**\n     * Takehiro Tominaga 2000-xx-xx\n     *\n     * turns on scalefac scale and adjusts scalefactors\n     */\n    function inc_scalefac_scale(cod_info, xrpow) {\n        var ifqstep34 = 1.29683955465100964055;\n\n        var j = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            var width = cod_info.width[sfb];\n            var s = cod_info.scalefac[sfb];\n            if (cod_info.preflag != 0)\n                s += qupvt.pretab[sfb];\n            j += width;\n            if ((s & 1) != 0) {\n                s++;\n                for (var l = -width; l < 0; l++) {\n                    xrpow[j + l] *= ifqstep34;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n            }\n            cod_info.scalefac[sfb] = s >> 1;\n        }\n        cod_info.preflag = 0;\n        cod_info.scalefac_scale = 1;\n    }\n\n    /**\n     * Takehiro Tominaga 2000-xx-xx\n     *\n     * increases the subblock gain and adjusts scalefactors\n     */\n    function inc_subblock_gain(gfc, cod_info, xrpow) {\n        var sfb;\n        var scalefac = cod_info.scalefac;\n\n        /* subbloc_gain can't do anything in the long block region */\n        for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\n            if (scalefac[sfb] >= 16)\n                return true;\n        }\n\n        for (var window = 0; window < 3; window++) {\n            var s1 = 0;\n            var s2 = 0;\n\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbdivide; sfb += 3) {\n                if (s1 < scalefac[sfb])\n                    s1 = scalefac[sfb];\n            }\n            for (; sfb < cod_info.sfbmax; sfb += 3) {\n                if (s2 < scalefac[sfb])\n                    s2 = scalefac[sfb];\n            }\n\n            if (s1 < 16 && s2 < 8)\n                continue;\n\n            if (cod_info.subblock_gain[window] >= 7)\n                return true;\n\n            /*\n             * even though there is no scalefactor for sfb12 subblock gain\n             * affects upper frequencies too, that's why we have to go up to\n             * SBMAX_s\n             */\n            cod_info.subblock_gain[window]++;\n            var j = gfc.scalefac_band.l[cod_info.sfb_lmax];\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbmax; sfb += 3) {\n                var amp;\n                var width = cod_info.width[sfb];\n                var s = scalefac[sfb];\n                assert(s >= 0);\n                s = s - (4 >> cod_info.scalefac_scale);\n                if (s >= 0) {\n                    scalefac[sfb] = s;\n                    j += width * 3;\n                    continue;\n                }\n\n                scalefac[sfb] = 0;\n                {\n                    var gain = 210 + (s << (cod_info.scalefac_scale + 1));\n                    amp = qupvt.IPOW20(gain);\n                }\n                j += width * (window + 1);\n                for (var l = -width; l < 0; l++) {\n                    xrpow[j + l] *= amp;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n                j += width * (3 - window - 1);\n            }\n\n            {\n                var amp = qupvt.IPOW20(202);\n                j += cod_info.width[sfb] * (window + 1);\n                for (var l = -cod_info.width[sfb]; l < 0; l++) {\n                    xrpow[j + l] *= amp;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * <PRE>\n     *  Takehiro Tominaga /date??\n     *  Robert Hegemann 2000-09-06: made a function of it\n     *\n     *  amplifies scalefactor bands,\n     *   - if all are already amplified returns 0\n     *   - if some bands are amplified too much:\n     *      * try to increase scalefac_scale\n     *      * if already scalefac_scale was set\n     *          try on short blocks to increase subblock gain\n     * </PRE>\n     */\n    function balance_noise(gfp, cod_info, distort, xrpow, bRefine) {\n        var gfc = gfp.internal_flags;\n\n        amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine);\n\n        /*\n         * check to make sure we have not amplified too much loop_break returns\n         * 0 if there is an unamplified scalefac scale_bitcount returns 0 if no\n         * scalefactors are too large\n         */\n\n        var status = loop_break(cod_info);\n\n        if (status)\n            return false;\n        /* all bands amplified */\n\n        /*\n         * not all scalefactors have been amplified. so these scalefacs are\n         * possibly valid. encode them:\n         */\n        if (gfc.mode_gr == 2)\n            status = tk.scale_bitcount(cod_info);\n        else\n            status = tk.scale_bitcount_lsf(gfc, cod_info);\n\n        if (!status)\n            return true;\n        /* amplified some bands not exceeding limits */\n\n        /*\n         * some scalefactors are too large. lets try setting scalefac_scale=1\n         */\n        if (gfc.noise_shaping > 1) {\n            Arrays.fill(gfc.pseudohalf, 0);\n            if (0 == cod_info.scalefac_scale) {\n                inc_scalefac_scale(cod_info, xrpow);\n                status = false;\n            } else {\n                if (cod_info.block_type == Encoder.SHORT_TYPE\n                    && gfc.subblock_gain > 0) {\n                    status = (inc_subblock_gain(gfc, cod_info, xrpow) || loop_break(cod_info));\n                }\n            }\n        }\n\n        if (!status) {\n            if (gfc.mode_gr == 2)\n                status = tk.scale_bitcount(cod_info);\n            else\n                status = tk.scale_bitcount_lsf(gfc, cod_info);\n        }\n        return !status;\n    }\n\n    /**\n     * <PRE>\n     *  Function: The outer iteration loop controls the masking conditions\n     *  of all scalefactorbands. It computes the best scalefac and\n     *  global gain. This module calls the inner iteration loop\n     *\n     *  mt 5/99 completely rewritten to allow for bit reservoir control,\n     *  mid/side channels with L/R or mid/side masking thresholds,\n     *  and chooses best quantization instead of last quantization when\n     *  no distortion free quantization can be found.\n     *\n     *  added VBR support mt 5/99\n     *\n     *  some code shuffle rh 9/00\n     * </PRE>\n     *\n     * @param l3_xmin\n     *            allowed distortion\n     * @param xrpow\n     *            coloured magnitudes of spectral\n     * @param targ_bits\n     *            maximum allowed bits\n     */\n    this.outer_loop = function (gfp, cod_info, l3_xmin, xrpow, ch, targ_bits) {\n        var gfc = gfp.internal_flags;\n        var cod_info_w = new GrInfo();\n        var save_xrpow = new_float(576);\n        var distort = new_float(L3Side.SFBMAX);\n        var best_noise_info = new CalcNoiseResult();\n        var better;\n        var prev_noise = new CalcNoiseData();\n        var best_part2_3_length = 9999999;\n        var bEndOfSearch = false;\n        var bRefine = false;\n        var best_ggain_pass1 = 0;\n\n        bin_search_StepSize(gfc, cod_info, targ_bits, ch, xrpow);\n\n        if (0 == gfc.noise_shaping)\n        /* fast mode, no noise shaping, we are ready */\n            return 100;\n        /* default noise_info.over_count */\n\n        /* compute the distortion in this quantization */\n        /* coefficients and thresholds both l/r (or both mid/side) */\n        qupvt.calc_noise(cod_info, l3_xmin, distort, best_noise_info,\n            prev_noise);\n        best_noise_info.bits = cod_info.part2_3_length;\n\n        cod_info_w.assign(cod_info);\n        var age = 0;\n        System.arraycopy(xrpow, 0, save_xrpow, 0, 576);\n\n        while (!bEndOfSearch) {\n            /* BEGIN MAIN LOOP */\n            do {\n                var noise_info = new CalcNoiseResult();\n                var search_limit;\n                var maxggain = 255;\n\n                /*\n                 * When quantization with no distorted bands is found, allow up\n                 * to X new unsuccesful tries in serial. This gives us more\n                 * possibilities for different quant_compare modes. Much more\n                 * than 3 makes not a big difference, it is only slower.\n                 */\n\n                if ((gfc.substep_shaping & 2) != 0) {\n                    search_limit = 20;\n                } else {\n                    search_limit = 3;\n                }\n\n                /*\n                 * Check if the last scalefactor band is distorted. in VBR mode\n                 * we can't get rid of the distortion, so quit now and VBR mode\n                 * will try again with more bits. (makes a 10% speed increase,\n                 * the files I tested were binary identical, 2000/05/20 Robert\n                 * Hegemann) distort[] > 1 means noise > allowed noise\n                 */\n                if (gfc.sfb21_extra) {\n                    if (distort[cod_info_w.sfbmax] > 1.0)\n                        break;\n                    if (cod_info_w.block_type == Encoder.SHORT_TYPE\n                        && (distort[cod_info_w.sfbmax + 1] > 1.0 || distort[cod_info_w.sfbmax + 2] > 1.0))\n                        break;\n                }\n\n                /* try a new scalefactor conbination on cod_info_w */\n                if (!balance_noise(gfp, cod_info_w, distort, xrpow, bRefine))\n                    break;\n                if (cod_info_w.scalefac_scale != 0)\n                    maxggain = 254;\n\n                /*\n                 * inner_loop starts with the initial quantization step computed\n                 * above and slowly increases until the bits < huff_bits. Thus\n                 * it is important not to start with too large of an inital\n                 * quantization step. Too small is ok, but inner_loop will take\n                 * longer\n                 */\n                var huff_bits = targ_bits - cod_info_w.part2_length;\n                if (huff_bits <= 0)\n                    break;\n\n                /*\n                 * increase quantizer stepsize until needed bits are below\n                 * maximum\n                 */\n                while ((cod_info_w.part2_3_length = tk.count_bits(gfc, xrpow,\n                    cod_info_w, prev_noise)) > huff_bits\n                && cod_info_w.global_gain <= maxggain)\n                    cod_info_w.global_gain++;\n\n                if (cod_info_w.global_gain > maxggain)\n                    break;\n\n                if (best_noise_info.over_count == 0) {\n\n                    while ((cod_info_w.part2_3_length = tk.count_bits(gfc,\n                        xrpow, cod_info_w, prev_noise)) > best_part2_3_length\n                    && cod_info_w.global_gain <= maxggain)\n                        cod_info_w.global_gain++;\n\n                    if (cod_info_w.global_gain > maxggain)\n                        break;\n                }\n\n                /* compute the distortion in this quantization */\n                qupvt.calc_noise(cod_info_w, l3_xmin, distort, noise_info,\n                    prev_noise);\n                noise_info.bits = cod_info_w.part2_3_length;\n\n                /*\n                 * check if this quantization is better than our saved\n                 * quantization\n                 */\n                if (cod_info.block_type != Encoder.SHORT_TYPE) {\n                    // NORM, START or STOP type\n                    better = gfp.quant_comp;\n                } else\n                    better = gfp.quant_comp_short;\n\n                better = quant_compare(better, best_noise_info, noise_info,\n                    cod_info_w, distort) ? 1 : 0;\n\n                /* save data so we can restore this quantization later */\n                if (better != 0) {\n                    best_part2_3_length = cod_info.part2_3_length;\n                    best_noise_info = noise_info;\n                    cod_info.assign(cod_info_w);\n                    age = 0;\n                    /* save data so we can restore this quantization later */\n                    /* store for later reuse */\n                    System.arraycopy(xrpow, 0, save_xrpow, 0, 576);\n                } else {\n                    /* early stop? */\n                    if (gfc.full_outer_loop == 0) {\n                        if (++age > search_limit\n                            && best_noise_info.over_count == 0)\n                            break;\n                        if ((gfc.noise_shaping_amp == 3) && bRefine && age > 30)\n                            break;\n                        if ((gfc.noise_shaping_amp == 3)\n                            && bRefine\n                            && (cod_info_w.global_gain - best_ggain_pass1) > 15)\n                            break;\n                    }\n                }\n            } while ((cod_info_w.global_gain + cod_info_w.scalefac_scale) < 255);\n\n            if (gfc.noise_shaping_amp == 3) {\n                if (!bRefine) {\n                    /* refine search */\n                    cod_info_w.assign(cod_info);\n                    System.arraycopy(save_xrpow, 0, xrpow, 0, 576);\n                    age = 0;\n                    best_ggain_pass1 = cod_info_w.global_gain;\n\n                    bRefine = true;\n                } else {\n                    /* search already refined, stop */\n                    bEndOfSearch = true;\n                }\n\n            } else {\n                bEndOfSearch = true;\n            }\n        }\n\n        assert((cod_info.global_gain + cod_info.scalefac_scale) <= 255);\n        /*\n         * finish up\n         */\n        if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\n        /* restore for reuse on next try */\n            System.arraycopy(save_xrpow, 0, xrpow, 0, 576);\n        /*\n         * do the 'substep shaping'\n         */\n        else if ((gfc.substep_shaping & 1) != 0)\n            trancate_smallspectrums(gfc, cod_info, l3_xmin, xrpow);\n\n        return best_noise_info.over_count;\n    }\n\n    /**\n     * Robert Hegemann 2000-09-06\n     *\n     * update reservoir status after FINAL quantization/bitrate\n     */\n    this.iteration_finish_one = function (gfc, gr, ch) {\n        var l3_side = gfc.l3_side;\n        var cod_info = l3_side.tt[gr][ch];\n\n        /*\n         * try some better scalefac storage\n         */\n        tk.best_scalefac_store(gfc, gr, ch, l3_side);\n\n        /*\n         * best huffman_divide may save some bits too\n         */\n        if (gfc.use_best_huffman == 1)\n            tk.best_huffman_divide(gfc, cod_info);\n\n        /*\n         * update reservoir status after FINAL quantization/bitrate\n         */\n        rv.ResvAdjust(gfc, cod_info);\n    };\n\n    /**\n     *\n     * 2000-09-04 Robert Hegemann\n     *\n     * @param l3_xmin\n     *            allowed distortion of the scalefactor\n     * @param xrpow\n     *            coloured magnitudes of spectral values\n     */\n    this.VBR_encode_granule = function (gfp, cod_info, l3_xmin, xrpow, ch, min_bits, max_bits) {\n        var gfc = gfp.internal_flags;\n        var bst_cod_info = new GrInfo();\n        var bst_xrpow = new_float(576);\n        var Max_bits = max_bits;\n        var real_bits = max_bits + 1;\n        var this_bits = (max_bits + min_bits) / 2;\n        var dbits, over, found = 0;\n        var sfb21_extra = gfc.sfb21_extra;\n\n        assert(Max_bits <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n        Arrays.fill(bst_cod_info.l3_enc, 0);\n\n        /*\n         * search within round about 40 bits of optimal\n         */\n        do {\n            assert(this_bits >= min_bits);\n            assert(this_bits <= max_bits);\n            assert(min_bits <= max_bits);\n\n            if (this_bits > Max_bits - 42)\n                gfc.sfb21_extra = false;\n            else\n                gfc.sfb21_extra = sfb21_extra;\n\n            over = outer_loop(gfp, cod_info, l3_xmin, xrpow, ch, this_bits);\n\n            /*\n             * is quantization as good as we are looking for ? in this case: is\n             * no scalefactor band distorted?\n             */\n            if (over <= 0) {\n                found = 1;\n                /*\n                 * now we know it can be done with \"real_bits\" and maybe we can\n                 * skip some iterations\n                 */\n                real_bits = cod_info.part2_3_length;\n\n                /*\n                 * store best quantization so far\n                 */\n                bst_cod_info.assign(cod_info);\n                System.arraycopy(xrpow, 0, bst_xrpow, 0, 576);\n\n                /*\n                 * try with fewer bits\n                 */\n                max_bits = real_bits - 32;\n                dbits = max_bits - min_bits;\n                this_bits = (max_bits + min_bits) / 2;\n            } else {\n                /*\n                 * try with more bits\n                 */\n                min_bits = this_bits + 32;\n                dbits = max_bits - min_bits;\n                this_bits = (max_bits + min_bits) / 2;\n\n                if (found != 0) {\n                    found = 2;\n                    /*\n                     * start again with best quantization so far\n                     */\n                    cod_info.assign(bst_cod_info);\n                    System.arraycopy(bst_xrpow, 0, xrpow, 0, 576);\n                }\n            }\n        } while (dbits > 12);\n\n        gfc.sfb21_extra = sfb21_extra;\n\n        /*\n         * found=0 => nothing found, use last one found=1 => we just found the\n         * best and left the loop found=2 => we restored a good one and have now\n         * l3_enc to restore too\n         */\n        if (found == 2) {\n            System.arraycopy(bst_cod_info.l3_enc, 0, cod_info.l3_enc, 0, 576);\n        }\n        assert(cod_info.part2_3_length <= Max_bits);\n    }\n\n    /**\n     * Robert Hegemann 2000-09-05\n     *\n     * calculates * how many bits are available for analog silent granules * how\n     * many bits to use for the lowest allowed bitrate * how many bits each\n     * bitrate would provide\n     */\n    this.get_framebits = function (gfp, frameBits) {\n        var gfc = gfp.internal_flags;\n\n        /*\n         * always use at least this many bits per granule per channel unless we\n         * detect analog silence, see below\n         */\n        gfc.bitrate_index = gfc.VBR_min_bitrate;\n        var bitsPerFrame = bs.getframebits(gfp);\n\n        /*\n         * bits for analog silence\n         */\n        gfc.bitrate_index = 1;\n        bitsPerFrame = bs.getframebits(gfp);\n\n        for (var i = 1; i <= gfc.VBR_max_bitrate; i++) {\n            gfc.bitrate_index = i;\n            var mb = new MeanBits(bitsPerFrame);\n            frameBits[i] = rv.ResvFrameBegin(gfp, mb);\n            bitsPerFrame = mb.bits;\n        }\n    };\n\n    /* RH: this one needs to be overhauled sometime */\n\n    /**\n     * <PRE>\n     *  2000-09-04 Robert Hegemann\n     *\n     *  * converts LR to MS coding when necessary\n     *  * calculates allowed/adjusted quantization noise amounts\n     *  * detects analog silent frames\n     *\n     *  some remarks:\n     *  - lower masking depending on Quality setting\n     *  - quality control together with adjusted ATH MDCT scaling\n     *    on lower quality setting allocate more noise from\n     *    ATH masking, and on higher quality setting allocate\n     *    less noise from ATH masking.\n     *  - experiments show that going more than 2dB over GPSYCHO's\n     *    limits ends up in very annoying artefacts\n     * </PRE>\n     */\n    this.VBR_old_prepare = function (gfp, pe, ms_ener_ratio, ratio, l3_xmin, frameBits, min_bits,\n                                     max_bits, bands) {\n        var gfc = gfp.internal_flags;\n\n        var masking_lower_db, adjust = 0.0;\n        var analog_silence = 1;\n        var bits = 0;\n\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\n        var avg = rv.ResvFrameBegin(gfp, new MeanBits(0)) / gfc.mode_gr;\n\n        get_framebits(gfp, frameBits);\n\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            var mxb = qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\n            if (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\n                ms_convert(gfc.l3_side, gr);\n                qupvt.reduce_side(max_bits[gr], ms_ener_ratio[gr], avg, mxb);\n            }\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n\n                if (cod_info.block_type != Encoder.SHORT_TYPE) {\n                    // NORM, START or STOP type\n                    adjust = 1.28 / (1 + Math\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.05;\n                    masking_lower_db = gfc.PSY.mask_adjust - adjust;\n                } else {\n                    adjust = 2.56 / (1 + Math\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.14;\n                    masking_lower_db = gfc.PSY.mask_adjust_short - adjust;\n                }\n                gfc.masking_lower = Math.pow(10.0,\n                    masking_lower_db * 0.1);\n\n                init_outer_loop(gfc, cod_info);\n                bands[gr][ch] = qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n                    l3_xmin[gr][ch]);\n                if (bands[gr][ch] != 0)\n                    analog_silence = 0;\n\n                min_bits[gr][ch] = 126;\n\n                bits += max_bits[gr][ch];\n            }\n        }\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                if (bits > frameBits[gfc.VBR_max_bitrate]) {\n                    max_bits[gr][ch] *= frameBits[gfc.VBR_max_bitrate];\n                    max_bits[gr][ch] /= bits;\n                }\n                if (min_bits[gr][ch] > max_bits[gr][ch])\n                    min_bits[gr][ch] = max_bits[gr][ch];\n\n            }\n            /* for ch */\n        }\n        /* for gr */\n\n        return analog_silence;\n    };\n\n    this.bitpressure_strategy = function (gfc, l3_xmin, min_bits, max_bits) {\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = gfc.l3_side.tt[gr][ch];\n                var pxmin = l3_xmin[gr][ch];\n                var pxminPos = 0;\n                for (var sfb = 0; sfb < gi.psy_lmax; sfb++)\n                    pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                        / Encoder.SBMAX_l / Encoder.SBMAX_l;\n\n                if (gi.block_type == Encoder.SHORT_TYPE) {\n                    for (var sfb = gi.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\n                    }\n                }\n                max_bits[gr][ch] = 0 | Math.max(min_bits[gr][ch],\n                        0.9 * max_bits[gr][ch]);\n            }\n        }\n    };\n\n    this.VBR_new_prepare = function (gfp, pe, ratio, l3_xmin, frameBits, max_bits) {\n        var gfc = gfp.internal_flags;\n\n        var analog_silence = 1;\n        var avg = 0, bits = 0;\n        var maximum_framebits;\n\n        if (!gfp.free_format) {\n            gfc.bitrate_index = gfc.VBR_max_bitrate;\n\n            var mb = new MeanBits(avg);\n            rv.ResvFrameBegin(gfp, mb);\n            avg = mb.bits;\n\n            get_framebits(gfp, frameBits);\n            maximum_framebits = frameBits[gfc.VBR_max_bitrate];\n        } else {\n            gfc.bitrate_index = 0;\n            var mb = new MeanBits(avg);\n            maximum_framebits = rv.ResvFrameBegin(gfp, mb);\n            avg = mb.bits;\n            frameBits[0] = maximum_framebits;\n        }\n\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\n            if (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\n                ms_convert(gfc.l3_side, gr);\n            }\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n\n                gfc.masking_lower = Math.pow(10.0,\n                    gfc.PSY.mask_adjust * 0.1);\n\n                init_outer_loop(gfc, cod_info);\n                if (0 != qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n                        l3_xmin[gr][ch]))\n                    analog_silence = 0;\n\n                bits += max_bits[gr][ch];\n            }\n        }\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                if (bits > maximum_framebits) {\n                    max_bits[gr][ch] *= maximum_framebits;\n                    max_bits[gr][ch] /= bits;\n                }\n\n            }\n            /* for ch */\n        }\n        /* for gr */\n\n        return analog_silence;\n    };\n\n    /**\n     * calculates target bits for ABR encoding\n     *\n     * mt 2000/05/31\n     */\n    this.calc_target_bits = function (gfp, pe, ms_ener_ratio, targ_bits, analog_silence_bits, max_frame_bits) {\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n        var res_factor;\n        var gr, ch, totbits, mean_bits = 0;\n\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\n        var mb = new MeanBits(mean_bits);\n        max_frame_bits[0] = rv.ResvFrameBegin(gfp, mb);\n        mean_bits = mb.bits;\n\n        gfc.bitrate_index = 1;\n        mean_bits = bs.getframebits(gfp) - gfc.sideinfo_len * 8;\n        analog_silence_bits[0] = mean_bits / (gfc.mode_gr * gfc.channels_out);\n\n        mean_bits = gfp.VBR_mean_bitrate_kbps * gfp.framesize * 1000;\n        if ((gfc.substep_shaping & 1) != 0)\n            mean_bits *= 1.09;\n        mean_bits /= gfp.out_samplerate;\n        mean_bits -= gfc.sideinfo_len * 8;\n        mean_bits /= (gfc.mode_gr * gfc.channels_out);\n\n        /**\n         * <PRE>\n         *           res_factor is the percentage of the target bitrate that should\n         *           be used on average.  the remaining bits are added to the\n         *           bitreservoir and used for difficult to encode frames.\n         *\n         *           Since we are tracking the average bitrate, we should adjust\n         *           res_factor \"on the fly\", increasing it if the average bitrate\n         *           is greater than the requested bitrate, and decreasing it\n         *           otherwise.  Reasonable ranges are from .9 to 1.0\n         *\n         *           Until we get the above suggestion working, we use the following\n         *           tuning:\n         *           compression ratio    res_factor\n         *           5.5  (256kbps)         1.0      no need for bitreservoir\n         *           11   (128kbps)         .93      7% held for reservoir\n         *\n         *           with linear interpolation for other values.\n         * </PRE>\n         */\n        res_factor = .93 + .07 * (11.0 - gfp.compression_ratio)\n            / (11.0 - 5.5);\n        if (res_factor < .90)\n            res_factor = .90;\n        if (res_factor > 1.00)\n            res_factor = 1.00;\n\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\n            var sum = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                targ_bits[gr][ch] = (int)(res_factor * mean_bits);\n\n                if (pe[gr][ch] > 700) {\n                    var add_bits = (int)((pe[gr][ch] - 700) / 1.4);\n\n                    var cod_info = l3_side.tt[gr][ch];\n                    targ_bits[gr][ch] = (int)(res_factor * mean_bits);\n\n                    /* short blocks use a little extra, no matter what the pe */\n                    if (cod_info.block_type == Encoder.SHORT_TYPE) {\n                        if (add_bits < mean_bits / 2)\n                            add_bits = mean_bits / 2;\n                    }\n                    /* at most increase bits by 1.5*average */\n                    if (add_bits > mean_bits * 3 / 2)\n                        add_bits = mean_bits * 3 / 2;\n                    else if (add_bits < 0)\n                        add_bits = 0;\n\n                    targ_bits[gr][ch] += add_bits;\n                }\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL) {\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\n                }\n                sum += targ_bits[gr][ch];\n            }\n            /* for ch */\n            if (sum > LameInternalFlags.MAX_BITS_PER_GRANULE) {\n                for (ch = 0; ch < gfc.channels_out; ++ch) {\n                    targ_bits[gr][ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\n                    targ_bits[gr][ch] /= sum;\n                }\n            }\n        }\n        /* for gr */\n\n        if (gfc.mode_ext == Encoder.MPG_MD_MS_LR)\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                qupvt.reduce_side(targ_bits[gr], ms_ener_ratio[gr], mean_bits\n                    * gfc.channels_out,\n                    LameInternalFlags.MAX_BITS_PER_GRANULE);\n            }\n\n        /*\n         * sum target bits\n         */\n        totbits = 0;\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL)\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\n                totbits += targ_bits[gr][ch];\n            }\n        }\n\n        /*\n         * repartion target bits if needed\n         */\n        if (totbits > max_frame_bits[0]) {\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    targ_bits[gr][ch] *= max_frame_bits[0];\n                    targ_bits[gr][ch] /= totbits;\n                }\n            }\n        }\n    }\n\n}\n\nmodule.exports = Quantize;\n","var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar ownKeys = require('../internals/own-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar createProperty = require('../internals/create-property');\n\n// `Object.getOwnPropertyDescriptors` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors\n$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {\n    var O = toIndexedObject(object);\n    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n    var keys = ownKeys(O);\n    var result = {};\n    var index = 0;\n    var key, descriptor;\n    while (keys.length > index) {\n      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);\n      if (descriptor !== undefined) createProperty(result, key, descriptor);\n    }\n    return result;\n  }\n});\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar new_short_n = common.new_short_n;\nvar assert = common.assert;\n\nvar PsyModel = require('./PsyModel.js');\nvar LameGlobalFlags = require('./LameGlobalFlags.js');\nvar LameInternalFlags = require('./LameInternalFlags.js');\nvar ATH = require('./ATH.js');\nvar ReplayGain = require('./ReplayGain.js');\nvar CBRNewIterationLoop = require('./CBRNewIterationLoop.js');\nvar BitStream = require('./BitStream.js');\nvar Tables = require('./Tables.js');\nvar Encoder = require('./Encoder.js');\n\nfunction Lame() {\n    var self = this;\n    var LAME_MAXALBUMART = (128 * 1024);\n\n    Lame.V9 = 410;\n    Lame.V8 = 420;\n    Lame.V7 = 430;\n    Lame.V6 = 440;\n    Lame.V5 = 450;\n    Lame.V4 = 460;\n    Lame.V3 = 470;\n    Lame.V2 = 480;\n    Lame.V1 = 490;\n    Lame.V0 = 500;\n\n    /* still there for compatibility */\n\n    Lame.R3MIX = 1000;\n    Lame.STANDARD = 1001;\n    Lame.EXTREME = 1002;\n    Lame.INSANE = 1003;\n    Lame.STANDARD_FAST = 1004;\n    Lame.EXTREME_FAST = 1005;\n    Lame.MEDIUM = 1006;\n    Lame.MEDIUM_FAST = 1007;\n\n    /**\n     * maximum size of mp3buffer needed if you encode at most 1152 samples for\n     * each call to lame_encode_buffer. see lame_encode_buffer() below\n     * (LAME_MAXMP3BUFFER is now obsolete)\n     */\n    var LAME_MAXMP3BUFFER = (16384 + LAME_MAXALBUMART);\n    Lame.LAME_MAXMP3BUFFER = LAME_MAXMP3BUFFER;\n\n    var ga;\n    var bs;\n    var p;\n    var qupvt;\n    var qu;\n    var psy = new PsyModel();\n    var vbr;\n    var ver;\n    var id3;\n    var mpglib;\n    this.enc = new Encoder();\n\n    this.setModules = function (_ga, _bs, _p, _qupvt, _qu, _vbr, _ver, _id3, _mpglib) {\n        ga = _ga;\n        bs = _bs;\n        p = _p;\n        qupvt = _qupvt;\n        qu = _qu;\n        vbr = _vbr;\n        ver = _ver;\n        id3 = _id3;\n        mpglib = _mpglib;\n        this.enc.setModules(bs, psy, qupvt, vbr);\n    }\n\n    /**\n     * PSY Model related stuff\n     */\n    function PSY() {\n        /**\n         * The dbQ stuff.\n         */\n        this.mask_adjust = 0.;\n        /**\n         * The dbQ stuff.\n         */\n        this.mask_adjust_short = 0.;\n        /* at transition from one scalefactor band to next */\n        /**\n         * Band weight long scalefactor bands.\n         */\n        this.bo_l_weight = new_float(Encoder.SBMAX_l);\n        /**\n         * Band weight short scalefactor bands.\n         */\n        this.bo_s_weight = new_float(Encoder.SBMAX_s);\n    }\n\n    function LowPassHighPass() {\n        this.lowerlimit = 0.;\n    }\n\n    function BandPass(bitrate, lPass) {\n        this.lowpass = lPass;\n    }\n\n    var LAME_ID = 0xFFF88E3B;\n\n    function lame_init_old(gfp) {\n        var gfc;\n\n        gfp.class_id = LAME_ID;\n\n        gfc = gfp.internal_flags = new LameInternalFlags();\n\n        /* Global flags. set defaults here for non-zero values */\n        /* see lame.h for description */\n        /*\n         * set integer values to -1 to mean that LAME will compute the best\n         * value, UNLESS the calling program as set it (and the value is no\n         * longer -1)\n         */\n\n        gfp.mode = MPEGMode.NOT_SET;\n        gfp.original = 1;\n        gfp.in_samplerate = 44100;\n        gfp.num_channels = 2;\n        gfp.num_samples = -1;\n\n        gfp.bWriteVbrTag = true;\n        gfp.quality = -1;\n        gfp.short_blocks = null;\n        gfc.subblock_gain = -1;\n\n        gfp.lowpassfreq = 0;\n        gfp.highpassfreq = 0;\n        gfp.lowpasswidth = -1;\n        gfp.highpasswidth = -1;\n\n        gfp.VBR = VbrMode.vbr_off;\n        gfp.VBR_q = 4;\n        gfp.ATHcurve = -1;\n        gfp.VBR_mean_bitrate_kbps = 128;\n        gfp.VBR_min_bitrate_kbps = 0;\n        gfp.VBR_max_bitrate_kbps = 0;\n        gfp.VBR_hard_min = 0;\n        gfc.VBR_min_bitrate = 1;\n        /* not 0 ????? */\n        gfc.VBR_max_bitrate = 13;\n        /* not 14 ????? */\n\n        gfp.quant_comp = -1;\n        gfp.quant_comp_short = -1;\n\n        gfp.msfix = -1;\n\n        gfc.resample_ratio = 1;\n\n        gfc.OldValue[0] = 180;\n        gfc.OldValue[1] = 180;\n        gfc.CurrentStep[0] = 4;\n        gfc.CurrentStep[1] = 4;\n        gfc.masking_lower = 1;\n        gfc.nsPsy.attackthre = -1;\n        gfc.nsPsy.attackthre_s = -1;\n\n        gfp.scale = -1;\n\n        gfp.athaa_type = -1;\n        gfp.ATHtype = -1;\n        /* default = -1 = set in lame_init_params */\n        gfp.athaa_loudapprox = -1;\n        /* 1 = flat loudness approx. (total energy) */\n        /* 2 = equal loudness curve */\n        gfp.athaa_sensitivity = 0.0;\n        /* no offset */\n        gfp.useTemporal = null;\n        gfp.interChRatio = -1;\n\n        /*\n         * The reason for int mf_samples_to_encode = ENCDELAY + POSTDELAY;\n         * ENCDELAY = internal encoder delay. And then we have to add\n         * POSTDELAY=288 because of the 50% MDCT overlap. A 576 MDCT granule\n         * decodes to 1152 samples. To synthesize the 576 samples centered under\n         * this granule we need the previous granule for the first 288 samples\n         * (no problem), and the next granule for the next 288 samples (not\n         * possible if this is last granule). So we need to pad with 288 samples\n         * to make sure we can encode the 576 samples we are interested in.\n         */\n        gfc.mf_samples_to_encode = Encoder.ENCDELAY + Encoder.POSTDELAY;\n        gfp.encoder_padding = 0;\n        gfc.mf_size = Encoder.ENCDELAY - Encoder.MDCTDELAY;\n        /*\n         * we pad input with this many 0's\n         */\n\n        gfp.findReplayGain = false;\n        gfp.decode_on_the_fly = false;\n\n        gfc.decode_on_the_fly = false;\n        gfc.findReplayGain = false;\n        gfc.findPeakSample = false;\n\n        gfc.RadioGain = 0;\n        gfc.AudiophileGain = 0;\n        gfc.noclipGainChange = 0;\n        gfc.noclipScale = -1.0;\n\n        gfp.preset = 0;\n\n        gfp.write_id3tag_automatic = true;\n        return 0;\n    }\n\n    this.lame_init = function () {\n        var gfp = new LameGlobalFlags();\n\n        var ret = lame_init_old(gfp);\n        if (ret != 0) {\n            return null;\n        }\n\n        gfp.lame_allocated_gfp = 1;\n        return gfp;\n    }\n\n    function filter_coef(x) {\n        if (x > 1.0)\n            return 0.0;\n        if (x <= 0.0)\n            return 1.0;\n\n        return Math.cos(Math.PI / 2 * x);\n    }\n\n    this.nearestBitrateFullIndex = function (bitrate) {\n        /* borrowed from DM abr presets */\n\n        var full_bitrate_table = [8, 16, 24, 32, 40, 48, 56, 64, 80,\n            96, 112, 128, 160, 192, 224, 256, 320];\n\n        var lower_range = 0, lower_range_kbps = 0, upper_range = 0, upper_range_kbps = 0;\n\n        /* We assume specified bitrate will be 320kbps */\n        upper_range_kbps = full_bitrate_table[16];\n        upper_range = 16;\n        lower_range_kbps = full_bitrate_table[16];\n        lower_range = 16;\n\n        /*\n         * Determine which significant bitrates the value specified falls\n         * between, if loop ends without breaking then we were correct above\n         * that the value was 320\n         */\n        for (var b = 0; b < 16; b++) {\n            if ((Math.max(bitrate, full_bitrate_table[b + 1])) != bitrate) {\n                upper_range_kbps = full_bitrate_table[b + 1];\n                upper_range = b + 1;\n                lower_range_kbps = full_bitrate_table[b];\n                lower_range = (b);\n                break;\n                /* We found upper range */\n            }\n        }\n\n        /* Determine which range the value specified is closer to */\n        if ((upper_range_kbps - bitrate) > (bitrate - lower_range_kbps)) {\n            return lower_range;\n        }\n        return upper_range;\n    }\n\n    function optimum_samplefreq(lowpassfreq, input_samplefreq) {\n        /*\n         * Rules:\n         *\n         * - if possible, sfb21 should NOT be used\n         */\n        var suggested_samplefreq = 44100;\n\n        if (input_samplefreq >= 48000)\n            suggested_samplefreq = 48000;\n        else if (input_samplefreq >= 44100)\n            suggested_samplefreq = 44100;\n        else if (input_samplefreq >= 32000)\n            suggested_samplefreq = 32000;\n        else if (input_samplefreq >= 24000)\n            suggested_samplefreq = 24000;\n        else if (input_samplefreq >= 22050)\n            suggested_samplefreq = 22050;\n        else if (input_samplefreq >= 16000)\n            suggested_samplefreq = 16000;\n        else if (input_samplefreq >= 12000)\n            suggested_samplefreq = 12000;\n        else if (input_samplefreq >= 11025)\n            suggested_samplefreq = 11025;\n        else if (input_samplefreq >= 8000)\n            suggested_samplefreq = 8000;\n\n        if (lowpassfreq == -1)\n            return suggested_samplefreq;\n\n        if (lowpassfreq <= 15960)\n            suggested_samplefreq = 44100;\n        if (lowpassfreq <= 15250)\n            suggested_samplefreq = 32000;\n        if (lowpassfreq <= 11220)\n            suggested_samplefreq = 24000;\n        if (lowpassfreq <= 9970)\n            suggested_samplefreq = 22050;\n        if (lowpassfreq <= 7230)\n            suggested_samplefreq = 16000;\n        if (lowpassfreq <= 5420)\n            suggested_samplefreq = 12000;\n        if (lowpassfreq <= 4510)\n            suggested_samplefreq = 11025;\n        if (lowpassfreq <= 3970)\n            suggested_samplefreq = 8000;\n\n        if (input_samplefreq < suggested_samplefreq) {\n            /*\n             * choose a valid MPEG sample frequency above the input sample\n             * frequency to avoid SFB21/12 bitrate bloat rh 061115\n             */\n            if (input_samplefreq > 44100) {\n                return 48000;\n            }\n            if (input_samplefreq > 32000) {\n                return 44100;\n            }\n            if (input_samplefreq > 24000) {\n                return 32000;\n            }\n            if (input_samplefreq > 22050) {\n                return 24000;\n            }\n            if (input_samplefreq > 16000) {\n                return 22050;\n            }\n            if (input_samplefreq > 12000) {\n                return 16000;\n            }\n            if (input_samplefreq > 11025) {\n                return 12000;\n            }\n            if (input_samplefreq > 8000) {\n                return 11025;\n            }\n            return 8000;\n        }\n        return suggested_samplefreq;\n    }\n\n    /**\n     * convert samp freq in Hz to index\n     */\n    function SmpFrqIndex(sample_freq, gpf) {\n        switch (sample_freq) {\n            case 44100:\n                gpf.version = 1;\n                return 0;\n            case 48000:\n                gpf.version = 1;\n                return 1;\n            case 32000:\n                gpf.version = 1;\n                return 2;\n            case 22050:\n                gpf.version = 0;\n                return 0;\n            case 24000:\n                gpf.version = 0;\n                return 1;\n            case 16000:\n                gpf.version = 0;\n                return 2;\n            case 11025:\n                gpf.version = 0;\n                return 0;\n            case 12000:\n                gpf.version = 0;\n                return 1;\n            case 8000:\n                gpf.version = 0;\n                return 2;\n            default:\n                gpf.version = 0;\n                return -1;\n        }\n    }\n\n    /**\n     * @param bRate\n     *            legal rates from 8 to 320\n     */\n    function FindNearestBitrate(bRate, version, samplerate) {\n        /* MPEG-1 or MPEG-2 LSF */\n        if (samplerate < 16000)\n            version = 2;\n\n        var bitrate = Tables.bitrate_table[version][1];\n\n        for (var i = 2; i <= 14; i++) {\n            if (Tables.bitrate_table[version][i] > 0) {\n                if (Math.abs(Tables.bitrate_table[version][i] - bRate) < Math\n                        .abs(bitrate - bRate))\n                    bitrate = Tables.bitrate_table[version][i];\n            }\n        }\n        return bitrate;\n    }\n\n    /**\n     * @param bRate\n     *            legal rates from 32 to 448 kbps\n     * @param version\n     *            MPEG-1 or MPEG-2/2.5 LSF\n     */\n    function BitrateIndex(bRate, version, samplerate) {\n        /* convert bitrate in kbps to index */\n        if (samplerate < 16000)\n            version = 2;\n        for (var i = 0; i <= 14; i++) {\n            if (Tables.bitrate_table[version][i] > 0) {\n                if (Tables.bitrate_table[version][i] == bRate) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    function optimum_bandwidth(lh, bitrate) {\n        /**\n         * <PRE>\n         *  Input:\n         *      bitrate     total bitrate in kbps\n         *\n         *   Output:\n         *      lowerlimit: best lowpass frequency limit for input filter in Hz\n         *      upperlimit: best highpass frequency limit for input filter in Hz\n         * </PRE>\n         */\n        var freq_map = [new BandPass(8, 2000),\n            new BandPass(16, 3700), new BandPass(24, 3900),\n            new BandPass(32, 5500), new BandPass(40, 7000),\n            new BandPass(48, 7500), new BandPass(56, 10000),\n            new BandPass(64, 11000), new BandPass(80, 13500),\n            new BandPass(96, 15100), new BandPass(112, 15600),\n            new BandPass(128, 17000), new BandPass(160, 17500),\n            new BandPass(192, 18600), new BandPass(224, 19400),\n            new BandPass(256, 19700), new BandPass(320, 20500)];\n\n        var table_index = self.nearestBitrateFullIndex(bitrate);\n        lh.lowerlimit = freq_map[table_index].lowpass;\n    }\n\n    function lame_init_params_ppflt(gfp) {\n        var gfc = gfp.internal_flags;\n        /***************************************************************/\n        /* compute info needed for polyphase filter (filter type==0, default) */\n        /***************************************************************/\n\n        var lowpass_band = 32;\n        var highpass_band = -1;\n\n        if (gfc.lowpass1 > 0) {\n            var minband = 999;\n            for (var band = 0; band <= 31; band++) {\n                var freq = (band / 31.0);\n                /* this band and above will be zeroed: */\n                if (freq >= gfc.lowpass2) {\n                    lowpass_band = Math.min(lowpass_band, band);\n                }\n                if (gfc.lowpass1 < freq && freq < gfc.lowpass2) {\n                    minband = Math.min(minband, band);\n                }\n            }\n\n            /*\n             * compute the *actual* transition band implemented by the polyphase\n             * filter\n             */\n            if (minband == 999) {\n                gfc.lowpass1 = (lowpass_band - .75) / 31.0;\n            } else {\n                gfc.lowpass1 = (minband - .75) / 31.0;\n            }\n            gfc.lowpass2 = lowpass_band / 31.0;\n        }\n\n        /*\n         * make sure highpass filter is within 90% of what the effective\n         * highpass frequency will be\n         */\n        if (gfc.highpass2 > 0) {\n            if (gfc.highpass2 < .9 * (.75 / 31.0)) {\n                gfc.highpass1 = 0;\n                gfc.highpass2 = 0;\n                System.err.println(\"Warning: highpass filter disabled.  \"\n                    + \"highpass frequency too small\\n\");\n            }\n        }\n\n        if (gfc.highpass2 > 0) {\n            var maxband = -1;\n            for (var band = 0; band <= 31; band++) {\n                var freq = band / 31.0;\n                /* this band and below will be zereod */\n                if (freq <= gfc.highpass1) {\n                    highpass_band = Math.max(highpass_band, band);\n                }\n                if (gfc.highpass1 < freq && freq < gfc.highpass2) {\n                    maxband = Math.max(maxband, band);\n                }\n            }\n            /*\n             * compute the *actual* transition band implemented by the polyphase\n             * filter\n             */\n            gfc.highpass1 = highpass_band / 31.0;\n            if (maxband == -1) {\n                gfc.highpass2 = (highpass_band + .75) / 31.0;\n            } else {\n                gfc.highpass2 = (maxband + .75) / 31.0;\n            }\n        }\n\n        for (var band = 0; band < 32; band++) {\n            var fc1, fc2;\n            var freq = band / 31.0;\n            if (gfc.highpass2 > gfc.highpass1) {\n                fc1 = filter_coef((gfc.highpass2 - freq)\n                    / (gfc.highpass2 - gfc.highpass1 + 1e-20));\n            } else {\n                fc1 = 1.0;\n            }\n            if (gfc.lowpass2 > gfc.lowpass1) {\n                fc2 = filter_coef((freq - gfc.lowpass1)\n                    / (gfc.lowpass2 - gfc.lowpass1 + 1e-20));\n            } else {\n                fc2 = 1.0;\n            }\n            gfc.amp_filter[band] = (fc1 * fc2);\n        }\n    }\n\n    function lame_init_qval(gfp) {\n        var gfc = gfp.internal_flags;\n\n        switch (gfp.quality) {\n            default:\n            case 9: /* no psymodel, no noise shaping */\n                gfc.psymodel = 0;\n                gfc.noise_shaping = 0;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 8:\n                gfp.quality = 7;\n            //$FALL-THROUGH$\n            case 7:\n                /*\n                 * use psymodel (for short block and m/s switching), but no noise\n                 * shapping\n                 */\n                gfc.psymodel = 1;\n                gfc.noise_shaping = 0;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 6:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 5:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 4:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 3:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 1;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 2:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 1;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                /* inner loop */\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 1:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 2;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 0:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 2;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                /*\n                 * type 2 disabled because of it slowness, in favor of full outer\n                 * loop search\n                 */\n                gfc.full_outer_loop = 0;\n                /*\n                 * full outer loop search disabled because of audible distortions it\n                 * may generate rh 060629\n                 */\n                break;\n        }\n\n    }\n\n    function lame_init_bitstream(gfp) {\n        var gfc = gfp.internal_flags;\n        gfp.frameNum = 0;\n\n        if (gfp.write_id3tag_automatic) {\n            id3.id3tag_write_v2(gfp);\n        }\n        /* initialize histogram data optionally used by frontend */\n\n        gfc.bitrate_stereoMode_Hist = new_int_n([16, 4 + 1]);\n        gfc.bitrate_blockType_Hist = new_int_n([16, 4 + 1 + 1]);\n\n        gfc.PeakSample = 0.0;\n\n        /* Write initial VBR Header to bitstream and init VBR data */\n        if (gfp.bWriteVbrTag)\n            vbr.InitVbrTag(gfp);\n    }\n\n    /********************************************************************\n     * initialize internal params based on data in gf (globalflags struct filled\n     * in by calling program)\n     *\n     * OUTLINE:\n     *\n     * We first have some complex code to determine bitrate, output samplerate\n     * and mode. It is complicated by the fact that we allow the user to set\n     * some or all of these parameters, and need to determine best possible\n     * values for the rest of them:\n     *\n     * 1. set some CPU related flags 2. check if we are mono.mono, stereo.mono\n     * or stereo.stereo 3. compute bitrate and output samplerate: user may have\n     * set compression ratio user may have set a bitrate user may have set a\n     * output samplerate 4. set some options which depend on output samplerate\n     * 5. compute the actual compression ratio 6. set mode based on compression\n     * ratio\n     *\n     * The remaining code is much simpler - it just sets options based on the\n     * mode & compression ratio:\n     *\n     * set allow_diff_short based on mode select lowpass filter based on\n     * compression ratio & mode set the bitrate index, and min/max bitrates for\n     * VBR modes disable VBR tag if it is not appropriate initialize the\n     * bitstream initialize scalefac_band data set sideinfo_len (based on\n     * channels, CRC, out_samplerate) write an id3v2 tag into the bitstream\n     * write VBR tag into the bitstream set mpeg1/2 flag estimate the number of\n     * frames (based on a lot of data)\n     *\n     * now we set more flags: nspsytune: see code VBR modes see code CBR/ABR see\n     * code\n     *\n     * Finally, we set the algorithm flags based on the gfp.quality value\n     * lame_init_qval(gfp);\n     *\n     ********************************************************************/\n    this.lame_init_params = function (gfp) {\n        var gfc = gfp.internal_flags;\n\n        gfc.Class_ID = 0;\n        if (gfc.ATH == null)\n            gfc.ATH = new ATH();\n        if (gfc.PSY == null)\n            gfc.PSY = new PSY();\n        if (gfc.rgdata == null)\n            gfc.rgdata = new ReplayGain();\n\n        gfc.channels_in = gfp.num_channels;\n        if (gfc.channels_in == 1)\n            gfp.mode = MPEGMode.MONO;\n        gfc.channels_out = (gfp.mode == MPEGMode.MONO) ? 1 : 2;\n        gfc.mode_ext = Encoder.MPG_MD_MS_LR;\n        if (gfp.mode == MPEGMode.MONO)\n            gfp.force_ms = false;\n        /*\n         * don't allow forced mid/side stereo for mono output\n         */\n\n        if (gfp.VBR == VbrMode.vbr_off && gfp.VBR_mean_bitrate_kbps != 128\n            && gfp.brate == 0)\n            gfp.brate = gfp.VBR_mean_bitrate_kbps;\n\n        if (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_mtrh\n            || gfp.VBR == VbrMode.vbr_mt) {\n            /* these modes can handle free format condition */\n        } else {\n            gfp.free_format = false;\n            /* mode can't be mixed with free format */\n        }\n\n        if (gfp.VBR == VbrMode.vbr_off && gfp.brate == 0) {\n            /* no bitrate or compression ratio specified, use 11.025 */\n            if (BitStream.EQ(gfp.compression_ratio, 0))\n                gfp.compression_ratio = 11.025;\n            /*\n             * rate to compress a CD down to exactly 128000 bps\n             */\n        }\n\n        /* find bitrate if user specify a compression ratio */\n        if (gfp.VBR == VbrMode.vbr_off && gfp.compression_ratio > 0) {\n\n            if (gfp.out_samplerate == 0)\n                gfp.out_samplerate = map2MP3Frequency((int)(0.97 * gfp.in_samplerate));\n            /*\n             * round up with a margin of 3 %\n             */\n\n            /*\n             * choose a bitrate for the output samplerate which achieves\n             * specified compression ratio\n             */\n            gfp.brate = 0 | (gfp.out_samplerate * 16 * gfc.channels_out / (1.e3 * gfp.compression_ratio));\n\n            /* we need the version for the bitrate table look up */\n            gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\n\n            if (!gfp.free_format) /*\n             * for non Free Format find the nearest allowed\n             * bitrate\n             */\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n        }\n\n        if (gfp.out_samplerate != 0) {\n            if (gfp.out_samplerate < 16000) {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    8);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    64);\n            } else if (gfp.out_samplerate < 32000) {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    8);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    160);\n            } else {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    32);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    320);\n            }\n        }\n\n        /****************************************************************/\n        /* if a filter has not been enabled, see if we should add one: */\n        /****************************************************************/\n        if (gfp.lowpassfreq == 0) {\n            var lowpass = 16000.;\n\n            switch (gfp.VBR) {\n                case VbrMode.vbr_off:\n                {\n                    var lh = new LowPassHighPass();\n                    optimum_bandwidth(lh, gfp.brate);\n                    lowpass = lh.lowerlimit;\n                    break;\n                }\n                case VbrMode.vbr_abr:\n                {\n                    var lh = new LowPassHighPass();\n                    optimum_bandwidth(lh, gfp.VBR_mean_bitrate_kbps);\n                    lowpass = lh.lowerlimit;\n                    break;\n                }\n                case VbrMode.vbr_rh:\n                {\n                    var x = [19500, 19000, 18600, 18000, 17500, 16000,\n                        15600, 14900, 12500, 10000, 3950];\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\n                        lowpass = linear_int(a, b, m);\n                    } else {\n                        lowpass = 19500;\n                    }\n                    break;\n                }\n                default:\n                {\n                    var x = [19500, 19000, 18500, 18000, 17500, 16500,\n                        15500, 14500, 12500, 9500, 3950];\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\n                        lowpass = linear_int(a, b, m);\n                    } else {\n                        lowpass = 19500;\n                    }\n                }\n            }\n            if (gfp.mode == MPEGMode.MONO\n                && (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_abr))\n                lowpass *= 1.5;\n\n            gfp.lowpassfreq = lowpass | 0;\n        }\n\n        if (gfp.out_samplerate == 0) {\n            if (2 * gfp.lowpassfreq > gfp.in_samplerate) {\n                gfp.lowpassfreq = gfp.in_samplerate / 2;\n            }\n            gfp.out_samplerate = optimum_samplefreq(gfp.lowpassfreq | 0,\n                gfp.in_samplerate);\n        }\n\n        gfp.lowpassfreq = Math.min(20500, gfp.lowpassfreq);\n        gfp.lowpassfreq = Math.min(gfp.out_samplerate / 2, gfp.lowpassfreq);\n\n        if (gfp.VBR == VbrMode.vbr_off) {\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                / (1.e3 * gfp.brate);\n        }\n        if (gfp.VBR == VbrMode.vbr_abr) {\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                / (1.e3 * gfp.VBR_mean_bitrate_kbps);\n        }\n\n        /*\n         * do not compute ReplayGain values and do not find the peak sample if\n         * we can't store them\n         */\n        if (!gfp.bWriteVbrTag) {\n            gfp.findReplayGain = false;\n            gfp.decode_on_the_fly = false;\n            gfc.findPeakSample = false;\n        }\n        gfc.findReplayGain = gfp.findReplayGain;\n        gfc.decode_on_the_fly = gfp.decode_on_the_fly;\n\n        if (gfc.decode_on_the_fly)\n            gfc.findPeakSample = true;\n\n        if (gfc.findReplayGain) {\n            if (ga.InitGainAnalysis(gfc.rgdata, gfp.out_samplerate) == GainAnalysis.INIT_GAIN_ANALYSIS_ERROR) {\n                gfp.internal_flags = null;\n                return -6;\n            }\n        }\n\n        if (gfc.decode_on_the_fly && !gfp.decode_only) {\n            if (gfc.hip != null) {\n                mpglib.hip_decode_exit(gfc.hip);\n            }\n            gfc.hip = mpglib.hip_decode_init();\n        }\n\n        gfc.mode_gr = gfp.out_samplerate <= 24000 ? 1 : 2;\n        /*\n         * Number of granules per frame\n         */\n        gfp.framesize = 576 * gfc.mode_gr;\n        gfp.encoder_delay = Encoder.ENCDELAY;\n\n        gfc.resample_ratio = gfp.in_samplerate / gfp.out_samplerate;\n\n        /**\n         * <PRE>\n         *  sample freq       bitrate     compression ratio\n         *     [kHz]      [kbps/channel]   for 16 bit input\n         *     44.1            56               12.6\n         *     44.1            64               11.025\n         *     44.1            80                8.82\n         *     22.05           24               14.7\n         *     22.05           32               11.025\n         *     22.05           40                8.82\n         *     16              16               16.0\n         *     16              24               10.667\n         * </PRE>\n         */\n        /**\n         * <PRE>\n         *  For VBR, take a guess at the compression_ratio.\n         *  For example:\n         *\n         *    VBR_q    compression     like\n         *     -        4.4         320 kbps/44 kHz\n         *   0...1      5.5         256 kbps/44 kHz\n         *     2        7.3         192 kbps/44 kHz\n         *     4        8.8         160 kbps/44 kHz\n         *     6       11           128 kbps/44 kHz\n         *     9       14.7          96 kbps\n         *\n         *  for lower bitrates, downsample with --resample\n         * </PRE>\n         */\n        switch (gfp.VBR) {\n            case VbrMode.vbr_mt:\n            case VbrMode.vbr_rh:\n            case VbrMode.vbr_mtrh:\n            {\n                /* numbers are a bit strange, but they determine the lowpass value */\n                var cmp = [5.7, 6.5, 7.3, 8.2, 10, 11.9, 13, 14,\n                    15, 16.5];\n                gfp.compression_ratio = cmp[gfp.VBR_q];\n            }\n                break;\n            case VbrMode.vbr_abr:\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                    / (1.e3 * gfp.VBR_mean_bitrate_kbps);\n                break;\n            default:\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                    / (1.e3 * gfp.brate);\n                break;\n        }\n\n        /*\n         * mode = -1 (not set by user) or mode = MONO (because of only 1 input\n         * channel). If mode has not been set, then select J-STEREO\n         */\n        if (gfp.mode == MPEGMode.NOT_SET) {\n            gfp.mode = MPEGMode.JOINT_STEREO;\n        }\n\n        /* apply user driven high pass filter */\n        if (gfp.highpassfreq > 0) {\n            gfc.highpass1 = 2. * gfp.highpassfreq;\n\n            if (gfp.highpasswidth >= 0)\n                gfc.highpass2 = 2. * (gfp.highpassfreq + gfp.highpasswidth);\n            else\n            /* 0% above on default */\n                gfc.highpass2 = (1 + 0.00) * 2. * gfp.highpassfreq;\n\n            gfc.highpass1 /= gfp.out_samplerate;\n            gfc.highpass2 /= gfp.out_samplerate;\n        } else {\n            gfc.highpass1 = 0;\n            gfc.highpass2 = 0;\n        }\n        /* apply user driven low pass filter */\n        if (gfp.lowpassfreq > 0) {\n            gfc.lowpass2 = 2. * gfp.lowpassfreq;\n            if (gfp.lowpasswidth >= 0) {\n                gfc.lowpass1 = 2. * (gfp.lowpassfreq - gfp.lowpasswidth);\n                if (gfc.lowpass1 < 0) /* has to be >= 0 */\n                    gfc.lowpass1 = 0;\n            } else { /* 0% below on default */\n                gfc.lowpass1 = (1 - 0.00) * 2. * gfp.lowpassfreq;\n            }\n            gfc.lowpass1 /= gfp.out_samplerate;\n            gfc.lowpass2 /= gfp.out_samplerate;\n        } else {\n            gfc.lowpass1 = 0;\n            gfc.lowpass2 = 0;\n        }\n\n        /**********************************************************************/\n        /* compute info needed for polyphase filter (filter type==0, default) */\n        /**********************************************************************/\n        lame_init_params_ppflt(gfp);\n        /*******************************************************\n         * samplerate and bitrate index\n         *******************************************************/\n        gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\n        if (gfc.samplerate_index < 0) {\n            gfp.internal_flags = null;\n            return -1;\n        }\n\n        if (gfp.VBR == VbrMode.vbr_off) {\n            if (gfp.free_format) {\n                gfc.bitrate_index = 0;\n            } else {\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n                gfc.bitrate_index = BitrateIndex(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n                if (gfc.bitrate_index <= 0) {\n                    gfp.internal_flags = null;\n                    return -1;\n                }\n            }\n        } else {\n            gfc.bitrate_index = 1;\n        }\n\n        /* for CBR, we will write an \"info\" tag. */\n\n        if (gfp.analysis)\n            gfp.bWriteVbrTag = false;\n\n        /* some file options not allowed if output is: not specified or stdout */\n        if (gfc.pinfo != null)\n            gfp.bWriteVbrTag = false;\n        /* disable Xing VBR tag */\n\n        bs.init_bit_stream_w(gfc);\n\n        var j = gfc.samplerate_index + (3 * gfp.version) + 6\n            * (gfp.out_samplerate < 16000 ? 1 : 0);\n        for (var i = 0; i < Encoder.SBMAX_l + 1; i++)\n            gfc.scalefac_band.l[i] = qupvt.sfBandIndex[j].l[i];\n\n        for (var i = 0; i < Encoder.PSFB21 + 1; i++) {\n            var size = (gfc.scalefac_band.l[22] - gfc.scalefac_band.l[21])\n                / Encoder.PSFB21;\n            var start = gfc.scalefac_band.l[21] + i * size;\n            gfc.scalefac_band.psfb21[i] = start;\n        }\n        gfc.scalefac_band.psfb21[Encoder.PSFB21] = 576;\n\n        for (var i = 0; i < Encoder.SBMAX_s + 1; i++)\n            gfc.scalefac_band.s[i] = qupvt.sfBandIndex[j].s[i];\n\n        for (var i = 0; i < Encoder.PSFB12 + 1; i++) {\n            var size = (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\n                / Encoder.PSFB12;\n            var start = gfc.scalefac_band.s[12] + i * size;\n            gfc.scalefac_band.psfb12[i] = start;\n        }\n        gfc.scalefac_band.psfb12[Encoder.PSFB12] = 192;\n        /* determine the mean bitrate for main data */\n        if (gfp.version == 1) /* MPEG 1 */\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 17 : 4 + 32;\n        else\n        /* MPEG 2 */\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 9 : 4 + 17;\n\n        if (gfp.error_protection)\n            gfc.sideinfo_len += 2;\n\n        lame_init_bitstream(gfp);\n\n        gfc.Class_ID = LAME_ID;\n\n        {\n            var k;\n\n            for (k = 0; k < 19; k++)\n                gfc.nsPsy.pefirbuf[k] = 700 * gfc.mode_gr * gfc.channels_out;\n\n            if (gfp.ATHtype == -1)\n                gfp.ATHtype = 4;\n        }\n        assert(gfp.VBR_q <= 9);\n        assert(gfp.VBR_q >= 0);\n\n        switch (gfp.VBR) {\n\n            case VbrMode.vbr_mt:\n                gfp.VBR = VbrMode.vbr_mtrh;\n            //$FALL-THROUGH$\n            case VbrMode.vbr_mtrh:\n            {\n                if (gfp.useTemporal == null) {\n                    gfp.useTemporal = false;\n                    /* off by default for this VBR mode */\n                }\n\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\n                /**\n                 * <PRE>\n                 *   The newer VBR code supports only a limited\n                 *     subset of quality levels:\n                 *     9-5=5 are the same, uses x^3/4 quantization\n                 *   4-0=0 are the same  5 plus best huffman divide code\n                 * </PRE>\n                 */\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n                if (gfp.quality < 5)\n                    gfp.quality = 0;\n                if (gfp.quality > 5)\n                    gfp.quality = 5;\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                /*\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\n                 */\n                if (gfp.experimentalY)\n                    gfc.sfb21_extra = false;\n                else\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\n\n                gfc.iteration_loop = new VBRNewIterationLoop(qu);\n                break;\n\n            }\n            case VbrMode.vbr_rh:\n            {\n\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                /*\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\n                 */\n                if (gfp.experimentalY)\n                    gfc.sfb21_extra = false;\n                else\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\n\n                /*\n                 * VBR needs at least the output of GPSYCHO, so we have to garantee\n                 * that by setting a minimum quality level, actually level 6 does\n                 * it. down to level 6\n                 */\n                if (gfp.quality > 6)\n                    gfp.quality = 6;\n\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n\n                gfc.iteration_loop = new VBROldIterationLoop(qu);\n                break;\n            }\n\n            default: /* cbr/abr */\n            {\n                var vbrmode;\n\n                /*\n                 * no sfb21 extra with CBR code\n                 */\n                gfc.sfb21_extra = false;\n\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n\n                vbrmode = gfp.VBR;\n                if (vbrmode == VbrMode.vbr_off)\n                    gfp.VBR_mean_bitrate_kbps = gfp.brate;\n                /* second, set parameters depending on bitrate */\n                p.apply_preset(gfp, gfp.VBR_mean_bitrate_kbps, 0);\n                gfp.VBR = vbrmode;\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                if (vbrmode == VbrMode.vbr_off) {\n                    gfc.iteration_loop = new CBRNewIterationLoop(qu);\n                } else {\n                    gfc.iteration_loop = new ABRIterationLoop(qu);\n                }\n                break;\n            }\n        }\n        assert(gfp.scale >= 0);\n        /* initialize default values common for all modes */\n\n        if (gfp.VBR != VbrMode.vbr_off) { /* choose a min/max bitrate for VBR */\n            /* if the user didn't specify VBR_max_bitrate: */\n            gfc.VBR_min_bitrate = 1;\n            /*\n             * default: allow 8 kbps (MPEG-2) or 32 kbps (MPEG-1)\n             */\n            gfc.VBR_max_bitrate = 14;\n            /*\n             * default: allow 160 kbps (MPEG-2) or 320 kbps (MPEG-1)\n             */\n            if (gfp.out_samplerate < 16000)\n                gfc.VBR_max_bitrate = 8;\n            /* default: allow 64 kbps (MPEG-2.5) */\n            if (gfp.VBR_min_bitrate_kbps != 0) {\n                gfp.VBR_min_bitrate_kbps = FindNearestBitrate(\n                    gfp.VBR_min_bitrate_kbps, gfp.version,\n                    gfp.out_samplerate);\n                gfc.VBR_min_bitrate = BitrateIndex(gfp.VBR_min_bitrate_kbps,\n                    gfp.version, gfp.out_samplerate);\n                if (gfc.VBR_min_bitrate < 0)\n                    return -1;\n            }\n            if (gfp.VBR_max_bitrate_kbps != 0) {\n                gfp.VBR_max_bitrate_kbps = FindNearestBitrate(\n                    gfp.VBR_max_bitrate_kbps, gfp.version,\n                    gfp.out_samplerate);\n                gfc.VBR_max_bitrate = BitrateIndex(gfp.VBR_max_bitrate_kbps,\n                    gfp.version, gfp.out_samplerate);\n                if (gfc.VBR_max_bitrate < 0)\n                    return -1;\n            }\n            gfp.VBR_min_bitrate_kbps = Tables.bitrate_table[gfp.version][gfc.VBR_min_bitrate];\n            gfp.VBR_max_bitrate_kbps = Tables.bitrate_table[gfp.version][gfc.VBR_max_bitrate];\n            gfp.VBR_mean_bitrate_kbps = Math.min(\n                Tables.bitrate_table[gfp.version][gfc.VBR_max_bitrate],\n                gfp.VBR_mean_bitrate_kbps);\n            gfp.VBR_mean_bitrate_kbps = Math.max(\n                Tables.bitrate_table[gfp.version][gfc.VBR_min_bitrate],\n                gfp.VBR_mean_bitrate_kbps);\n        }\n\n        /* just another daily changing developer switch */\n        if (gfp.tune) {\n            gfc.PSY.mask_adjust += gfp.tune_value_a;\n            gfc.PSY.mask_adjust_short += gfp.tune_value_a;\n        }\n\n        /* initialize internal qval settings */\n        lame_init_qval(gfp);\n        assert(gfp.scale >= 0);\n        /*\n         * automatic ATH adjustment on\n         */\n        if (gfp.athaa_type < 0)\n            gfc.ATH.useAdjust = 3;\n        else\n            gfc.ATH.useAdjust = gfp.athaa_type;\n\n        /* initialize internal adaptive ATH settings -jd */\n        gfc.ATH.aaSensitivityP = Math.pow(10.0, gfp.athaa_sensitivity\n            / -10.0);\n\n        if (gfp.short_blocks == null) {\n            gfp.short_blocks = ShortBlock.short_block_allowed;\n        }\n\n        /*\n         * Note Jan/2003: Many hardware decoders cannot handle short blocks in\n         * regular stereo mode unless they are coupled (same type in both\n         * channels) it is a rare event (1 frame per min. or so) that LAME would\n         * use uncoupled short blocks, so lets turn them off until we decide how\n         * to handle this. No other encoders allow uncoupled short blocks, even\n         * though it is in the standard.\n         */\n        /*\n         * rh 20040217: coupling makes no sense for mono and dual-mono streams\n         */\n        if (gfp.short_blocks == ShortBlock.short_block_allowed\n            && (gfp.mode == MPEGMode.JOINT_STEREO || gfp.mode == MPEGMode.STEREO)) {\n            gfp.short_blocks = ShortBlock.short_block_coupled;\n        }\n\n        if (gfp.quant_comp < 0)\n            gfp.quant_comp = 1;\n        if (gfp.quant_comp_short < 0)\n            gfp.quant_comp_short = 0;\n\n        if (gfp.msfix < 0)\n            gfp.msfix = 0;\n\n        /* select psychoacoustic model */\n        gfp.exp_nspsytune = gfp.exp_nspsytune | 1;\n\n        if (gfp.internal_flags.nsPsy.attackthre < 0)\n            gfp.internal_flags.nsPsy.attackthre = PsyModel.NSATTACKTHRE;\n        if (gfp.internal_flags.nsPsy.attackthre_s < 0)\n            gfp.internal_flags.nsPsy.attackthre_s = PsyModel.NSATTACKTHRE_S;\n\n        assert(gfp.scale >= 0);\n\n        if (gfp.scale < 0)\n            gfp.scale = 1;\n\n        if (gfp.ATHtype < 0)\n            gfp.ATHtype = 4;\n\n        if (gfp.ATHcurve < 0)\n            gfp.ATHcurve = 4;\n\n        if (gfp.athaa_loudapprox < 0)\n            gfp.athaa_loudapprox = 2;\n\n        if (gfp.interChRatio < 0)\n            gfp.interChRatio = 0;\n\n        if (gfp.useTemporal == null)\n            gfp.useTemporal = true;\n        /* on by default */\n\n        /*\n         * padding method as described in\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\" by Martin Sieler, Ralph\n         * Sperschneider\n         *\n         * note: there is no padding for the very first frame\n         *\n         * Robert Hegemann 2000-06-22\n         */\n        gfc.slot_lag = gfc.frac_SpF = 0;\n        if (gfp.VBR == VbrMode.vbr_off)\n            gfc.slot_lag = gfc.frac_SpF = (((gfp.version + 1) * 72000 * gfp.brate) % gfp.out_samplerate) | 0;\n\n        qupvt.iteration_init(gfp);\n        psy.psymodel_init(gfp);\n        assert(gfp.scale >= 0);\n        return 0;\n    }\n\n    function update_inbuffer_size(gfc, nsamples) {\n        if (gfc.in_buffer_0 == null || gfc.in_buffer_nsamples < nsamples) {\n            gfc.in_buffer_0 = new_float(nsamples);\n            gfc.in_buffer_1 = new_float(nsamples);\n            gfc.in_buffer_nsamples = nsamples;\n        }\n    }\n\n    this.lame_encode_flush = function (gfp, mp3buffer, mp3bufferPos, mp3buffer_size) {\n        var gfc = gfp.internal_flags;\n        var buffer = new_short_n([2, 1152]);\n        var imp3 = 0, mp3count, mp3buffer_size_remaining;\n\n        /*\n         * we always add POSTDELAY=288 padding to make sure granule with real\n         * data can be complety decoded (because of 50% overlap with next\n         * granule\n         */\n        var end_padding;\n        var frames_left;\n        var samples_to_encode = gfc.mf_samples_to_encode - Encoder.POSTDELAY;\n        var mf_needed = calcNeeded(gfp);\n\n        /* Was flush already called? */\n        if (gfc.mf_samples_to_encode < 1) {\n            return 0;\n        }\n        mp3count = 0;\n\n        if (gfp.in_samplerate != gfp.out_samplerate) {\n            /*\n             * delay due to resampling; needs to be fixed, if resampling code\n             * gets changed\n             */\n            samples_to_encode += 16. * gfp.out_samplerate / gfp.in_samplerate;\n        }\n        end_padding = gfp.framesize - (samples_to_encode % gfp.framesize);\n        if (end_padding < 576)\n            end_padding += gfp.framesize;\n        gfp.encoder_padding = end_padding;\n\n        frames_left = (samples_to_encode + end_padding) / gfp.framesize;\n\n        /*\n         * send in a frame of 0 padding until all internal sample buffers are\n         * flushed\n         */\n        while (frames_left > 0 && imp3 >= 0) {\n            var bunch = mf_needed - gfc.mf_size;\n            var frame_num = gfp.frameNum;\n\n            bunch *= gfp.in_samplerate;\n            bunch /= gfp.out_samplerate;\n            if (bunch > 1152)\n                bunch = 1152;\n            if (bunch < 1)\n                bunch = 1;\n\n            mp3buffer_size_remaining = mp3buffer_size - mp3count;\n\n            /* if user specifed buffer size = 0, dont check size */\n            if (mp3buffer_size == 0)\n                mp3buffer_size_remaining = 0;\n\n            imp3 = this.lame_encode_buffer(gfp, buffer[0], buffer[1], bunch,\n                mp3buffer, mp3bufferPos, mp3buffer_size_remaining);\n\n            mp3bufferPos += imp3;\n            mp3count += imp3;\n            frames_left -= (frame_num != gfp.frameNum) ? 1 : 0;\n        }\n        /*\n         * Set gfc.mf_samples_to_encode to 0, so we may detect and break loops\n         * calling it more than once in a row.\n         */\n        gfc.mf_samples_to_encode = 0;\n\n        if (imp3 < 0) {\n            /* some type of fatal error */\n            return imp3;\n        }\n\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\n        /* if user specifed buffer size = 0, dont check size */\n        if (mp3buffer_size == 0)\n            mp3buffer_size_remaining = 0;\n\n        /* mp3 related stuff. bit buffer might still contain some mp3 data */\n        bs.flush_bitstream(gfp);\n        imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\n            mp3buffer_size_remaining, 1);\n        if (imp3 < 0) {\n            /* some type of fatal error */\n            return imp3;\n        }\n        mp3bufferPos += imp3;\n        mp3count += imp3;\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\n        /* if user specifed buffer size = 0, dont check size */\n        if (mp3buffer_size == 0)\n            mp3buffer_size_remaining = 0;\n\n        if (gfp.write_id3tag_automatic) {\n            /* write a id3 tag to the bitstream */\n            id3.id3tag_write_v1(gfp);\n\n            imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\n                mp3buffer_size_remaining, 0);\n\n            if (imp3 < 0) {\n                return imp3;\n            }\n            mp3count += imp3;\n        }\n        return mp3count;\n    };\n\n    this.lame_encode_buffer = function (gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\n        var gfc = gfp.internal_flags;\n        var in_buffer = [null, null];\n\n        if (gfc.Class_ID != LAME_ID)\n            return -3;\n\n        if (nsamples == 0)\n            return 0;\n\n        update_inbuffer_size(gfc, nsamples);\n\n        in_buffer[0] = gfc.in_buffer_0;\n        in_buffer[1] = gfc.in_buffer_1;\n\n        /* make a copy of input buffer, changing type to sample_t */\n        for (var i = 0; i < nsamples; i++) {\n            in_buffer[0][i] = buffer_l[i];\n            if (gfc.channels_in > 1)\n                in_buffer[1][i] = buffer_r[i];\n        }\n\n        return lame_encode_buffer_sample(gfp, in_buffer[0], in_buffer[1],\n            nsamples, mp3buf, mp3bufPos, mp3buf_size);\n    }\n\n    function calcNeeded(gfp) {\n        var mf_needed = Encoder.BLKSIZE + gfp.framesize - Encoder.FFTOFFSET;\n        /*\n         * amount needed for FFT\n         */\n        mf_needed = Math.max(mf_needed, 512 + gfp.framesize - 32);\n        assert(LameInternalFlags.MFSIZE >= mf_needed);\n\n        return mf_needed;\n    }\n\n    function lame_encode_buffer_sample(gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\n        var gfc = gfp.internal_flags;\n        var mp3size = 0, ret, i, ch, mf_needed;\n        var mp3out;\n        var mfbuf = [null, null];\n        var in_buffer = [null, null];\n\n        if (gfc.Class_ID != LAME_ID)\n            return -3;\n\n        if (nsamples == 0)\n            return 0;\n\n        /* copy out any tags that may have been written into bitstream */\n        mp3out = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 0);\n        if (mp3out < 0)\n            return mp3out;\n        /* not enough buffer space */\n        mp3bufPos += mp3out;\n        mp3size += mp3out;\n\n        in_buffer[0] = buffer_l;\n        in_buffer[1] = buffer_r;\n\n        /* Apply user defined re-scaling */\n\n        /* user selected scaling of the samples */\n        if (BitStream.NEQ(gfp.scale, 0) && BitStream.NEQ(gfp.scale, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] *= gfp.scale;\n                if (gfc.channels_out == 2)\n                    in_buffer[1][i] *= gfp.scale;\n            }\n        }\n\n        /* user selected scaling of the channel 0 (left) samples */\n        if (BitStream.NEQ(gfp.scale_left, 0)\n            && BitStream.NEQ(gfp.scale_left, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] *= gfp.scale_left;\n            }\n        }\n\n        /* user selected scaling of the channel 1 (right) samples */\n        if (BitStream.NEQ(gfp.scale_right, 0)\n            && BitStream.NEQ(gfp.scale_right, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[1][i] *= gfp.scale_right;\n            }\n        }\n\n        /* Downsample to Mono if 2 channels in and 1 channel out */\n        if (gfp.num_channels == 2 && gfc.channels_out == 1) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] = 0.5 * ( in_buffer[0][i] + in_buffer[1][i]);\n                in_buffer[1][i] = 0.0;\n            }\n        }\n\n        mf_needed = calcNeeded(gfp);\n\n        mfbuf[0] = gfc.mfbuf[0];\n        mfbuf[1] = gfc.mfbuf[1];\n\n        var in_bufferPos = 0;\n        while (nsamples > 0) {\n            var in_buffer_ptr = [null, null];\n            var n_in = 0;\n            /* number of input samples processed with fill_buffer */\n            var n_out = 0;\n            /* number of samples output with fill_buffer */\n            /* n_in <> n_out if we are resampling */\n\n            in_buffer_ptr[0] = in_buffer[0];\n            in_buffer_ptr[1] = in_buffer[1];\n            /* copy in new samples into mfbuf, with resampling */\n            var inOut = new InOut();\n            fill_buffer(gfp, mfbuf, in_buffer_ptr, in_bufferPos, nsamples,\n                inOut);\n            n_in = inOut.n_in;\n            n_out = inOut.n_out;\n\n            /* compute ReplayGain of resampled input if requested */\n            if (gfc.findReplayGain && !gfc.decode_on_the_fly)\n                if (ga.AnalyzeSamples(gfc.rgdata, mfbuf[0], gfc.mf_size,\n                        mfbuf[1], gfc.mf_size, n_out, gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                    return -6;\n\n            /* update in_buffer counters */\n            nsamples -= n_in;\n            in_bufferPos += n_in;\n            if (gfc.channels_out == 2)\n                ;// in_bufferPos += n_in;\n\n            /* update mfbuf[] counters */\n            gfc.mf_size += n_out;\n            assert(gfc.mf_size <= LameInternalFlags.MFSIZE);\n\n            /*\n             * lame_encode_flush may have set gfc.mf_sample_to_encode to 0 so we\n             * have to reinitialize it here when that happened.\n             */\n            if (gfc.mf_samples_to_encode < 1) {\n                gfc.mf_samples_to_encode = Encoder.ENCDELAY + Encoder.POSTDELAY;\n            }\n            gfc.mf_samples_to_encode += n_out;\n\n            if (gfc.mf_size >= mf_needed) {\n                /* encode the frame. */\n                /* mp3buf = pointer to current location in buffer */\n                /* mp3buf_size = size of original mp3 output buffer */\n                /* = 0 if we should not worry about the */\n                /* buffer size because calling program is */\n                /* to lazy to compute it */\n                /* mp3size = size of data written to buffer so far */\n                /* mp3buf_size-mp3size = amount of space avalable */\n\n                var buf_size = mp3buf_size - mp3size;\n                if (mp3buf_size == 0)\n                    buf_size = 0;\n\n                ret = lame_encode_frame(gfp, mfbuf[0], mfbuf[1], mp3buf,\n                    mp3bufPos, buf_size);\n\n                if (ret < 0)\n                    return ret;\n                mp3bufPos += ret;\n                mp3size += ret;\n\n                /* shift out old samples */\n                gfc.mf_size -= gfp.framesize;\n                gfc.mf_samples_to_encode -= gfp.framesize;\n                for (ch = 0; ch < gfc.channels_out; ch++)\n                    for (i = 0; i < gfc.mf_size; i++)\n                        mfbuf[ch][i] = mfbuf[ch][i + gfp.framesize];\n            }\n        }\n        assert(nsamples == 0);\n\n        return mp3size;\n    }\n\n    function lame_encode_frame(gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\n        var ret = self.enc.lame_encode_mp3_frame(gfp, inbuf_l, inbuf_r, mp3buf,\n            mp3bufPos, mp3buf_size);\n        gfp.frameNum++;\n        return ret;\n    }\n\n    function InOut() {\n        this.n_in = 0;\n        this.n_out = 0;\n    }\n\n\n    function NumUsed() {\n        this.num_used = 0;\n    }\n\n    /**\n     * Greatest common divisor.\n     * <p>\n     * Joint work of Euclid and M. Hendry\n     */\n    function gcd(i, j) {\n        return j != 0 ? gcd(j, i % j) : i;\n    }\n\n    /**\n     * Resampling via FIR filter, blackman window.\n     */\n    function blackman(x, fcn, l) {\n        /*\n         * This algorithm from: SIGNAL PROCESSING ALGORITHMS IN FORTRAN AND C\n         * S.D. Stearns and R.A. David, Prentice-Hall, 1992\n         */\n        var wcn = (Math.PI * fcn);\n\n        x /= l;\n        if (x < 0)\n            x = 0;\n        if (x > 1)\n            x = 1;\n        var x2 = x - .5;\n\n        var bkwn = 0.42 - 0.5 * Math.cos(2 * x * Math.PI) + 0.08 * Math.cos(4 * x * Math.PI);\n        if (Math.abs(x2) < 1e-9)\n            return (wcn / Math.PI);\n        else\n            return (bkwn * Math.sin(l * wcn * x2) / (Math.PI * l * x2));\n    }\n\n    function fill_buffer_resample(gfp, outbuf, outbufPos, desired_len, inbuf, in_bufferPos, len, num_used, ch) {\n        var gfc = gfp.internal_flags;\n        var i, j = 0, k;\n        /* number of convolution functions to pre-compute */\n        var bpc = gfp.out_samplerate\n            / gcd(gfp.out_samplerate, gfp.in_samplerate);\n        if (bpc > LameInternalFlags.BPC)\n            bpc = LameInternalFlags.BPC;\n\n        var intratio = (Math.abs(gfc.resample_ratio\n            - Math.floor(.5 + gfc.resample_ratio)) < .0001) ? 1 : 0;\n        var fcn = 1.00 / gfc.resample_ratio;\n        if (fcn > 1.00)\n            fcn = 1.00;\n        var filter_l = 31;\n        if (0 == filter_l % 2)\n            --filter_l;\n        /* must be odd */\n        filter_l += intratio;\n        /* unless resample_ratio=int, it must be even */\n\n        var BLACKSIZE = filter_l + 1;\n        /* size of data needed for FIR */\n\n        if (gfc.fill_buffer_resample_init == 0) {\n            gfc.inbuf_old[0] = new_float(BLACKSIZE);\n            gfc.inbuf_old[1] = new_float(BLACKSIZE);\n            for (i = 0; i <= 2 * bpc; ++i)\n                gfc.blackfilt[i] = new_float(BLACKSIZE);\n\n            gfc.itime[0] = 0;\n            gfc.itime[1] = 0;\n\n            /* precompute blackman filter coefficients */\n            for (j = 0; j <= 2 * bpc; j++) {\n                var sum = 0.;\n                var offset = (j - bpc) / (2. * bpc);\n                for (i = 0; i <= filter_l; i++)\n                    sum += gfc.blackfilt[j][i] = blackman(i - offset, fcn,\n                        filter_l);\n                for (i = 0; i <= filter_l; i++)\n                    gfc.blackfilt[j][i] /= sum;\n            }\n            gfc.fill_buffer_resample_init = 1;\n        }\n\n        var inbuf_old = gfc.inbuf_old[ch];\n\n        /* time of j'th element in inbuf = itime + j/ifreq; */\n        /* time of k'th element in outbuf = j/ofreq */\n        for (k = 0; k < desired_len; k++) {\n            var time0;\n            var joff;\n\n            time0 = k * gfc.resample_ratio;\n            /* time of k'th output sample */\n            j = 0 | Math.floor(time0 - gfc.itime[ch]);\n\n            /* check if we need more input data */\n            if ((filter_l + j - filter_l / 2) >= len)\n                break;\n\n            /* blackman filter. by default, window centered at j+.5(filter_l%2) */\n            /* but we want a window centered at time0. */\n            var offset = (time0 - gfc.itime[ch] - (j + .5 * (filter_l % 2)));\n            assert(Math.abs(offset) <= .501);\n\n            /* find the closest precomputed window for this offset: */\n            joff = 0 | Math.floor((offset * 2 * bpc) + bpc + .5);\n            var xvalue = 0.;\n            for (i = 0; i <= filter_l; ++i) {\n                var j2 = i + j - filter_l / 2;\n                var y;\n                assert(j2 < len);\n                assert(j2 + BLACKSIZE >= 0);\n                y = (j2 < 0) ? inbuf_old[BLACKSIZE + j2] : inbuf[in_bufferPos\n                + j2];\n                xvalue += y * gfc.blackfilt[joff][i];\n            }\n            outbuf[outbufPos + k] = xvalue;\n        }\n\n        /* k = number of samples added to outbuf */\n        /* last k sample used data from [j-filter_l/2,j+filter_l-filter_l/2] */\n\n        /* how many samples of input data were used: */\n        num_used.num_used = Math.min(len, filter_l + j - filter_l / 2);\n\n        /*\n         * adjust our input time counter. Incriment by the number of samples\n         * used, then normalize so that next output sample is at time 0, next\n         * input buffer is at time itime[ch]\n         */\n        gfc.itime[ch] += num_used.num_used - k * gfc.resample_ratio;\n\n        /* save the last BLACKSIZE samples into the inbuf_old buffer */\n        if (num_used.num_used >= BLACKSIZE) {\n            for (i = 0; i < BLACKSIZE; i++)\n                inbuf_old[i] = inbuf[in_bufferPos + num_used.num_used + i\n                - BLACKSIZE];\n        } else {\n            /* shift in num_used.num_used samples into inbuf_old */\n            var n_shift = BLACKSIZE - num_used.num_used;\n            /*\n             * number of samples to\n             * shift\n             */\n\n            /*\n             * shift n_shift samples by num_used.num_used, to make room for the\n             * num_used new samples\n             */\n            for (i = 0; i < n_shift; ++i)\n                inbuf_old[i] = inbuf_old[i + num_used.num_used];\n\n            /* shift in the num_used.num_used samples */\n            for (j = 0; i < BLACKSIZE; ++i, ++j)\n                inbuf_old[i] = inbuf[in_bufferPos + j];\n\n            assert(j == num_used.num_used);\n        }\n        return k;\n        /* return the number samples created at the new samplerate */\n    }\n\n    function fill_buffer(gfp, mfbuf, in_buffer, in_bufferPos, nsamples, io) {\n        var gfc = gfp.internal_flags;\n\n        /* copy in new samples into mfbuf, with resampling if necessary */\n        if ((gfc.resample_ratio < .9999) || (gfc.resample_ratio > 1.0001)) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var numUsed = new NumUsed();\n                io.n_out = fill_buffer_resample(gfp, mfbuf[ch], gfc.mf_size,\n                    gfp.framesize, in_buffer[ch], in_bufferPos, nsamples,\n                    numUsed, ch);\n                io.n_in = numUsed.num_used;\n            }\n        } else {\n            io.n_out = Math.min(gfp.framesize, nsamples);\n            io.n_in = io.n_out;\n            for (var i = 0; i < io.n_out; ++i) {\n                mfbuf[0][gfc.mf_size + i] = in_buffer[0][in_bufferPos + i];\n                if (gfc.channels_out == 2)\n                    mfbuf[1][gfc.mf_size + i] = in_buffer[1][in_bufferPos + i];\n            }\n        }\n    }\n\n}\n\nmodule.exports = Lame;\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\n/**\n * A Vbr header may be present in the ancillary data field of the first frame of\n * an mp3 bitstream<BR>\n * The Vbr header (optionally) contains\n * <UL>\n * <LI>frames total number of audio frames in the bitstream\n * <LI>bytes total number of bytes in the bitstream\n * <LI>toc table of contents\n * </UL>\n *\n * toc (table of contents) gives seek points for random access.<BR>\n * The ith entry determines the seek point for i-percent duration.<BR>\n * seek point in bytes = (toc[i]/256.0) * total_bitstream_bytes<BR>\n * e.g. half duration seek point = (toc[50]/256.0) * total_bitstream_bytes\n */\nVBRTag.NUMTOCENTRIES = 100;\nVBRTag.MAXFRAMESIZE = 2880;\n\nfunction VBRTag() {\n\n    var lame;\n    var bs;\n    var v;\n\n    this.setModules = function (_lame, _bs, _v) {\n        lame = _lame;\n        bs = _bs;\n        v = _v;\n    };\n\n    var FRAMES_FLAG = 0x0001;\n    var BYTES_FLAG = 0x0002;\n    var TOC_FLAG = 0x0004;\n    var VBR_SCALE_FLAG = 0x0008;\n\n    var NUMTOCENTRIES = VBRTag.NUMTOCENTRIES;\n\n    /**\n     * (0xB40) the max freeformat 640 32kHz framesize.\n     */\n    var MAXFRAMESIZE = VBRTag.MAXFRAMESIZE;\n\n    /**\n     * <PRE>\n     *    4 bytes for Header Tag\n     *    4 bytes for Header Flags\n     *  100 bytes for entry (toc)\n     *    4 bytes for frame size\n     *    4 bytes for stream size\n     *    4 bytes for VBR scale. a VBR quality indicator: 0=best 100=worst\n     *   20 bytes for LAME tag.  for example, \"LAME3.12 (beta 6)\"\n     * ___________\n     *  140 bytes\n     * </PRE>\n     */\n    var VBRHEADERSIZE = (NUMTOCENTRIES + 4 + 4 + 4 + 4 + 4);\n\n    var LAMEHEADERSIZE = (VBRHEADERSIZE + 9 + 1 + 1 + 8\n    + 1 + 1 + 3 + 1 + 1 + 2 + 4 + 2 + 2);\n\n    /**\n     * The size of the Xing header MPEG-1, bit rate in kbps.\n     */\n    var XING_BITRATE1 = 128;\n    /**\n     * The size of the Xing header MPEG-2, bit rate in kbps.\n     */\n    var XING_BITRATE2 = 64;\n    /**\n     * The size of the Xing header MPEG-2.5, bit rate in kbps.\n     */\n    var XING_BITRATE25 = 32;\n\n    /**\n     * ISO-8859-1 charset for byte to string operations.\n     */\n    var ISO_8859_1 = null; //Charset.forName(\"ISO-8859-1\");\n\n    /**\n     * VBR header magic string.\n     */\n    var VBRTag0 = \"Xing\";\n    /**\n     * VBR header magic string (VBR == VBRMode.vbr_off).\n     */\n    var VBRTag1 = \"Info\";\n\n    /**\n     * Lookup table for fast CRC-16 computation. Uses the polynomial\n     * x^16+x^15+x^2+1\n     */\n    var crc16Lookup = [0x0000, 0xC0C1, 0xC181, 0x0140,\n        0xC301, 0x03C0, 0x0280, 0xC241, 0xC601, 0x06C0, 0x0780, 0xC741,\n        0x0500, 0xC5C1, 0xC481, 0x0440, 0xCC01, 0x0CC0, 0x0D80, 0xCD41,\n        0x0F00, 0xCFC1, 0xCE81, 0x0E40, 0x0A00, 0xCAC1, 0xCB81, 0x0B40,\n        0xC901, 0x09C0, 0x0880, 0xC841, 0xD801, 0x18C0, 0x1980, 0xD941,\n        0x1B00, 0xDBC1, 0xDA81, 0x1A40, 0x1E00, 0xDEC1, 0xDF81, 0x1F40,\n        0xDD01, 0x1DC0, 0x1C80, 0xDC41, 0x1400, 0xD4C1, 0xD581, 0x1540,\n        0xD701, 0x17C0, 0x1680, 0xD641, 0xD201, 0x12C0, 0x1380, 0xD341,\n        0x1100, 0xD1C1, 0xD081, 0x1040, 0xF001, 0x30C0, 0x3180, 0xF141,\n        0x3300, 0xF3C1, 0xF281, 0x3240, 0x3600, 0xF6C1, 0xF781, 0x3740,\n        0xF501, 0x35C0, 0x3480, 0xF441, 0x3C00, 0xFCC1, 0xFD81, 0x3D40,\n        0xFF01, 0x3FC0, 0x3E80, 0xFE41, 0xFA01, 0x3AC0, 0x3B80, 0xFB41,\n        0x3900, 0xF9C1, 0xF881, 0x3840, 0x2800, 0xE8C1, 0xE981, 0x2940,\n        0xEB01, 0x2BC0, 0x2A80, 0xEA41, 0xEE01, 0x2EC0, 0x2F80, 0xEF41,\n        0x2D00, 0xEDC1, 0xEC81, 0x2C40, 0xE401, 0x24C0, 0x2580, 0xE541,\n        0x2700, 0xE7C1, 0xE681, 0x2640, 0x2200, 0xE2C1, 0xE381, 0x2340,\n        0xE101, 0x21C0, 0x2080, 0xE041, 0xA001, 0x60C0, 0x6180, 0xA141,\n        0x6300, 0xA3C1, 0xA281, 0x6240, 0x6600, 0xA6C1, 0xA781, 0x6740,\n        0xA501, 0x65C0, 0x6480, 0xA441, 0x6C00, 0xACC1, 0xAD81, 0x6D40,\n        0xAF01, 0x6FC0, 0x6E80, 0xAE41, 0xAA01, 0x6AC0, 0x6B80, 0xAB41,\n        0x6900, 0xA9C1, 0xA881, 0x6840, 0x7800, 0xB8C1, 0xB981, 0x7940,\n        0xBB01, 0x7BC0, 0x7A80, 0xBA41, 0xBE01, 0x7EC0, 0x7F80, 0xBF41,\n        0x7D00, 0xBDC1, 0xBC81, 0x7C40, 0xB401, 0x74C0, 0x7580, 0xB541,\n        0x7700, 0xB7C1, 0xB681, 0x7640, 0x7200, 0xB2C1, 0xB381, 0x7340,\n        0xB101, 0x71C0, 0x7080, 0xB041, 0x5000, 0x90C1, 0x9181, 0x5140,\n        0x9301, 0x53C0, 0x5280, 0x9241, 0x9601, 0x56C0, 0x5780, 0x9741,\n        0x5500, 0x95C1, 0x9481, 0x5440, 0x9C01, 0x5CC0, 0x5D80, 0x9D41,\n        0x5F00, 0x9FC1, 0x9E81, 0x5E40, 0x5A00, 0x9AC1, 0x9B81, 0x5B40,\n        0x9901, 0x59C0, 0x5880, 0x9841, 0x8801, 0x48C0, 0x4980, 0x8941,\n        0x4B00, 0x8BC1, 0x8A81, 0x4A40, 0x4E00, 0x8EC1, 0x8F81, 0x4F40,\n        0x8D01, 0x4DC0, 0x4C80, 0x8C41, 0x4400, 0x84C1, 0x8581, 0x4540,\n        0x8701, 0x47C0, 0x4680, 0x8641, 0x8201, 0x42C0, 0x4380, 0x8341,\n        0x4100, 0x81C1, 0x8081, 0x4040];\n\n    /***********************************************************************\n     * Robert Hegemann 2001-01-17\n     ***********************************************************************/\n\n    function addVbr(v, bitrate) {\n        v.nVbrNumFrames++;\n        v.sum += bitrate;\n        v.seen++;\n\n        if (v.seen < v.want) {\n            return;\n        }\n\n        if (v.pos < v.size) {\n            v.bag[v.pos] = v.sum;\n            v.pos++;\n            v.seen = 0;\n        }\n        if (v.pos == v.size) {\n            for (var i = 1; i < v.size; i += 2) {\n                v.bag[i / 2] = v.bag[i];\n            }\n            v.want *= 2;\n            v.pos /= 2;\n        }\n    }\n\n    function xingSeekTable(v, t) {\n        if (v.pos <= 0)\n            return;\n\n        for (var i = 1; i < NUMTOCENTRIES; ++i) {\n            var j = i / NUMTOCENTRIES, act, sum;\n            var indx = 0 | (Math.floor(j * v.pos));\n            if (indx > v.pos - 1)\n                indx = v.pos - 1;\n            act = v.bag[indx];\n            sum = v.sum;\n            var seek_point = 0 | (256. * act / sum);\n            if (seek_point > 255)\n                seek_point = 255;\n            t[i] = 0xff & seek_point;\n        }\n    }\n\n    /**\n     * Add VBR entry, used to fill the VBR TOC entries.\n     *\n     * @param gfp\n     *            global flags\n     */\n    this.addVbrFrame = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var kbps = Tables.bitrate_table[gfp.version][gfc.bitrate_index];\n        assert(gfc.VBR_seek_table.bag != null);\n        addVbr(gfc.VBR_seek_table, kbps);\n    }\n\n    /**\n     * Read big endian integer (4-bytes) from header.\n     *\n     * @param buf\n     *            header containing the integer\n     * @param bufPos\n     *            offset into the header\n     * @return extracted integer\n     */\n    function extractInteger(buf, bufPos) {\n        var x = buf[bufPos + 0] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 1] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 2] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 3] & 0xff;\n        return x;\n    }\n\n    /**\n     * Write big endian integer (4-bytes) in the header.\n     *\n     * @param buf\n     *            header to write the integer into\n     * @param bufPos\n     *            offset into the header\n     * @param value\n     *            integer value to write\n     */\n    function createInteger(buf, bufPos, value) {\n        buf[bufPos + 0] = 0xff & ((value >> 24) & 0xff);\n        buf[bufPos + 1] = 0xff & ((value >> 16) & 0xff);\n        buf[bufPos + 2] = 0xff & ((value >> 8) & 0xff);\n        buf[bufPos + 3] = 0xff & (value & 0xff);\n    }\n\n    /**\n     * Write big endian short (2-bytes) in the header.\n     *\n     * @param buf\n     *            header to write the integer into\n     * @param bufPos\n     *            offset into the header\n     * @param value\n     *            integer value to write\n     */\n    function createShort(buf, bufPos, value) {\n        buf[bufPos + 0] = 0xff & ((value >> 8) & 0xff);\n        buf[bufPos + 1] = 0xff & (value & 0xff);\n    }\n\n    /**\n     * Check for magic strings (Xing/Info).\n     *\n     * @param buf\n     *            header to check\n     * @param bufPos\n     *            header offset to check\n     * @return magic string found\n     */\n    function isVbrTag(buf, bufPos) {\n        return new String(buf, bufPos, VBRTag0.length(), ISO_8859_1)\n                .equals(VBRTag0)\n            || new String(buf, bufPos, VBRTag1.length(), ISO_8859_1)\n                .equals(VBRTag1);\n    }\n\n    function shiftInBitsValue(x, n, v) {\n        return 0xff & ((x << n) | (v & ~(-1 << n)));\n    }\n\n    /**\n     * Construct the MP3 header using the settings of the global flags.\n     *\n     * <img src=\"1000px-Mp3filestructure.svg.png\">\n     *\n     * @param gfp\n     *            global flags\n     * @param buffer\n     *            header\n     */\n    function setLameTagFrameHeader(gfp, buffer) {\n        var gfc = gfp.internal_flags;\n\n        // MP3 Sync Word\n        buffer[0] = shiftInBitsValue(buffer[0], 8, 0xff);\n\n        buffer[1] = shiftInBitsValue(buffer[1], 3, 7);\n        buffer[1] = shiftInBitsValue(buffer[1], 1,\n            (gfp.out_samplerate < 16000) ? 0 : 1);\n        // Version\n        buffer[1] = shiftInBitsValue(buffer[1], 1, gfp.version);\n        // 01 == Layer 3\n        buffer[1] = shiftInBitsValue(buffer[1], 2, 4 - 3);\n        // Error protection\n        buffer[1] = shiftInBitsValue(buffer[1], 1, (!gfp.error_protection) ? 1\n            : 0);\n\n        // Bit rate\n        buffer[2] = shiftInBitsValue(buffer[2], 4, gfc.bitrate_index);\n        // Frequency\n        buffer[2] = shiftInBitsValue(buffer[2], 2, gfc.samplerate_index);\n        // Pad. Bit\n        buffer[2] = shiftInBitsValue(buffer[2], 1, 0);\n        // Priv. Bit\n        buffer[2] = shiftInBitsValue(buffer[2], 1, gfp.extension);\n\n        // Mode\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.mode.ordinal());\n        // Mode extension (Used with Joint Stereo)\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfc.mode_ext);\n        // Copy\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.copyright);\n        // Original\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.original);\n        // Emphasis\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.emphasis);\n\n        /* the default VBR header. 48 kbps layer III, no padding, no crc */\n        /* but sampling freq, mode and copyright/copy protection taken */\n        /* from first valid frame */\n        buffer[0] = 0xff;\n        var abyte = 0xff & (buffer[1] & 0xf1);\n        var bitrate;\n        if (1 == gfp.version) {\n            bitrate = XING_BITRATE1;\n        } else {\n            if (gfp.out_samplerate < 16000)\n                bitrate = XING_BITRATE25;\n            else\n                bitrate = XING_BITRATE2;\n        }\n\n        if (gfp.VBR == VbrMode.vbr_off)\n            bitrate = gfp.brate;\n\n        var bbyte;\n        if (gfp.free_format)\n            bbyte = 0x00;\n        else\n            bbyte = 0xff & (16 * lame.BitrateIndex(bitrate, gfp.version,\n                    gfp.out_samplerate));\n\n        /*\n         * Use as much of the info from the real frames in the Xing header:\n         * samplerate, channels, crc, etc...\n         */\n        if (gfp.version == 1) {\n            /* MPEG1 */\n            buffer[1] = 0xff & (abyte | 0x0a);\n            /* was 0x0b; */\n            abyte = 0xff & (buffer[2] & 0x0d);\n            /* AF keep also private bit */\n            buffer[2] = 0xff & (bbyte | abyte);\n            /* 64kbs MPEG1 frame */\n        } else {\n            /* MPEG2 */\n            buffer[1] = 0xff & (abyte | 0x02);\n            /* was 0x03; */\n            abyte = 0xff & (buffer[2] & 0x0d);\n            /* AF keep also private bit */\n            buffer[2] = 0xff & (bbyte | abyte);\n            /* 64kbs MPEG2 frame */\n        }\n    }\n\n    /**\n     * Get VBR tag information\n     *\n     * @param buf\n     *            header to analyze\n     * @param bufPos\n     *            offset into the header\n     * @return VBR tag data\n     */\n    this.getVbrTag = function (buf) {\n        var pTagData = new VBRTagData();\n        var bufPos = 0;\n\n        /* get Vbr header data */\n        pTagData.flags = 0;\n\n        /* get selected MPEG header data */\n        var hId = (buf[bufPos + 1] >> 3) & 1;\n        var hSrIndex = (buf[bufPos + 2] >> 2) & 3;\n        var hMode = (buf[bufPos + 3] >> 6) & 3;\n        var hBitrate = ((buf[bufPos + 2] >> 4) & 0xf);\n        hBitrate = Tables.bitrate_table[hId][hBitrate];\n\n        /* check for FFE syncword */\n        if ((buf[bufPos + 1] >> 4) == 0xE)\n            pTagData.samprate = Tables.samplerate_table[2][hSrIndex];\n        else\n            pTagData.samprate = Tables.samplerate_table[hId][hSrIndex];\n\n        /* determine offset of header */\n        if (hId != 0) {\n            /* mpeg1 */\n            if (hMode != 3)\n                bufPos += (32 + 4);\n            else\n                bufPos += (17 + 4);\n        } else {\n            /* mpeg2 */\n            if (hMode != 3)\n                bufPos += (17 + 4);\n            else\n                bufPos += (9 + 4);\n        }\n\n        if (!isVbrTag(buf, bufPos))\n            return null;\n\n        bufPos += 4;\n\n        pTagData.hId = hId;\n\n        /* get flags */\n        var head_flags = pTagData.flags = extractInteger(buf, bufPos);\n        bufPos += 4;\n\n        if ((head_flags & FRAMES_FLAG) != 0) {\n            pTagData.frames = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        if ((head_flags & BYTES_FLAG) != 0) {\n            pTagData.bytes = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        if ((head_flags & TOC_FLAG) != 0) {\n            if (pTagData.toc != null) {\n                for (var i = 0; i < NUMTOCENTRIES; i++)\n                    pTagData.toc[i] = buf[bufPos + i];\n            }\n            bufPos += NUMTOCENTRIES;\n        }\n\n        pTagData.vbrScale = -1;\n\n        if ((head_flags & VBR_SCALE_FLAG) != 0) {\n            pTagData.vbrScale = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        pTagData.headersize = ((hId + 1) * 72000 * hBitrate)\n            / pTagData.samprate;\n\n        bufPos += 21;\n        var encDelay = buf[bufPos + 0] << 4;\n        encDelay += buf[bufPos + 1] >> 4;\n        var encPadding = (buf[bufPos + 1] & 0x0F) << 8;\n        encPadding += buf[bufPos + 2] & 0xff;\n        /* check for reasonable values (this may be an old Xing header, */\n        /* not a INFO tag) */\n        if (encDelay < 0 || encDelay > 3000)\n            encDelay = -1;\n        if (encPadding < 0 || encPadding > 3000)\n            encPadding = -1;\n\n        pTagData.encDelay = encDelay;\n        pTagData.encPadding = encPadding;\n\n        /* success */\n        return pTagData;\n    }\n\n    /**\n     * Initializes the header\n     *\n     * @param gfp\n     *            global flags\n     */\n    this.InitVbrTag = function (gfp) {\n        var gfc = gfp.internal_flags;\n\n        /**\n         * <PRE>\n         * Xing VBR pretends to be a 48kbs layer III frame.  (at 44.1kHz).\n         * (at 48kHz they use 56kbs since 48kbs frame not big enough for\n         * table of contents)\n         * let's always embed Xing header inside a 64kbs layer III frame.\n         * this gives us enough room for a LAME version string too.\n         * size determined by sampling frequency (MPEG1)\n         * 32kHz:    216 bytes@48kbs    288bytes@ 64kbs\n         * 44.1kHz:  156 bytes          208bytes@64kbs     (+1 if padding = 1)\n         * 48kHz:    144 bytes          192\n         *\n         * MPEG 2 values are the same since the framesize and samplerate\n         * are each reduced by a factor of 2.\n         * </PRE>\n         */\n        var kbps_header;\n        if (1 == gfp.version) {\n            kbps_header = XING_BITRATE1;\n        } else {\n            if (gfp.out_samplerate < 16000)\n                kbps_header = XING_BITRATE25;\n            else\n                kbps_header = XING_BITRATE2;\n        }\n\n        if (gfp.VBR == VbrMode.vbr_off)\n            kbps_header = gfp.brate;\n\n        // make sure LAME Header fits into Frame\n        var totalFrameSize = ((gfp.version + 1) * 72000 * kbps_header)\n            / gfp.out_samplerate;\n        var headerSize = (gfc.sideinfo_len + LAMEHEADERSIZE);\n        gfc.VBR_seek_table.TotalFrameSize = totalFrameSize;\n        if (totalFrameSize < headerSize || totalFrameSize > MAXFRAMESIZE) {\n            /* disable tag, it wont fit */\n            gfp.bWriteVbrTag = false;\n            return;\n        }\n\n        gfc.VBR_seek_table.nVbrNumFrames = 0;\n        gfc.VBR_seek_table.nBytesWritten = 0;\n        gfc.VBR_seek_table.sum = 0;\n\n        gfc.VBR_seek_table.seen = 0;\n        gfc.VBR_seek_table.want = 1;\n        gfc.VBR_seek_table.pos = 0;\n\n        if (gfc.VBR_seek_table.bag == null) {\n            gfc.VBR_seek_table.bag = new int[400];\n            gfc.VBR_seek_table.size = 400;\n        }\n\n        // write dummy VBR tag of all 0's into bitstream\n        var buffer = new_byte(MAXFRAMESIZE);\n\n        setLameTagFrameHeader(gfp, buffer);\n        var n = gfc.VBR_seek_table.TotalFrameSize;\n        for (var i = 0; i < n; ++i) {\n            bs.add_dummy_byte(gfp, buffer[i] & 0xff, 1);\n        }\n    }\n\n    /**\n     * Fast CRC-16 computation (uses table crc16Lookup).\n     *\n     * @param value\n     * @param crc\n     * @return\n     */\n    function crcUpdateLookup(value, crc) {\n        var tmp = crc ^ value;\n        crc = (crc >> 8) ^ crc16Lookup[tmp & 0xff];\n        return crc;\n    }\n\n    this.updateMusicCRC = function (crc, buffer, bufferPos, size) {\n        for (var i = 0; i < size; ++i)\n            crc[0] = crcUpdateLookup(buffer[bufferPos + i], crc[0]);\n    }\n\n    /**\n     * Write LAME info: mini version + info on various switches used (Jonathan\n     * Dee 2001/08/31).\n     *\n     * @param gfp\n     *            global flags\n     * @param musicLength\n     *            music length\n     * @param streamBuffer\n     *            pointer to output buffer\n     * @param streamBufferPos\n     *            offset into the output buffer\n     * @param crc\n     *            computation of CRC-16 of Lame Tag so far (starting at frame\n     *            sync)\n     * @return number of bytes written to the stream\n     */\n    function putLameVBR(gfp, musicLength, streamBuffer, streamBufferPos, crc) {\n        var gfc = gfp.internal_flags;\n        var bytesWritten = 0;\n\n        /* encoder delay */\n        var encDelay = gfp.encoder_delay;\n        /* encoder padding */\n        var encPadding = gfp.encoder_padding;\n\n        /* recall: gfp.VBR_q is for example set by the switch -V */\n        /* gfp.quality by -q, -h, -f, etc */\n        var quality = (100 - 10 * gfp.VBR_q - gfp.quality);\n\n        var version = v.getLameVeryShortVersion();\n        var vbr;\n        var revision = 0x00;\n        var revMethod;\n        // numbering different in vbr_mode vs. Lame tag\n        var vbrTypeTranslator = [1, 5, 3, 2, 4, 0, 3];\n        var lowpass = 0 | (((gfp.lowpassfreq / 100.0) + .5) > 255 ? 255\n                : (gfp.lowpassfreq / 100.0) + .5);\n        var peakSignalAmplitude = 0;\n        var radioReplayGain = 0;\n        var audiophileReplayGain = 0;\n        var noiseShaping = gfp.internal_flags.noise_shaping;\n        var stereoMode = 0;\n        var nonOptimal = 0;\n        var sourceFreq = 0;\n        var misc = 0;\n        var musicCRC = 0;\n\n        // psy model type: Gpsycho or NsPsytune\n        var expNPsyTune = (gfp.exp_nspsytune & 1) != 0;\n        var safeJoint = (gfp.exp_nspsytune & 2) != 0;\n        var noGapMore = false;\n        var noGapPrevious = false;\n        var noGapCount = gfp.internal_flags.nogap_total;\n        var noGapCurr = gfp.internal_flags.nogap_current;\n\n        // 4 bits\n        var athType = gfp.ATHtype;\n        var flags = 0;\n\n        // vbr modes\n        var abrBitrate;\n        switch (gfp.VBR) {\n            case vbr_abr:\n                abrBitrate = gfp.VBR_mean_bitrate_kbps;\n                break;\n            case vbr_off:\n                abrBitrate = gfp.brate;\n                break;\n            default:\n                abrBitrate = gfp.VBR_min_bitrate_kbps;\n        }\n\n        // revision and vbr method\n        if (gfp.VBR.ordinal() < vbrTypeTranslator.length)\n            vbr = vbrTypeTranslator[gfp.VBR.ordinal()];\n        else\n            vbr = 0x00; // unknown\n\n        revMethod = 0x10 * revision + vbr;\n\n        // ReplayGain\n        if (gfc.findReplayGain) {\n            if (gfc.RadioGain > 0x1FE)\n                gfc.RadioGain = 0x1FE;\n            if (gfc.RadioGain < -0x1FE)\n                gfc.RadioGain = -0x1FE;\n\n            // set name code\n            radioReplayGain = 0x2000;\n            // set originator code to `determined automatically'\n            radioReplayGain |= 0xC00;\n\n            if (gfc.RadioGain >= 0) {\n                // set gain adjustment\n                radioReplayGain |= gfc.RadioGain;\n            } else {\n                // set the sign bit\n                radioReplayGain |= 0x200;\n                // set gain adjustment\n                radioReplayGain |= -gfc.RadioGain;\n            }\n        }\n\n        // peak sample\n        if (gfc.findPeakSample)\n            peakSignalAmplitude = Math\n                .abs(0 | ((( gfc.PeakSample) / 32767.0) * Math.pow(2, 23) + .5));\n\n        // nogap\n        if (noGapCount != -1) {\n            if (noGapCurr > 0)\n                noGapPrevious = true;\n\n            if (noGapCurr < noGapCount - 1)\n                noGapMore = true;\n        }\n\n        // flags\n        flags = athType + ((expNPsyTune ? 1 : 0) << 4)\n            + ((safeJoint ? 1 : 0) << 5) + ((noGapMore ? 1 : 0) << 6)\n            + ((noGapPrevious ? 1 : 0) << 7);\n\n        if (quality < 0)\n            quality = 0;\n\n        // stereo mode field (Intensity stereo is not implemented)\n        switch (gfp.mode) {\n            case MONO:\n                stereoMode = 0;\n                break;\n            case STEREO:\n                stereoMode = 1;\n                break;\n            case DUAL_CHANNEL:\n                stereoMode = 2;\n                break;\n            case JOINT_STEREO:\n                if (gfp.force_ms)\n                    stereoMode = 4;\n                else\n                    stereoMode = 3;\n                break;\n            case NOT_SET:\n            //$FALL-THROUGH$\n            default:\n                stereoMode = 7;\n                break;\n        }\n\n        if (gfp.in_samplerate <= 32000)\n            sourceFreq = 0x00;\n        else if (gfp.in_samplerate == 48000)\n            sourceFreq = 0x02;\n        else if (gfp.in_samplerate > 48000)\n            sourceFreq = 0x03;\n        else {\n            // default is 44100Hz\n            sourceFreq = 0x01;\n        }\n\n        // Check if the user overrided the default LAME behavior with some\n        // nasty options\n        if (gfp.short_blocks == ShortBlock.short_block_forced\n            || gfp.short_blocks == ShortBlock.short_block_dispensed\n            || ((gfp.lowpassfreq == -1) && (gfp.highpassfreq == -1)) || /* \"-k\" */\n            (gfp.scale_left < gfp.scale_right)\n            || (gfp.scale_left > gfp.scale_right)\n            || (gfp.disable_reservoir && gfp.brate < 320) || gfp.noATH\n            || gfp.ATHonly || (athType == 0) || gfp.in_samplerate <= 32000)\n            nonOptimal = 1;\n\n        misc = noiseShaping + (stereoMode << 2) + (nonOptimal << 5)\n            + (sourceFreq << 6);\n\n        musicCRC = gfc.nMusicCRC;\n\n        // Write all this information into the stream\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, quality);\n        bytesWritten += 4;\n\n        for (var j = 0; j < 9; j++) {\n            streamBuffer[streamBufferPos + bytesWritten + j] = 0xff & version .charAt(j);\n        }\n        bytesWritten += 9;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & revMethod;\n        bytesWritten++;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & lowpass;\n        bytesWritten++;\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten,\n            peakSignalAmplitude);\n        bytesWritten += 4;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\n            radioReplayGain);\n        bytesWritten += 2;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\n            audiophileReplayGain);\n        bytesWritten += 2;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & flags;\n        bytesWritten++;\n\n        if (abrBitrate >= 255)\n            streamBuffer[streamBufferPos + bytesWritten] = 0xFF;\n        else\n            streamBuffer[streamBufferPos + bytesWritten] = 0xff & abrBitrate;\n        bytesWritten++;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & (encDelay >> 4);\n        streamBuffer[streamBufferPos + bytesWritten + 1] = 0xff & ((encDelay << 4) + (encPadding >> 8));\n        streamBuffer[streamBufferPos + bytesWritten + 2] = 0xff & encPadding;\n\n        bytesWritten += 3;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & misc;\n        bytesWritten++;\n\n        // unused in rev0\n        streamBuffer[streamBufferPos + bytesWritten++] = 0;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, gfp.preset);\n        bytesWritten += 2;\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, musicLength);\n        bytesWritten += 4;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, musicCRC);\n        bytesWritten += 2;\n\n        // Calculate tag CRC.... must be done here, since it includes previous\n        // information\n\n        for (var i = 0; i < bytesWritten; i++)\n            crc = crcUpdateLookup(streamBuffer[streamBufferPos + i], crc);\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, crc);\n        bytesWritten += 2;\n\n        return bytesWritten;\n    }\n\n    function skipId3v2(fpStream) {\n        // seek to the beginning of the stream\n        fpStream.seek(0);\n        // read 10 bytes in case there's an ID3 version 2 header here\n        var id3v2Header = new_byte(10);\n        fpStream.readFully(id3v2Header);\n        /* does the stream begin with the ID3 version 2 file identifier? */\n        var id3v2TagSize;\n        if (!new String(id3v2Header, \"ISO-8859-1\").startsWith(\"ID3\")) {\n            /*\n             * the tag size (minus the 10-byte header) is encoded into four\n             * bytes where the most significant bit is clear in each byte\n             */\n            id3v2TagSize = (((id3v2Header[6] & 0x7f) << 21)\n                | ((id3v2Header[7] & 0x7f) << 14)\n                | ((id3v2Header[8] & 0x7f) << 7) | (id3v2Header[9] & 0x7f))\n                + id3v2Header.length;\n        } else {\n            /* no ID3 version 2 tag in this stream */\n            id3v2TagSize = 0;\n        }\n        return id3v2TagSize;\n    }\n\n    this.getLameTagFrame = function (gfp, buffer) {\n        var gfc = gfp.internal_flags;\n\n        if (!gfp.bWriteVbrTag) {\n            return 0;\n        }\n        if (gfc.Class_ID != Lame.LAME_ID) {\n            return 0;\n        }\n        if (gfc.VBR_seek_table.pos <= 0) {\n            return 0;\n        }\n        if (buffer.length < gfc.VBR_seek_table.TotalFrameSize) {\n            return gfc.VBR_seek_table.TotalFrameSize;\n        }\n\n        Arrays.fill(buffer, 0, gfc.VBR_seek_table.TotalFrameSize, 0);\n\n        // 4 bytes frame header\n        setLameTagFrameHeader(gfp, buffer);\n\n        // Create TOC entries\n        var toc = new_byte(NUMTOCENTRIES);\n\n        if (gfp.free_format) {\n            for (var i = 1; i < NUMTOCENTRIES; ++i)\n                toc[i] = 0xff & (255 * i / 100);\n        } else {\n            xingSeekTable(gfc.VBR_seek_table, toc);\n        }\n\n        // Start writing the tag after the zero frame\n        var streamIndex = gfc.sideinfo_len;\n        /**\n         * Note: Xing header specifies that Xing data goes in the ancillary data\n         * with NO ERROR PROTECTION. If error protecton in enabled, the Xing\n         * data still starts at the same offset, and now it is in sideinfo data\n         * block, and thus will not decode correctly by non-Xing tag aware\n         * players\n         */\n        if (gfp.error_protection)\n            streamIndex -= 2;\n\n        // Put Vbr tag\n        if (gfp.VBR == VbrMode.vbr_off) {\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(0);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(1);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(2);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(3);\n\n        } else {\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(0);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(1);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(2);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(3);\n        }\n\n        // Put header flags\n        createInteger(buffer, streamIndex, FRAMES_FLAG + BYTES_FLAG + TOC_FLAG\n            + VBR_SCALE_FLAG);\n        streamIndex += 4;\n\n        // Put Total Number of frames\n        createInteger(buffer, streamIndex, gfc.VBR_seek_table.nVbrNumFrames);\n        streamIndex += 4;\n\n        // Put total audio stream size, including Xing/LAME Header\n        var streamSize = (gfc.VBR_seek_table.nBytesWritten + gfc.VBR_seek_table.TotalFrameSize);\n        createInteger(buffer, streamIndex, 0 | streamSize);\n        streamIndex += 4;\n\n        /* Put TOC */\n        System.arraycopy(toc, 0, buffer, streamIndex, toc.length);\n        streamIndex += toc.length;\n\n        if (gfp.error_protection) {\n            // (jo) error_protection: add crc16 information to header\n            bs.CRC_writeheader(gfc, buffer);\n        }\n\n        // work out CRC so far: initially crc = 0\n        var crc = 0x00;\n        for (var i = 0; i < streamIndex; i++)\n            crc = crcUpdateLookup(buffer[i], crc);\n        // Put LAME VBR info\n        streamIndex += putLameVBR(gfp, streamSize, buffer, streamIndex, crc);\n\n        return gfc.VBR_seek_table.TotalFrameSize;\n    }\n\n    /**\n     * Write final VBR tag to the file.\n     *\n     * @param gfp\n     *            global flags\n     * @param stream\n     *            stream to add the VBR tag to\n     * @return 0 (OK), -1 else\n     * @throws IOException\n     *             I/O error\n     */\n    this.putVbrTag = function (gfp, stream) {\n        var gfc = gfp.internal_flags;\n\n        if (gfc.VBR_seek_table.pos <= 0)\n            return -1;\n\n        // Seek to end of file\n        stream.seek(stream.length());\n\n        // Get file size, abort if file has zero length.\n        if (stream.length() == 0)\n            return -1;\n\n        // The VBR tag may NOT be located at the beginning of the stream. If an\n        // ID3 version 2 tag was added, then it must be skipped to write the VBR\n        // tag data.\n        var id3v2TagSize = skipId3v2(stream);\n\n        // Seek to the beginning of the stream\n        stream.seek(id3v2TagSize);\n\n        var buffer = new_byte(MAXFRAMESIZE);\n        var bytes = getLameTagFrame(gfp, buffer);\n        if (bytes > buffer.length) {\n            return -1;\n        }\n\n        if (bytes < 1) {\n            return 0;\n        }\n\n        // Put it all to disk again\n        stream.write(buffer, 0, bytes);\n        // success\n        return 0;\n    }\n\n}\n\nmodule.exports = VBRTag;\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });\nvar FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\n$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {\n    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);\n  }\n});\n","function MeanBits(meanBits) {\n    this.bits = meanBits;\n}\n\nmodule.exports = MeanBits;\n","//package mp3;\n\nvar III_psy_xmin = require('./III_psy_xmin.js');\n\nfunction III_psy_ratio() {\n\tthis.thm = new III_psy_xmin();\n\tthis.en = new III_psy_xmin();\n}\n\nmodule.exports = III_psy_ratio;\n","//package mp3;\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar L3Side = require('./L3Side.js');\n\nfunction GrInfo() {\n    //float xr[] = new float[576];\n    this.xr = new_float(576);\n    //int l3_enc[] = new int[576];\n    this.l3_enc = new_int(576);\n    //int scalefac[] = new int[L3Side.SFBMAX];\n    this.scalefac = new_int(L3Side.SFBMAX);\n    this.xrpow_max = 0.;\n\n    this.part2_3_length = 0;\n    this.big_values = 0;\n    this.count1 = 0;\n    this.global_gain = 0;\n    this.scalefac_compress = 0;\n    this.block_type = 0;\n    this.mixed_block_flag = 0;\n    this.table_select = new_int(3);\n    this.subblock_gain = new_int(3 + 1);\n    this.region0_count = 0;\n    this.region1_count = 0;\n    this.preflag = 0;\n    this.scalefac_scale = 0;\n    this.count1table_select = 0;\n\n    this.part2_length = 0;\n    this.sfb_lmax = 0;\n    this.sfb_smin = 0;\n    this.psy_lmax = 0;\n    this.sfbmax = 0;\n    this.psymax = 0;\n    this.sfbdivide = 0;\n    this.width = new_int(L3Side.SFBMAX);\n    this.window = new_int(L3Side.SFBMAX);\n    this.count1bits = 0;\n    /**\n     * added for LSF\n     */\n    this.sfb_partition_table = null;\n    this.slen = new_int(4);\n\n    this.max_nonzero_coeff = 0;\n\n    var self = this;\n    function clone_int(array) {\n        return new Int32Array(array);\n    }\n    function clone_float(array) {\n        return new Float32Array(array);\n    }\n    this.assign = function (other) {\n        self.xr = clone_float(other.xr); //.slice(0); //clone();\n        self.l3_enc = clone_int(other.l3_enc); //.slice(0); //clone();\n        self.scalefac = clone_int(other.scalefac);//.slice(0); //clone();\n        self.xrpow_max = other.xrpow_max;\n\n        self.part2_3_length = other.part2_3_length;\n        self.big_values = other.big_values;\n        self.count1 = other.count1;\n        self.global_gain = other.global_gain;\n        self.scalefac_compress = other.scalefac_compress;\n        self.block_type = other.block_type;\n        self.mixed_block_flag = other.mixed_block_flag;\n        self.table_select = clone_int(other.table_select);//.slice(0); //clone();\n        self.subblock_gain = clone_int(other.subblock_gain); //.slice(0); //.clone();\n        self.region0_count = other.region0_count;\n        self.region1_count = other.region1_count;\n        self.preflag = other.preflag;\n        self.scalefac_scale = other.scalefac_scale;\n        self.count1table_select = other.count1table_select;\n\n        self.part2_length = other.part2_length;\n        self.sfb_lmax = other.sfb_lmax;\n        self.sfb_smin = other.sfb_smin;\n        self.psy_lmax = other.psy_lmax;\n        self.sfbmax = other.sfbmax;\n        self.psymax = other.psymax;\n        self.sfbdivide = other.sfbdivide;\n        self.width = clone_int(other.width); //.slice(0); //.clone();\n        self.window = clone_int(other.window); //.slice(0); //.clone();\n        self.count1bits = other.count1bits;\n\n        self.sfb_partition_table = other.sfb_partition_table.slice(0); //.clone();\n        self.slen = clone_int(other.slen); //.slice(0); //.clone();\n        self.max_nonzero_coeff = other.max_nonzero_coeff;\n    }\n}\n\nmodule.exports = GrInfo;\n","/*\n *      MP3 window subband -> subband filtering -> mdct routine\n *\n *      Copyright (c) 1999-2000 Takehiro Tominaga\n *\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Library General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n/*\n *         Special Thanks to Patrick De Smet for your advices.\n */\n\n/* $Id: NewMDCT.java,v 1.11 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\n\n\nfunction NewMDCT() {\n\n\tvar enwindow = [\n\t\t\t-4.77e-07 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.03951e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.53674e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.841473e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.5758972e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.401756e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.83715e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.740951125354959 / 2.384e-06, /* 15 */\n\t\t\t1.2398e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.91212e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.283096e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.6994476e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.8756866e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.630711e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.47478e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.4782e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.063471690191471e-01, 1.960342806591213e-01,\n\n\t\t\t-4.77e-07 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.05858e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.30786e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.521515e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.5694122e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.643036e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.91821e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.6321e-05 * 0.773010453362737 / 2.384e-06, /* 14 */\n\t\t\t1.1444e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.65462e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.110004e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.6112804e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.9634247e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.803326e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.77042e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.6689e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t8.206787908286602e-01, 3.901806440322567e-01,\n\n\t\t\t-4.77e-07 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.07288e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.02653e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t2.174854e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.5586357e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.858566e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.95159e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.3460e-05 * 0.803207531480645 / 2.384e-06, /* 13 */\n\t\t\t1.0014e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.40190e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.937389e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.5233517e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.0506859e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.974033e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t-3.07560e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t-1.8120e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t7.416505462720353e-01, 5.805693545089249e-01,\n\n\t\t\t-4.77e-07 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t8.68797e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.800537e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t3.5435200e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t4.049301e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.94205e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.0599e-05 * 0.831469612302545 / 2.384e-06, /* 12 */\n\t\t\t9.060e-06 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.16348e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.766682e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.4358521e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-2.1372318e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.14188e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.39031e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t-1.9550e-05 * 0.831469612302545 / 2.384e-06,\n\t\t\t6.681786379192989e-01, 7.653668647301797e-01,\n\n\t\t\t-4.77e-07 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.29220e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.399517e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t3.5242081e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t4.215240e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.89437e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.7261e-05 * 0.857728610000272 / 2.384e-06, /* 11 */\n\t\t\t8.106e-06 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.3937e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.597881e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.3489246e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.2228718e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.306866e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.71456e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.1458e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t5.993769336819237e-01, 9.427934736519954e-01,\n\n\t\t\t-4.77e-07 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.8392e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.71317e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t3.5007000e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t4.357815e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.80854e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t8.3923e-05 * 0.881921264348355 / 2.384e-06, /* 10 */\n\t\t\t7.629e-06 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.2956e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.432419e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.2627602e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3074150e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-3.467083e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t-4.04358e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3365e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t5.345111359507916e-01, 1.111140466039205e+00,\n\n\t\t\t-9.54e-07 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t7.31945e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.15938e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t3.4730434e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.477024e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t9.68933e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t8.0585e-05 * 0.903989293123443 / 2.384e-06, /* 9 */\n\t\t\t6.676e-06 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.269817e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.1775017e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.3907185e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-3.622532e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t-4.38213e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.5272e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.729647758913199e-01, 1.268786568327291e+00,\n\n\t\t\t-9.54e-07 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.06812e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.74248e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.3379e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4412861e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.573822e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t9.54151e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t7.6771e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.199e-06 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4332e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.111031e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.0933399e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.4725437e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-3.771782e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-4.72546e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.7657e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.1421356237309504879e-01, /* tan(PI/8) */\n\t\t\t1.414213562373095e+00,\n\n\t\t\t-9.54e-07 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.05381e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t6.10352e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-4.75883e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.4055710e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t4.649162e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.35555e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t7.3433e-05 * 0.941544065183021 / 2.384e-06, /* 7 */\n\t\t\t5.245e-06 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.7166e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.56535e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.0103703e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-2.5527000e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.914356e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t-5.07355e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.0041e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.578057213145241e-01, 1.546020906725474e+00,\n\n\t\t\t-9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t1.02520e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t5.39303e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-1.011848e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.3659935e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t4.703045e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.15051e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t7.0095e-05 * 0.956940335732209 / 2.384e-06, /* 6 */\n\t\t\t4.768e-06 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t8.06808e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.287834e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-2.6310921e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t-4.048824e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-5.42164e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-3.2425e-05 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.033466836073424e-01, 1.662939224605090e+00,\n\n\t\t\t-1.431e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.62532e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.573563e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t3.3225536e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.737377e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.91685e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.6280e-05 * 0.970031253194544 / 2.384e-06, /* 5 */\n\t\t\t4.292e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.3828e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.61850e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.487225e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-2.7073860e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t-4.174709e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-5.76973e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-3.4809e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t2.504869601913055e-01, 1.763842528696710e+00,\n\n\t\t\t-1.431e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t9.5367e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.78609e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.161503e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.2754898e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t4.752159e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t8.66413e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t6.2943e-05 * 0.98078528040323 / 2.384e-06, /* 4 */\n\t\t\t3.815e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.718e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t5.22137e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t7.703304e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.7815342e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t-4.290581e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-6.11782e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-3.7670e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t1.989123673796580e-01, 1.847759065022573e+00,\n\n\t\t\t-1.907e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t9.0122e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t2.88486e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.774239e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.2248020e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t4.748821e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t8.38757e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t5.9605e-05 * 0.989176509964781 / 2.384e-06, /* 3 */\n\t\t\t3.338e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t-3.9577e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.88145e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t6.937027e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.8532982e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.395962e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-6.46591e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.0531e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t1.483359875383474e-01, 1.913880671464418e+00,\n\n\t\t\t-1.907e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.4400e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t1.91689e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-3.411293e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.1706810e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t4.728317e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.09669e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t5.579e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.338e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t-5.0545e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t2.59876e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t6.189346e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-2.9224873e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.489899e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-6.80923e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.3392e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t9.849140335716425e-02, 1.961570560806461e+00,\n\n\t\t\t-2.384e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.7724e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t8.8215e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.072189e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t3.1132698e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.691124e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.79152e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t2.861e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t-6.0558e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t1.37329e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.462170e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-2.9890060e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.570484e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-7.14302e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.6253e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.912684976946725e-02, 1.990369453344394e+00,\n\n\t\t\t3.5780907e-02 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.7876148e-02 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t3.134727e-03 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.457142e-03 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t9.71317e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.18868e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.01566e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.3828e-05 * Util.SQRT2 * 0.5 / 2.384e-06,\n\n\t\t\t3.0526638e-02 / 2.384e-06, 4.638195e-03 / 2.384e-06,\n\t\t\t7.47204e-04 / 2.384e-06, 4.9591e-05 / 2.384e-06,\n\t\t\t4.756451e-03 / 2.384e-06, 2.1458e-05 / 2.384e-06,\n\t\t\t-6.9618e-05 / 2.384e-06, /* 2.384e-06/2.384e-06 */\n\t];\n\n\tvar NS = 12;\n\tvar NL = 36;\n\n\tvar win = [\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049690e-13,\n\t     6.423305872147839e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943412e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758252e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558783e-12,\n\t     8.371015190102974e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.456116108943412e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758252e-12,\n\t     -2.858043359288076e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558783e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347923e-13,\n\t     -6.423305872147843e-13,\n\t     -9.400849094049696e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049694e-13,\n\t     -6.423305872147840e-13,\n\t     -2.382191739347918e-13,\n\t     ],\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049688e-13,\n\t     6.423305872147841e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943413e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758253e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558782e-12,\n\t     8.371015190102975e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.461314069809755e-12,\n\t     -4.921085770524055e-12,\n\t     -4.343405037091838e-12,\n\t     -3.732668368707687e-12,\n\t     -3.093523840190885e-12,\n\t     -2.430835727329465e-12,\n\t     -1.734679010007751e-12,\n\t     -9.748253656609281e-13,\n\t     -2.797435120168326e-13,\n\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     -2.283748241799531e-13,\n\t     -4.037858874020686e-13,\n\t     -2.146547464825323e-13,\n\t     ],\n\t    [\n\t     1.316524975873958e-01, /* win[SHORT_TYPE] */\n\t     4.142135623730950e-01,\n\t     7.673269879789602e-01,\n\n\t     1.091308501069271e+00, /* tantab_l */\n\t     1.303225372841206e+00,\n\t     1.569685577117490e+00,\n\t     1.920982126971166e+00,\n\t     2.414213562373094e+00,\n\t     3.171594802363212e+00,\n\t     4.510708503662055e+00,\n\t     7.595754112725146e+00,\n\t     2.290376554843115e+01,\n\n\t     0.98480775301220802032, /* cx */\n\t     0.64278760968653936292,\n\t     0.34202014332566882393,\n\t     0.93969262078590842791,\n\t     -0.17364817766693030343,\n\t     -0.76604444311897790243,\n\t     0.86602540378443870761,\n\t     0.500000000000000e+00,\n\n\t     -5.144957554275265e-01, /* ca */\n\t     -4.717319685649723e-01,\n\t     -3.133774542039019e-01,\n\t     -1.819131996109812e-01,\n\t     -9.457419252642064e-02,\n\t     -4.096558288530405e-02,\n\t     -1.419856857247115e-02,\n\t     -3.699974673760037e-03,\n\n\t     8.574929257125442e-01, /* cs */\n\t     8.817419973177052e-01,\n\t     9.496286491027329e-01,\n\t     9.833145924917901e-01,\n\t     9.955178160675857e-01,\n\t     9.991605581781475e-01,\n\t     9.998991952444470e-01,\n\t     9.999931550702802e-01,\n\t     ],\n\t    [\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     2.283748241799531e-13,\n\t     4.037858874020686e-13,\n\t     2.146547464825323e-13,\n\n\t     5.461314069809755e-12,\n\t     4.921085770524055e-12,\n\t     4.343405037091838e-12,\n\t     3.732668368707687e-12,\n\t     3.093523840190885e-12,\n\t     2.430835727329466e-12,\n\t     1.734679010007751e-12,\n\t     9.748253656609281e-13,\n\t     2.797435120168326e-13,\n\n\t     -5.456116108943413e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758253e-12,\n\t     -2.858043359288075e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558782e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347913e-13,\n\t     -6.423305872147834e-13,\n\t     -9.400849094049688e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049688e-13,\n\t     -6.423305872147841e-13,\n\t     -2.382191739347918e-13,\n\t     ]\n\t];\n\n\tvar tantab_l = win[Encoder.SHORT_TYPE];\n\tvar cx = win[Encoder.SHORT_TYPE];\n\tvar ca = win[Encoder.SHORT_TYPE];\n\tvar cs = win[Encoder.SHORT_TYPE];\n\n\t/**\n\t * new IDCT routine written by Takehiro TOMINAGA\n\t *\n\t * PURPOSE: Overlapping window on PCM samples<BR>\n\t *\n\t * SEMANTICS:<BR>\n\t * 32 16-bit pcm samples are scaled to fractional 2's complement and\n\t * concatenated to the end of the window buffer #x#. The updated window\n\t * buffer #x# is then windowed by the analysis window #c# to produce the\n\t * windowed sample #z#\n\t */\n\tvar order = [\n\t    0, 1, 16, 17, 8, 9, 24, 25, 4, 5, 20, 21, 12, 13, 28, 29,\n\t    2, 3, 18, 19, 10, 11, 26, 27, 6, 7, 22, 23, 14, 15, 30, 31\n\t];\n\n\t/**\n\t * returns sum_j=0^31 a[j]*cos(PI*j*(k+1/2)/32), 0<=k<32\n\t */\n\tfunction window_subband(x1, x1Pos, a) {\n\t\tvar wp = 10;\n\n\t\tvar x2 = x1Pos + 238 - 14 - 286;\n\n\t\tfor (var i = -15; i < 0; i++) {\n\t\t\tvar w, s, t;\n\n\t\t\tw = enwindow[wp + -10];\n\t\t\ts = x1[x2 + -224] * w;\n\t\t\tt = x1[x1Pos + 224] * w;\n\t\t\tw = enwindow[wp + -9];\n\t\t\ts += x1[x2 + -160] * w;\n\t\t\tt += x1[x1Pos + 160] * w;\n\t\t\tw = enwindow[wp + -8];\n\t\t\ts += x1[x2 + -96] * w;\n\t\t\tt += x1[x1Pos + 96] * w;\n\t\t\tw = enwindow[wp + -7];\n\t\t\ts += x1[x2 + -32] * w;\n\t\t\tt += x1[x1Pos + 32] * w;\n\t\t\tw = enwindow[wp + -6];\n\t\t\ts += x1[x2 + 32] * w;\n\t\t\tt += x1[x1Pos + -32] * w;\n\t\t\tw = enwindow[wp + -5];\n\t\t\ts += x1[x2 + 96] * w;\n\t\t\tt += x1[x1Pos + -96] * w;\n\t\t\tw = enwindow[wp + -4];\n\t\t\ts += x1[x2 + 160] * w;\n\t\t\tt += x1[x1Pos + -160] * w;\n\t\t\tw = enwindow[wp + -3];\n\t\t\ts += x1[x2 + 224] * w;\n\t\t\tt += x1[x1Pos + -224] * w;\n\n\t\t\tw = enwindow[wp + -2];\n\t\t\ts += x1[x1Pos + -256] * w;\n\t\t\tt -= x1[x2 + 256] * w;\n\t\t\tw = enwindow[wp + -1];\n\t\t\ts += x1[x1Pos + -192] * w;\n\t\t\tt -= x1[x2 + 192] * w;\n\t\t\tw = enwindow[wp + 0];\n\t\t\ts += x1[x1Pos + -128] * w;\n\t\t\tt -= x1[x2 + 128] * w;\n\t\t\tw = enwindow[wp + 1];\n\t\t\ts += x1[x1Pos + -64] * w;\n\t\t\tt -= x1[x2 + 64] * w;\n\t\t\tw = enwindow[wp + 2];\n\t\t\ts += x1[x1Pos + 0] * w;\n\t\t\tt -= x1[x2 + 0] * w;\n\t\t\tw = enwindow[wp + 3];\n\t\t\ts += x1[x1Pos + 64] * w;\n\t\t\tt -= x1[x2 + -64] * w;\n\t\t\tw = enwindow[wp + 4];\n\t\t\ts += x1[x1Pos + 128] * w;\n\t\t\tt -= x1[x2 + -128] * w;\n\t\t\tw = enwindow[wp + 5];\n\t\t\ts += x1[x1Pos + 192] * w;\n\t\t\tt -= x1[x2 + -192] * w;\n\n\t\t\t/*\n\t\t\t * this multiplyer could be removed, but it needs more 256 FLOAT\n\t\t\t * data. thinking about the data cache performance, I think we\n\t\t\t * should not use such a huge table. tt 2000/Oct/25\n\t\t\t */\n\t\t\ts *= enwindow[wp + 6];\n\t\t\tw = t - s;\n\t\t\ta[30 + i * 2] = t + s;\n\t\t\ta[31 + i * 2] = enwindow[wp + 7] * w;\n\t\t\twp += 18;\n\t\t\tx1Pos--;\n\t\t\tx2++;\n\t\t}\n\t\t{\n\t\t\tvar s, t, u, v;\n\t\t\tt = x1[x1Pos + -16] * enwindow[wp + -10];\n\t\t\ts = x1[x1Pos + -32] * enwindow[wp + -2];\n\t\t\tt += (x1[x1Pos + -48] - x1[x1Pos + 16]) * enwindow[wp + -9];\n\t\t\ts += x1[x1Pos + -96] * enwindow[wp + -1];\n\t\t\tt += (x1[x1Pos + -80] + x1[x1Pos + 48]) * enwindow[wp + -8];\n\t\t\ts += x1[x1Pos + -160] * enwindow[wp + 0];\n\t\t\tt += (x1[x1Pos + -112] - x1[x1Pos + 80]) * enwindow[wp + -7];\n\t\t\ts += x1[x1Pos + -224] * enwindow[wp + 1];\n\t\t\tt += (x1[x1Pos + -144] + x1[x1Pos + 112]) * enwindow[wp + -6];\n\t\t\ts -= x1[x1Pos + 32] * enwindow[wp + 2];\n\t\t\tt += (x1[x1Pos + -176] - x1[x1Pos + 144]) * enwindow[wp + -5];\n\t\t\ts -= x1[x1Pos + 96] * enwindow[wp + 3];\n\t\t\tt += (x1[x1Pos + -208] + x1[x1Pos + 176]) * enwindow[wp + -4];\n\t\t\ts -= x1[x1Pos + 160] * enwindow[wp + 4];\n\t\t\tt += (x1[x1Pos + -240] - x1[x1Pos + 208]) * enwindow[wp + -3];\n\t\t\ts -= x1[x1Pos + 224];\n\n\t\t\tu = s - t;\n\t\t\tv = s + t;\n\n\t\t\tt = a[14];\n\t\t\ts = a[15] - t;\n\n\t\t\ta[31] = v + t; /* A0 */\n\t\t\ta[30] = u + s; /* A1 */\n\t\t\ta[15] = u - s; /* A2 */\n\t\t\ta[14] = v - t; /* A3 */\n\t\t}\n\t\t{\n\t\t\tvar xr;\n\t\t\txr = a[28] - a[0];\n\t\t\ta[0] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -2 * 18 + 7];\n\t\t\txr = a[29] - a[1];\n\t\t\ta[1] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -2 * 18 + 7];\n\n\t\t\txr = a[26] - a[2];\n\t\t\ta[2] += a[26];\n\t\t\ta[26] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[27] - a[3];\n\t\t\ta[3] += a[27];\n\t\t\ta[27] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = a[24] - a[4];\n\t\t\ta[4] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -6 * 18 + 7];\n\t\t\txr = a[25] - a[5];\n\t\t\ta[5] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -6 * 18 + 7];\n\n\t\t\txr = a[22] - a[6];\n\t\t\ta[6] += a[22];\n\t\t\ta[22] = xr * Util.SQRT2;\n\t\t\txr = a[23] - a[7];\n\t\t\ta[7] += a[23];\n\t\t\ta[23] = xr * Util.SQRT2 - a[7];\n\t\t\ta[7] -= a[6];\n\t\t\ta[22] -= a[7];\n\t\t\ta[23] -= a[22];\n\n\t\t\txr = a[6];\n\t\t\ta[6] = a[31] - xr;\n\t\t\ta[31] = a[31] + xr;\n\t\t\txr = a[7];\n\t\t\ta[7] = a[30] - xr;\n\t\t\ta[30] = a[30] + xr;\n\t\t\txr = a[22];\n\t\t\ta[22] = a[15] - xr;\n\t\t\ta[15] = a[15] + xr;\n\t\t\txr = a[23];\n\t\t\ta[23] = a[14] - xr;\n\t\t\ta[14] = a[14] + xr;\n\n\t\t\txr = a[20] - a[8];\n\t\t\ta[8] += a[20];\n\t\t\ta[20] = xr * enwindow[wp + -10 * 18 + 7];\n\t\t\txr = a[21] - a[9];\n\t\t\ta[9] += a[21];\n\t\t\ta[21] = xr * enwindow[wp + -10 * 18 + 7];\n\n\t\t\txr = a[18] - a[10];\n\t\t\ta[10] += a[18];\n\t\t\ta[18] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[19] - a[11];\n\t\t\ta[11] += a[19];\n\t\t\ta[19] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[16] - a[12];\n\t\t\ta[12] += a[16];\n\t\t\ta[16] = xr * enwindow[wp + -14 * 18 + 7];\n\t\t\txr = a[17] - a[13];\n\t\t\ta[13] += a[17];\n\t\t\ta[17] = xr * enwindow[wp + -14 * 18 + 7];\n\n\t\t\txr = -a[20] + a[24];\n\t\t\ta[20] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = -a[21] + a[25];\n\t\t\ta[21] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[4] - a[8];\n\t\t\ta[4] += a[8];\n\t\t\ta[8] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[5] - a[9];\n\t\t\ta[5] += a[9];\n\t\t\ta[9] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[0] - a[12];\n\t\t\ta[0] += a[12];\n\t\t\ta[12] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[1] - a[13];\n\t\t\ta[1] += a[13];\n\t\t\ta[13] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[16] - a[28];\n\t\t\ta[16] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = -a[17] + a[29];\n\t\t\ta[17] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = Util.SQRT2 * (a[2] - a[10]);\n\t\t\ta[2] += a[10];\n\t\t\ta[10] = xr;\n\t\t\txr = Util.SQRT2 * (a[3] - a[11]);\n\t\t\ta[3] += a[11];\n\t\t\ta[11] = xr;\n\t\t\txr = Util.SQRT2 * (-a[18] + a[26]);\n\t\t\ta[18] += a[26];\n\t\t\ta[26] = xr - a[18];\n\t\t\txr = Util.SQRT2 * (-a[19] + a[27]);\n\t\t\ta[19] += a[27];\n\t\t\ta[27] = xr - a[19];\n\n\t\t\txr = a[2];\n\t\t\ta[19] -= a[3];\n\t\t\ta[3] -= xr;\n\t\t\ta[2] = a[31] - xr;\n\t\t\ta[31] += xr;\n\t\t\txr = a[3];\n\t\t\ta[11] -= a[19];\n\t\t\ta[18] -= xr;\n\t\t\ta[3] = a[30] - xr;\n\t\t\ta[30] += xr;\n\t\t\txr = a[18];\n\t\t\ta[27] -= a[11];\n\t\t\ta[19] -= xr;\n\t\t\ta[18] = a[15] - xr;\n\t\t\ta[15] += xr;\n\n\t\t\txr = a[19];\n\t\t\ta[10] -= xr;\n\t\t\ta[19] = a[14] - xr;\n\t\t\ta[14] += xr;\n\t\t\txr = a[10];\n\t\t\ta[11] -= xr;\n\t\t\ta[10] = a[23] - xr;\n\t\t\ta[23] += xr;\n\t\t\txr = a[11];\n\t\t\ta[26] -= xr;\n\t\t\ta[11] = a[22] - xr;\n\t\t\ta[22] += xr;\n\t\t\txr = a[26];\n\t\t\ta[27] -= xr;\n\t\t\ta[26] = a[7] - xr;\n\t\t\ta[7] += xr;\n\n\t\t\txr = a[27];\n\t\t\ta[27] = a[6] - xr;\n\t\t\ta[6] += xr;\n\n\t\t\txr = Util.SQRT2 * (a[0] - a[4]);\n\t\t\ta[0] += a[4];\n\t\t\ta[4] = xr;\n\t\t\txr = Util.SQRT2 * (a[1] - a[5]);\n\t\t\ta[1] += a[5];\n\t\t\ta[5] = xr;\n\t\t\txr = Util.SQRT2 * (a[16] - a[20]);\n\t\t\ta[16] += a[20];\n\t\t\ta[20] = xr;\n\t\t\txr = Util.SQRT2 * (a[17] - a[21]);\n\t\t\ta[17] += a[21];\n\t\t\ta[21] = xr;\n\n\t\t\txr = -Util.SQRT2 * (a[8] - a[12]);\n\t\t\ta[8] += a[12];\n\t\t\ta[12] = xr - a[8];\n\t\t\txr = -Util.SQRT2 * (a[9] - a[13]);\n\t\t\ta[9] += a[13];\n\t\t\ta[13] = xr - a[9];\n\t\t\txr = -Util.SQRT2 * (a[25] - a[29]);\n\t\t\ta[25] += a[29];\n\t\t\ta[29] = xr - a[25];\n\t\t\txr = -Util.SQRT2 * (a[24] + a[28]);\n\t\t\ta[24] -= a[28];\n\t\t\ta[28] = xr - a[24];\n\n\t\t\txr = a[24] - a[16];\n\t\t\ta[24] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\n\t\t\txr = a[25] - a[17];\n\t\t\ta[25] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[17] - a[1];\n\t\t\ta[17] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[1] - a[0];\n\t\t\ta[1] = xr;\n\t\t\txr = a[16] - xr;\n\t\t\ta[16] = xr;\n\t\t\txr = a[17] - xr;\n\t\t\ta[17] = xr;\n\t\t\txr = a[8] - xr;\n\t\t\ta[8] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[24] - xr;\n\t\t\ta[24] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[4] - xr;\n\t\t\ta[4] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[12] - xr;\n\t\t\ta[12] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[0];\n\t\t\ta[0] += a[31];\n\t\t\ta[31] -= xr;\n\t\t\txr = a[1];\n\t\t\ta[1] += a[30];\n\t\t\ta[30] -= xr;\n\t\t\txr = a[16];\n\t\t\ta[16] += a[15];\n\t\t\ta[15] -= xr;\n\t\t\txr = a[17];\n\t\t\ta[17] += a[14];\n\t\t\ta[14] -= xr;\n\t\t\txr = a[8];\n\t\t\ta[8] += a[23];\n\t\t\ta[23] -= xr;\n\t\t\txr = a[9];\n\t\t\ta[9] += a[22];\n\t\t\ta[22] -= xr;\n\t\t\txr = a[24];\n\t\t\ta[24] += a[7];\n\t\t\ta[7] -= xr;\n\t\t\txr = a[25];\n\t\t\ta[25] += a[6];\n\t\t\ta[6] -= xr;\n\t\t\txr = a[4];\n\t\t\ta[4] += a[27];\n\t\t\ta[27] -= xr;\n\t\t\txr = a[5];\n\t\t\ta[5] += a[26];\n\t\t\ta[26] -= xr;\n\t\t\txr = a[20];\n\t\t\ta[20] += a[11];\n\t\t\ta[11] -= xr;\n\t\t\txr = a[21];\n\t\t\ta[21] += a[10];\n\t\t\ta[10] -= xr;\n\t\t\txr = a[12];\n\t\t\ta[12] += a[19];\n\t\t\ta[19] -= xr;\n\t\t\txr = a[13];\n\t\t\ta[13] += a[18];\n\t\t\ta[18] -= xr;\n\t\t\txr = a[28];\n\t\t\ta[28] += a[3];\n\t\t\ta[3] -= xr;\n\t\t\txr = a[29];\n\t\t\ta[29] += a[2];\n\t\t\ta[2] -= xr;\n\t\t}\n\t}\n\n\t/**\n\t * Function: Calculation of the MDCT In the case of long blocks (type 0,1,3)\n\t * there are 36 coefficents in the time domain and 18 in the frequency\n\t * domain.<BR>\n\t * In the case of short blocks (type 2) there are 3 transformations with\n\t * short length. This leads to 12 coefficents in the time and 6 in the\n\t * frequency domain. In this case the results are stored side by side in the\n\t * vector out[].\n\t *\n\t * New layer3\n\t */\n\tfunction mdct_short(inout, inoutPos) {\n\t\tfor (var l = 0; l < 3; l++) {\n\t\t\tvar tc0, tc1, tc2, ts0, ts1, ts2;\n\n\t\t\tts0 = inout[inoutPos + 2 * 3] * win[Encoder.SHORT_TYPE][0]\n\t\t\t\t\t- inout[inoutPos + 5 * 3];\n\t\t\ttc0 = inout[inoutPos + 0 * 3] * win[Encoder.SHORT_TYPE][2]\n\t\t\t\t\t- inout[inoutPos + 3 * 3];\n\t\t\ttc1 = ts0 + tc0;\n\t\t\ttc2 = ts0 - tc0;\n\n\t\t\tts0 = inout[inoutPos + 5 * 3] * win[Encoder.SHORT_TYPE][0]\n\t\t\t\t\t+ inout[inoutPos + 2 * 3];\n\t\t\ttc0 = inout[inoutPos + 3 * 3] * win[Encoder.SHORT_TYPE][2]\n\t\t\t\t\t+ inout[inoutPos + 0 * 3];\n\t\t\tts1 = ts0 + tc0;\n\t\t\tts2 = -ts0 + tc0;\n\n\t\t\ttc0 = (inout[inoutPos + 1 * 3] * win[Encoder.SHORT_TYPE][1] - inout[inoutPos + 4 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tts0 = (inout[inoutPos + 4 * 3] * win[Encoder.SHORT_TYPE][1] + inout[inoutPos + 1 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 0] = tc1 * 1.907525191737280e-11 + tc0;\n\t\t\t/*\n\t\t\t * tritab_s[ 2 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 5] = -ts1 * 1.907525191737280e-11 + ts0;\n\t\t\t/*\n\t\t\t * tritab_s[0 ]\n\t\t\t */\n\t\t\ttc2 = tc2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 2]\n\t\t\t */\n\t\t\tts1 = ts1 * 0.5 * 1.907525191737281e-11 + ts0;\n\t\t\tinout[inoutPos + 3 * 1] = tc2 - ts1;\n\t\t\tinout[inoutPos + 3 * 2] = tc2 + ts1;\n\n\t\t\ttc1 = tc1 * 0.5 * 1.907525191737281e-11 - tc0;\n\t\t\tts2 = ts2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 0]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 3] = tc1 + ts2;\n\t\t\tinout[inoutPos + 3 * 4] = tc1 - ts2;\n\n\t\t\tinoutPos++;\n\t\t}\n\t}\n\n\tfunction mdct_long(out, outPos, _in) {\n\t\tvar ct, st;\n\t\t{\n\t\t\tvar tc1, tc2, tc3, tc4, ts5, ts6, ts7, ts8;\n\t\t\t/* 1,2, 5,6, 9,10, 13,14, 17 */\n\t\t\ttc1 = _in[17] - _in[9];\n\t\t\ttc3 = _in[15] - _in[11];\n\t\t\ttc4 = _in[14] - _in[12];\n\t\t\tts5 = _in[0] + _in[8];\n\t\t\tts6 = _in[1] + _in[7];\n\t\t\tts7 = _in[2] + _in[6];\n\t\t\tts8 = _in[3] + _in[5];\n\n\t\t\tout[outPos + 17] = (ts5 + ts7 - ts8) - (ts6 - _in[4]);\n\t\t\tst = (ts5 + ts7 - ts8) * cx[12 + 7] + (ts6 - _in[4]);\n\t\t\tct = (tc1 - tc3 - tc4) * cx[12 + 6];\n\t\t\tout[outPos + 5] = ct + st;\n\t\t\tout[outPos + 6] = ct - st;\n\n\t\t\ttc2 = (_in[16] - _in[10]) * cx[12 + 6];\n\t\t\tts6 = ts6 * cx[12 + 7] + _in[4];\n\t\t\tct = tc1 * cx[12 + 0] + tc2 + tc3 * cx[12 + 1] + tc4 * cx[12 + 2];\n\t\t\tst = -ts5 * cx[12 + 4] + ts6 - ts7 * cx[12 + 5] + ts8 * cx[12 + 3];\n\t\t\tout[outPos + 1] = ct + st;\n\t\t\tout[outPos + 2] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 1] - tc2 - tc3 * cx[12 + 2] + tc4 * cx[12 + 0];\n\t\t\tst = -ts5 * cx[12 + 5] + ts6 - ts7 * cx[12 + 3] + ts8 * cx[12 + 4];\n\t\t\tout[outPos + 9] = ct + st;\n\t\t\tout[outPos + 10] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 2] - tc2 + tc3 * cx[12 + 0] - tc4 * cx[12 + 1];\n\t\t\tst = ts5 * cx[12 + 3] - ts6 + ts7 * cx[12 + 4] - ts8 * cx[12 + 5];\n\t\t\tout[outPos + 13] = ct + st;\n\t\t\tout[outPos + 14] = ct - st;\n\t\t}\n\t\t{\n\t\t\tvar ts1, ts2, ts3, ts4, tc5, tc6, tc7, tc8;\n\n\t\t\tts1 = _in[8] - _in[0];\n\t\t\tts3 = _in[6] - _in[2];\n\t\t\tts4 = _in[5] - _in[3];\n\t\t\ttc5 = _in[17] + _in[9];\n\t\t\ttc6 = _in[16] + _in[10];\n\t\t\ttc7 = _in[15] + _in[11];\n\t\t\ttc8 = _in[14] + _in[12];\n\n\t\t\tout[outPos + 0] = (tc5 + tc7 + tc8) + (tc6 + _in[13]);\n\t\t\tct = (tc5 + tc7 + tc8) * cx[12 + 7] - (tc6 + _in[13]);\n\t\t\tst = (ts1 - ts3 + ts4) * cx[12 + 6];\n\t\t\tout[outPos + 11] = ct + st;\n\t\t\tout[outPos + 12] = ct - st;\n\n\t\t\tts2 = (_in[7] - _in[1]) * cx[12 + 6];\n\t\t\ttc6 = _in[13] - tc6 * cx[12 + 7];\n\t\t\tct = tc5 * cx[12 + 3] - tc6 + tc7 * cx[12 + 4] + tc8 * cx[12 + 5];\n\t\t\tst = ts1 * cx[12 + 2] + ts2 + ts3 * cx[12 + 0] + ts4 * cx[12 + 1];\n\t\t\tout[outPos + 3] = ct + st;\n\t\t\tout[outPos + 4] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 5] + tc6 - tc7 * cx[12 + 3] - tc8 * cx[12 + 4];\n\t\t\tst = ts1 * cx[12 + 1] + ts2 - ts3 * cx[12 + 2] - ts4 * cx[12 + 0];\n\t\t\tout[outPos + 7] = ct + st;\n\t\t\tout[outPos + 8] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 4] + tc6 - tc7 * cx[12 + 5] - tc8 * cx[12 + 3];\n\t\t\tst = ts1 * cx[12 + 0] - ts2 + ts3 * cx[12 + 1] - ts4 * cx[12 + 2];\n\t\t\tout[outPos + 15] = ct + st;\n\t\t\tout[outPos + 16] = ct - st;\n\t\t}\n\t}\n\n\tthis.mdct_sub48 = function(gfc, w0, w1) {\n\t\tvar wk = w0;\n\t\tvar wkPos = 286;\n\t\t/* thinking cache performance, ch->gr loop is better than gr->ch loop */\n\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\t\t\t\tvar band;\n\t\t\t\tvar gi = (gfc.l3_side.tt[gr][ch]);\n\t\t\t\tvar mdct_enc = gi.xr;\n\t\t\t\tvar mdct_encPos = 0;\n\t\t\t\tvar samp = gfc.sb_sample[ch][1 - gr];\n\t\t\t\tvar sampPos = 0;\n\n\t\t\t\tfor (var k = 0; k < 18 / 2; k++) {\n\t\t\t\t\twindow_subband(wk, wkPos, samp[sampPos]);\n\t\t\t\t\twindow_subband(wk, wkPos + 32, samp[sampPos + 1]);\n\t\t\t\t\tsampPos += 2;\n\t\t\t\t\twkPos += 64;\n\t\t\t\t\t/*\n\t\t\t\t\t * Compensate for inversion in the analysis filter\n\t\t\t\t\t */\n\t\t\t\t\tfor (band = 1; band < 32; band += 2) {\n\t\t\t\t\t\tsamp[sampPos - 1][band] *= -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * Perform imdct of 18 previous subband samples + 18 current\n\t\t\t\t * subband samples\n\t\t\t\t */\n\t\t\t\tfor (band = 0; band < 32; band++, mdct_encPos += 18) {\n\t\t\t\t\tvar type = gi.block_type;\n\t\t\t\t\tvar band0 = gfc.sb_sample[ch][gr];\n\t\t\t\t\tvar band1 = gfc.sb_sample[ch][1 - gr];\n\t\t\t\t\tif (gi.mixed_block_flag != 0 && band < 2)\n\t\t\t\t\t\ttype = 0;\n\t\t\t\t\tif (gfc.amp_filter[band] < 1e-12) {\n\t\t\t\t\t\tArrays.fill(mdct_enc, mdct_encPos + 0,\n\t\t\t\t\t\t\t\tmdct_encPos + 18, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (gfc.amp_filter[band] < 1.0) {\n\t\t\t\t\t\t\tfor (var k = 0; k < 18; k++)\n\t\t\t\t\t\t\t\tband1[k][order[band]] *= gfc.amp_filter[band];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (type == Encoder.SHORT_TYPE) {\n\t\t\t\t\t\t\tfor (var k = -NS / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar w = win[Encoder.SHORT_TYPE][k + 3];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 9] = band0[9 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 18] = band0[14 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band0[15 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 10] = band0[15 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[14 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 19] = band1[2 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[3 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 11] = band1[3 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band1[2 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 20] = band1[8 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[9 + k][order[band]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmdct_short(mdct_enc, mdct_encPos);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar work = new_float(18);\n\t\t\t\t\t\t\tfor (var k = -NL / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar a, b;\n\t\t\t\t\t\t\t\ta = win[type][k + 27]\n\t\t\t\t\t\t\t\t\t\t* band1[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t+ win[type][k + 36]\n\t\t\t\t\t\t\t\t\t\t* band1[8 - k][order[band]];\n\t\t\t\t\t\t\t\tb = win[type][k + 9]\n\t\t\t\t\t\t\t\t\t\t* band0[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t- win[type][k + 18]\n\t\t\t\t\t\t\t\t\t\t* band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\twork[k + 9] = a - b * tantab_l[3 + k + 9];\n\t\t\t\t\t\t\t\twork[k + 18] = a * tantab_l[3 + k + 9] + b;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmdct_long(mdct_enc, mdct_encPos, work);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\t * Perform aliasing reduction butterfly\n\t\t\t\t\t */\n\t\t\t\t\tif (type != Encoder.SHORT_TYPE && band != 0) {\n\t\t\t\t\t\tfor (var k = 7; k >= 0; --k) {\n\t\t\t\t\t\t\tvar bu, bd;\n\t\t\t\t\t\t\tbu = mdct_enc[mdct_encPos + k] * ca[20 + k]\n\t\t\t\t\t\t\t\t\t+ mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* cs[28 + k];\n\t\t\t\t\t\t\tbd = mdct_enc[mdct_encPos + k] * cs[28 + k]\n\t\t\t\t\t\t\t\t\t- mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* ca[20 + k];\n\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + -1 - k] = bu;\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k] = bd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\twk = w1;\n\t\t\twkPos = 286;\n\t\t\tif (gfc.mode_gr == 1) {\n\t\t\t\tfor (var i = 0; i < 18; i++) {\n\t\t\t\t\tSystem.arraycopy(gfc.sb_sample[ch][1][i], 0,\n\t\t\t\t\t\t\tgfc.sb_sample[ch][0][i], 0, 32);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nmodule.exports = NewMDCT;\n","//package mp3;\n\n/**\n * Layer III side information.\n *\n * @author Ken\n *\n */\n\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\n\nfunction ScaleFac(arrL, arrS, arr21, arr12) {\n\n    this.l = new_int(1 + Encoder.SBMAX_l);\n    this.s = new_int(1 + Encoder.SBMAX_s);\n    this.psfb21 = new_int(1 + Encoder.PSFB21);\n    this.psfb12 = new_int(1 + Encoder.PSFB12);\n    var l = this.l;\n    var s = this.s;\n\n    if (arguments.length == 4) {\n        //public ScaleFac(final int[] arrL, final int[] arrS, final int[] arr21,\n        //    final int[] arr12) {\n        this.arrL = arguments[0];\n        this.arrS = arguments[1];\n        this.arr21 = arguments[2];\n        this.arr12 = arguments[3];\n\n        System.arraycopy(this.arrL, 0, l, 0, Math.min(this.arrL.length, this.l.length));\n        System.arraycopy(this.arrS, 0, s, 0, Math.min(this.arrS.length, this.s.length));\n        System.arraycopy(this.arr21, 0, this.psfb21, 0, Math.min(this.arr21.length, this.psfb21.length));\n        System.arraycopy(this.arr12, 0, this.psfb12, 0, Math.min(this.arr12.length, this.psfb12.length));\n    }\n}\n\nmodule.exports = ScaleFac;\n"],"sourceRoot":""}